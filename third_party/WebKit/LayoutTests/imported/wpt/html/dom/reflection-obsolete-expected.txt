This is a testharness.js-based test.
PASS applet.title: typeof IDL attribute 
PASS applet.title: IDL get with DOM attribute unset 
PASS applet.title: setAttribute() to "" followed by getAttribute() 
PASS applet.title: setAttribute() to "" followed by IDL get 
PASS applet.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.title: setAttribute() to undefined followed by getAttribute() 
PASS applet.title: setAttribute() to undefined followed by IDL get 
PASS applet.title: setAttribute() to 7 followed by getAttribute() 
PASS applet.title: setAttribute() to 7 followed by IDL get 
PASS applet.title: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.title: setAttribute() to 1.5 followed by IDL get 
PASS applet.title: setAttribute() to true followed by getAttribute() 
PASS applet.title: setAttribute() to true followed by IDL get 
PASS applet.title: setAttribute() to false followed by getAttribute() 
PASS applet.title: setAttribute() to false followed by IDL get 
PASS applet.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.title: setAttribute() to NaN followed by getAttribute() 
PASS applet.title: setAttribute() to NaN followed by IDL get 
PASS applet.title: setAttribute() to Infinity followed by getAttribute() 
PASS applet.title: setAttribute() to Infinity followed by IDL get 
PASS applet.title: setAttribute() to -Infinity followed by getAttribute() 
PASS applet.title: setAttribute() to -Infinity followed by IDL get 
PASS applet.title: setAttribute() to "\0" followed by getAttribute() 
PASS applet.title: setAttribute() to "\0" followed by IDL get 
PASS applet.title: setAttribute() to null followed by getAttribute() 
PASS applet.title: setAttribute() to null followed by IDL get 
PASS applet.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.title: setAttribute() to object "test-toString" followed by IDL get 
PASS applet.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.title: IDL set to "" should not throw 
PASS applet.title: IDL set to "" followed by getAttribute() 
PASS applet.title: IDL set to "" followed by IDL get 
PASS applet.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS applet.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.title: IDL set to undefined should not throw 
PASS applet.title: IDL set to undefined followed by getAttribute() 
PASS applet.title: IDL set to undefined followed by IDL get 
PASS applet.title: IDL set to 7 should not throw 
PASS applet.title: IDL set to 7 followed by getAttribute() 
PASS applet.title: IDL set to 7 followed by IDL get 
PASS applet.title: IDL set to 1.5 should not throw 
PASS applet.title: IDL set to 1.5 followed by getAttribute() 
PASS applet.title: IDL set to 1.5 followed by IDL get 
PASS applet.title: IDL set to true should not throw 
PASS applet.title: IDL set to true followed by getAttribute() 
PASS applet.title: IDL set to true followed by IDL get 
PASS applet.title: IDL set to false should not throw 
PASS applet.title: IDL set to false followed by getAttribute() 
PASS applet.title: IDL set to false followed by IDL get 
PASS applet.title: IDL set to object "[object Object]" should not throw 
PASS applet.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS applet.title: IDL set to object "[object Object]" followed by IDL get 
PASS applet.title: IDL set to NaN should not throw 
PASS applet.title: IDL set to NaN followed by getAttribute() 
PASS applet.title: IDL set to NaN followed by IDL get 
PASS applet.title: IDL set to Infinity should not throw 
PASS applet.title: IDL set to Infinity followed by getAttribute() 
PASS applet.title: IDL set to Infinity followed by IDL get 
PASS applet.title: IDL set to -Infinity should not throw 
PASS applet.title: IDL set to -Infinity followed by getAttribute() 
PASS applet.title: IDL set to -Infinity followed by IDL get 
PASS applet.title: IDL set to "\0" should not throw 
PASS applet.title: IDL set to "\0" followed by getAttribute() 
PASS applet.title: IDL set to "\0" followed by IDL get 
PASS applet.title: IDL set to null should not throw 
PASS applet.title: IDL set to null followed by getAttribute() 
PASS applet.title: IDL set to null followed by IDL get 
PASS applet.title: IDL set to object "test-toString" should not throw 
PASS applet.title: IDL set to object "test-toString" followed by getAttribute() 
PASS applet.title: IDL set to object "test-toString" followed by IDL get 
PASS applet.title: IDL set to object "test-valueOf" should not throw 
PASS applet.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS applet.title: IDL set to object "test-valueOf" followed by IDL get 
PASS applet.lang: typeof IDL attribute 
PASS applet.lang: IDL get with DOM attribute unset 
PASS applet.lang: setAttribute() to "" followed by getAttribute() 
PASS applet.lang: setAttribute() to "" followed by IDL get 
PASS applet.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.lang: setAttribute() to undefined followed by getAttribute() 
PASS applet.lang: setAttribute() to undefined followed by IDL get 
PASS applet.lang: setAttribute() to 7 followed by getAttribute() 
PASS applet.lang: setAttribute() to 7 followed by IDL get 
PASS applet.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.lang: setAttribute() to 1.5 followed by IDL get 
PASS applet.lang: setAttribute() to true followed by getAttribute() 
PASS applet.lang: setAttribute() to true followed by IDL get 
PASS applet.lang: setAttribute() to false followed by getAttribute() 
PASS applet.lang: setAttribute() to false followed by IDL get 
PASS applet.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.lang: setAttribute() to NaN followed by getAttribute() 
PASS applet.lang: setAttribute() to NaN followed by IDL get 
PASS applet.lang: setAttribute() to Infinity followed by getAttribute() 
PASS applet.lang: setAttribute() to Infinity followed by IDL get 
PASS applet.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS applet.lang: setAttribute() to -Infinity followed by IDL get 
PASS applet.lang: setAttribute() to "\0" followed by getAttribute() 
PASS applet.lang: setAttribute() to "\0" followed by IDL get 
PASS applet.lang: setAttribute() to null followed by getAttribute() 
PASS applet.lang: setAttribute() to null followed by IDL get 
PASS applet.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS applet.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.lang: IDL set to "" should not throw 
PASS applet.lang: IDL set to "" followed by getAttribute() 
PASS applet.lang: IDL set to "" followed by IDL get 
PASS applet.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS applet.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.lang: IDL set to undefined should not throw 
PASS applet.lang: IDL set to undefined followed by getAttribute() 
PASS applet.lang: IDL set to undefined followed by IDL get 
PASS applet.lang: IDL set to 7 should not throw 
PASS applet.lang: IDL set to 7 followed by getAttribute() 
PASS applet.lang: IDL set to 7 followed by IDL get 
PASS applet.lang: IDL set to 1.5 should not throw 
PASS applet.lang: IDL set to 1.5 followed by getAttribute() 
PASS applet.lang: IDL set to 1.5 followed by IDL get 
PASS applet.lang: IDL set to true should not throw 
PASS applet.lang: IDL set to true followed by getAttribute() 
PASS applet.lang: IDL set to true followed by IDL get 
PASS applet.lang: IDL set to false should not throw 
PASS applet.lang: IDL set to false followed by getAttribute() 
PASS applet.lang: IDL set to false followed by IDL get 
PASS applet.lang: IDL set to object "[object Object]" should not throw 
PASS applet.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS applet.lang: IDL set to object "[object Object]" followed by IDL get 
PASS applet.lang: IDL set to NaN should not throw 
PASS applet.lang: IDL set to NaN followed by getAttribute() 
PASS applet.lang: IDL set to NaN followed by IDL get 
PASS applet.lang: IDL set to Infinity should not throw 
PASS applet.lang: IDL set to Infinity followed by getAttribute() 
PASS applet.lang: IDL set to Infinity followed by IDL get 
PASS applet.lang: IDL set to -Infinity should not throw 
PASS applet.lang: IDL set to -Infinity followed by getAttribute() 
PASS applet.lang: IDL set to -Infinity followed by IDL get 
PASS applet.lang: IDL set to "\0" should not throw 
PASS applet.lang: IDL set to "\0" followed by getAttribute() 
PASS applet.lang: IDL set to "\0" followed by IDL get 
PASS applet.lang: IDL set to null should not throw 
PASS applet.lang: IDL set to null followed by getAttribute() 
PASS applet.lang: IDL set to null followed by IDL get 
PASS applet.lang: IDL set to object "test-toString" should not throw 
PASS applet.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS applet.lang: IDL set to object "test-toString" followed by IDL get 
PASS applet.lang: IDL set to object "test-valueOf" should not throw 
PASS applet.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS applet.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS applet.dir: typeof IDL attribute 
PASS applet.dir: IDL get with DOM attribute unset 
PASS applet.dir: setAttribute() to "" followed by getAttribute() 
PASS applet.dir: setAttribute() to "" followed by IDL get 
PASS applet.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.dir: setAttribute() to undefined followed by getAttribute() 
PASS applet.dir: setAttribute() to undefined followed by IDL get 
PASS applet.dir: setAttribute() to 7 followed by getAttribute() 
PASS applet.dir: setAttribute() to 7 followed by IDL get 
PASS applet.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.dir: setAttribute() to 1.5 followed by IDL get 
PASS applet.dir: setAttribute() to true followed by getAttribute() 
PASS applet.dir: setAttribute() to true followed by IDL get 
PASS applet.dir: setAttribute() to false followed by getAttribute() 
PASS applet.dir: setAttribute() to false followed by IDL get 
PASS applet.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.dir: setAttribute() to NaN followed by getAttribute() 
PASS applet.dir: setAttribute() to NaN followed by IDL get 
PASS applet.dir: setAttribute() to Infinity followed by getAttribute() 
PASS applet.dir: setAttribute() to Infinity followed by IDL get 
PASS applet.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS applet.dir: setAttribute() to -Infinity followed by IDL get 
PASS applet.dir: setAttribute() to "\0" followed by getAttribute() 
PASS applet.dir: setAttribute() to "\0" followed by IDL get 
PASS applet.dir: setAttribute() to null followed by getAttribute() 
PASS applet.dir: setAttribute() to null followed by IDL get 
PASS applet.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS applet.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS applet.dir: setAttribute() to "ltr" followed by IDL get 
PASS applet.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS applet.dir: setAttribute() to "xltr" followed by IDL get 
PASS applet.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS applet.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS applet.dir: setAttribute() to "tr" followed by getAttribute() 
PASS applet.dir: setAttribute() to "tr" followed by IDL get 
PASS applet.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS applet.dir: setAttribute() to "LTR" followed by IDL get 
PASS applet.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS applet.dir: setAttribute() to "rtl" followed by IDL get 
PASS applet.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS applet.dir: setAttribute() to "xrtl" followed by IDL get 
PASS applet.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS applet.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS applet.dir: setAttribute() to "tl" followed by getAttribute() 
PASS applet.dir: setAttribute() to "tl" followed by IDL get 
PASS applet.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS applet.dir: setAttribute() to "RTL" followed by IDL get 
PASS applet.dir: setAttribute() to "auto" followed by getAttribute() 
PASS applet.dir: setAttribute() to "auto" followed by IDL get 
PASS applet.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS applet.dir: setAttribute() to "xauto" followed by IDL get 
PASS applet.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS applet.dir: setAttribute() to "auto\0" followed by IDL get 
PASS applet.dir: setAttribute() to "uto" followed by getAttribute() 
PASS applet.dir: setAttribute() to "uto" followed by IDL get 
PASS applet.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS applet.dir: setAttribute() to "AUTO" followed by IDL get 
PASS applet.dir: IDL set to "" should not throw 
PASS applet.dir: IDL set to "" followed by getAttribute() 
PASS applet.dir: IDL set to "" followed by IDL get 
PASS applet.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS applet.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.dir: IDL set to undefined should not throw 
PASS applet.dir: IDL set to undefined followed by getAttribute() 
PASS applet.dir: IDL set to undefined followed by IDL get 
PASS applet.dir: IDL set to 7 should not throw 
PASS applet.dir: IDL set to 7 followed by getAttribute() 
PASS applet.dir: IDL set to 7 followed by IDL get 
PASS applet.dir: IDL set to 1.5 should not throw 
PASS applet.dir: IDL set to 1.5 followed by getAttribute() 
PASS applet.dir: IDL set to 1.5 followed by IDL get 
PASS applet.dir: IDL set to true should not throw 
PASS applet.dir: IDL set to true followed by getAttribute() 
PASS applet.dir: IDL set to true followed by IDL get 
PASS applet.dir: IDL set to false should not throw 
PASS applet.dir: IDL set to false followed by getAttribute() 
PASS applet.dir: IDL set to false followed by IDL get 
PASS applet.dir: IDL set to object "[object Object]" should not throw 
PASS applet.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS applet.dir: IDL set to object "[object Object]" followed by IDL get 
PASS applet.dir: IDL set to NaN should not throw 
PASS applet.dir: IDL set to NaN followed by getAttribute() 
PASS applet.dir: IDL set to NaN followed by IDL get 
PASS applet.dir: IDL set to Infinity should not throw 
PASS applet.dir: IDL set to Infinity followed by getAttribute() 
PASS applet.dir: IDL set to Infinity followed by IDL get 
PASS applet.dir: IDL set to -Infinity should not throw 
PASS applet.dir: IDL set to -Infinity followed by getAttribute() 
PASS applet.dir: IDL set to -Infinity followed by IDL get 
PASS applet.dir: IDL set to "\0" should not throw 
PASS applet.dir: IDL set to "\0" followed by getAttribute() 
PASS applet.dir: IDL set to "\0" followed by IDL get 
PASS applet.dir: IDL set to null should not throw 
PASS applet.dir: IDL set to null followed by IDL get 
PASS applet.dir: IDL set to object "test-toString" should not throw 
PASS applet.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS applet.dir: IDL set to object "test-toString" followed by IDL get 
PASS applet.dir: IDL set to object "test-valueOf" should not throw 
PASS applet.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS applet.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS applet.dir: IDL set to "ltr" should not throw 
PASS applet.dir: IDL set to "ltr" followed by getAttribute() 
PASS applet.dir: IDL set to "ltr" followed by IDL get 
PASS applet.dir: IDL set to "xltr" should not throw 
PASS applet.dir: IDL set to "xltr" followed by getAttribute() 
PASS applet.dir: IDL set to "xltr" followed by IDL get 
PASS applet.dir: IDL set to "ltr\0" should not throw 
PASS applet.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS applet.dir: IDL set to "ltr\0" followed by IDL get 
PASS applet.dir: IDL set to "tr" should not throw 
PASS applet.dir: IDL set to "tr" followed by getAttribute() 
PASS applet.dir: IDL set to "tr" followed by IDL get 
PASS applet.dir: IDL set to "LTR" should not throw 
PASS applet.dir: IDL set to "LTR" followed by getAttribute() 
PASS applet.dir: IDL set to "LTR" followed by IDL get 
PASS applet.dir: IDL set to "rtl" should not throw 
PASS applet.dir: IDL set to "rtl" followed by getAttribute() 
PASS applet.dir: IDL set to "rtl" followed by IDL get 
PASS applet.dir: IDL set to "xrtl" should not throw 
PASS applet.dir: IDL set to "xrtl" followed by getAttribute() 
PASS applet.dir: IDL set to "xrtl" followed by IDL get 
PASS applet.dir: IDL set to "rtl\0" should not throw 
PASS applet.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS applet.dir: IDL set to "rtl\0" followed by IDL get 
PASS applet.dir: IDL set to "tl" should not throw 
PASS applet.dir: IDL set to "tl" followed by getAttribute() 
PASS applet.dir: IDL set to "tl" followed by IDL get 
PASS applet.dir: IDL set to "RTL" should not throw 
PASS applet.dir: IDL set to "RTL" followed by getAttribute() 
PASS applet.dir: IDL set to "RTL" followed by IDL get 
PASS applet.dir: IDL set to "auto" should not throw 
PASS applet.dir: IDL set to "auto" followed by getAttribute() 
PASS applet.dir: IDL set to "auto" followed by IDL get 
PASS applet.dir: IDL set to "xauto" should not throw 
PASS applet.dir: IDL set to "xauto" followed by getAttribute() 
PASS applet.dir: IDL set to "xauto" followed by IDL get 
PASS applet.dir: IDL set to "auto\0" should not throw 
PASS applet.dir: IDL set to "auto\0" followed by getAttribute() 
PASS applet.dir: IDL set to "auto\0" followed by IDL get 
PASS applet.dir: IDL set to "uto" should not throw 
PASS applet.dir: IDL set to "uto" followed by getAttribute() 
PASS applet.dir: IDL set to "uto" followed by IDL get 
PASS applet.dir: IDL set to "AUTO" should not throw 
PASS applet.dir: IDL set to "AUTO" followed by getAttribute() 
PASS applet.dir: IDL set to "AUTO" followed by IDL get 
PASS applet.className (<applet class>): typeof IDL attribute 
PASS applet.className (<applet class>): IDL get with DOM attribute unset 
PASS applet.className (<applet class>): setAttribute() to "" followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to "" followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to undefined followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to undefined followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to 7 followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to 7 followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to 1.5 followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to 1.5 followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to true followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to true followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to false followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to false followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to NaN followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to NaN followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to Infinity followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to Infinity followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to -Infinity followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to -Infinity followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to "\0" followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to "\0" followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to null followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to null followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to object "test-toString" followed by IDL get 
PASS applet.className (<applet class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.className (<applet class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.className (<applet class>): IDL set to "" should not throw 
PASS applet.className (<applet class>): IDL set to "" followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to "" followed by IDL get 
PASS applet.className (<applet class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS applet.className (<applet class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.className (<applet class>): IDL set to undefined should not throw 
PASS applet.className (<applet class>): IDL set to undefined followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to undefined followed by IDL get 
PASS applet.className (<applet class>): IDL set to 7 should not throw 
PASS applet.className (<applet class>): IDL set to 7 followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to 7 followed by IDL get 
PASS applet.className (<applet class>): IDL set to 1.5 should not throw 
PASS applet.className (<applet class>): IDL set to 1.5 followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to 1.5 followed by IDL get 
PASS applet.className (<applet class>): IDL set to true should not throw 
PASS applet.className (<applet class>): IDL set to true followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to true followed by IDL get 
PASS applet.className (<applet class>): IDL set to false should not throw 
PASS applet.className (<applet class>): IDL set to false followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to false followed by IDL get 
PASS applet.className (<applet class>): IDL set to object "[object Object]" should not throw 
PASS applet.className (<applet class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to object "[object Object]" followed by IDL get 
PASS applet.className (<applet class>): IDL set to NaN should not throw 
PASS applet.className (<applet class>): IDL set to NaN followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to NaN followed by IDL get 
PASS applet.className (<applet class>): IDL set to Infinity should not throw 
PASS applet.className (<applet class>): IDL set to Infinity followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to Infinity followed by IDL get 
PASS applet.className (<applet class>): IDL set to -Infinity should not throw 
PASS applet.className (<applet class>): IDL set to -Infinity followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to -Infinity followed by IDL get 
PASS applet.className (<applet class>): IDL set to "\0" should not throw 
PASS applet.className (<applet class>): IDL set to "\0" followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to "\0" followed by IDL get 
PASS applet.className (<applet class>): IDL set to null should not throw 
PASS applet.className (<applet class>): IDL set to null followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to null followed by IDL get 
PASS applet.className (<applet class>): IDL set to object "test-toString" should not throw 
PASS applet.className (<applet class>): IDL set to object "test-toString" followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to object "test-toString" followed by IDL get 
PASS applet.className (<applet class>): IDL set to object "test-valueOf" should not throw 
PASS applet.className (<applet class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS applet.className (<applet class>): IDL set to object "test-valueOf" followed by IDL get 
PASS applet.hidden: typeof IDL attribute 
PASS applet.hidden: IDL get with DOM attribute unset 
PASS applet.hidden: setAttribute() to "" followed by getAttribute() 
PASS applet.hidden: setAttribute() to "" followed by IDL get 
PASS applet.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS applet.hidden: setAttribute() to " foo " followed by IDL get 
PASS applet.hidden: setAttribute() to undefined followed by getAttribute() 
PASS applet.hidden: setAttribute() to undefined followed by IDL get 
PASS applet.hidden: setAttribute() to null followed by getAttribute() 
PASS applet.hidden: setAttribute() to null followed by IDL get 
PASS applet.hidden: setAttribute() to 7 followed by getAttribute() 
PASS applet.hidden: setAttribute() to 7 followed by IDL get 
PASS applet.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.hidden: setAttribute() to 1.5 followed by IDL get 
PASS applet.hidden: setAttribute() to true followed by getAttribute() 
PASS applet.hidden: setAttribute() to true followed by IDL get 
PASS applet.hidden: setAttribute() to false followed by getAttribute() 
PASS applet.hidden: setAttribute() to false followed by IDL get 
PASS applet.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.hidden: setAttribute() to NaN followed by getAttribute() 
PASS applet.hidden: setAttribute() to NaN followed by IDL get 
PASS applet.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS applet.hidden: setAttribute() to Infinity followed by IDL get 
PASS applet.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS applet.hidden: setAttribute() to -Infinity followed by IDL get 
PASS applet.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS applet.hidden: setAttribute() to "\0" followed by IDL get 
PASS applet.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS applet.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS applet.hidden: setAttribute() to "hidden" followed by IDL get 
PASS applet.hidden: IDL set to "" should not throw 
PASS applet.hidden: IDL set to "" followed by hasAttribute() 
PASS applet.hidden: IDL set to "" followed by IDL get 
PASS applet.hidden: IDL set to " foo " should not throw 
PASS applet.hidden: IDL set to " foo " followed by hasAttribute() 
PASS applet.hidden: IDL set to " foo " followed by IDL get 
PASS applet.hidden: IDL set to undefined should not throw 
PASS applet.hidden: IDL set to undefined followed by hasAttribute() 
PASS applet.hidden: IDL set to undefined followed by IDL get 
PASS applet.hidden: IDL set to null should not throw 
PASS applet.hidden: IDL set to null followed by hasAttribute() 
PASS applet.hidden: IDL set to null followed by IDL get 
PASS applet.hidden: IDL set to 7 should not throw 
PASS applet.hidden: IDL set to 7 followed by hasAttribute() 
PASS applet.hidden: IDL set to 7 followed by IDL get 
PASS applet.hidden: IDL set to 1.5 should not throw 
PASS applet.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS applet.hidden: IDL set to 1.5 followed by IDL get 
PASS applet.hidden: IDL set to true should not throw 
PASS applet.hidden: IDL set to true followed by hasAttribute() 
PASS applet.hidden: IDL set to true followed by IDL get 
PASS applet.hidden: IDL set to false should not throw 
PASS applet.hidden: IDL set to false followed by hasAttribute() 
PASS applet.hidden: IDL set to false followed by IDL get 
PASS applet.hidden: IDL set to object "[object Object]" should not throw 
PASS applet.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS applet.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS applet.hidden: IDL set to NaN should not throw 
PASS applet.hidden: IDL set to NaN followed by hasAttribute() 
PASS applet.hidden: IDL set to NaN followed by IDL get 
PASS applet.hidden: IDL set to Infinity should not throw 
PASS applet.hidden: IDL set to Infinity followed by hasAttribute() 
PASS applet.hidden: IDL set to Infinity followed by IDL get 
PASS applet.hidden: IDL set to -Infinity should not throw 
PASS applet.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS applet.hidden: IDL set to -Infinity followed by IDL get 
PASS applet.hidden: IDL set to "\0" should not throw 
PASS applet.hidden: IDL set to "\0" followed by hasAttribute() 
PASS applet.hidden: IDL set to "\0" followed by IDL get 
PASS applet.hidden: IDL set to object "test-toString" should not throw 
PASS applet.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS applet.hidden: IDL set to object "test-toString" followed by IDL get 
PASS applet.hidden: IDL set to object "test-valueOf" should not throw 
PASS applet.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS applet.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS applet.accessKey: typeof IDL attribute 
PASS applet.accessKey: IDL get with DOM attribute unset 
PASS applet.accessKey: setAttribute() to "" followed by getAttribute() 
PASS applet.accessKey: setAttribute() to "" followed by IDL get 
PASS applet.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS applet.accessKey: setAttribute() to undefined followed by IDL get 
PASS applet.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS applet.accessKey: setAttribute() to 7 followed by IDL get 
PASS applet.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS applet.accessKey: setAttribute() to true followed by getAttribute() 
PASS applet.accessKey: setAttribute() to true followed by IDL get 
PASS applet.accessKey: setAttribute() to false followed by getAttribute() 
PASS applet.accessKey: setAttribute() to false followed by IDL get 
PASS applet.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS applet.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS applet.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS applet.accessKey: setAttribute() to NaN followed by IDL get 
PASS applet.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS applet.accessKey: setAttribute() to Infinity followed by IDL get 
PASS applet.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS applet.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS applet.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS applet.accessKey: setAttribute() to "\0" followed by IDL get 
PASS applet.accessKey: setAttribute() to null followed by getAttribute() 
PASS applet.accessKey: setAttribute() to null followed by IDL get 
PASS applet.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS applet.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS applet.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS applet.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS applet.accessKey: IDL set to "" should not throw 
PASS applet.accessKey: IDL set to "" followed by getAttribute() 
PASS applet.accessKey: IDL set to "" followed by IDL get 
PASS applet.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS applet.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS applet.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.accessKey: IDL set to undefined should not throw 
PASS applet.accessKey: IDL set to undefined followed by getAttribute() 
PASS applet.accessKey: IDL set to undefined followed by IDL get 
PASS applet.accessKey: IDL set to 7 should not throw 
PASS applet.accessKey: IDL set to 7 followed by getAttribute() 
PASS applet.accessKey: IDL set to 7 followed by IDL get 
PASS applet.accessKey: IDL set to 1.5 should not throw 
PASS applet.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS applet.accessKey: IDL set to 1.5 followed by IDL get 
PASS applet.accessKey: IDL set to true should not throw 
PASS applet.accessKey: IDL set to true followed by getAttribute() 
PASS applet.accessKey: IDL set to true followed by IDL get 
PASS applet.accessKey: IDL set to false should not throw 
PASS applet.accessKey: IDL set to false followed by getAttribute() 
PASS applet.accessKey: IDL set to false followed by IDL get 
PASS applet.accessKey: IDL set to object "[object Object]" should not throw 
PASS applet.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS applet.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS applet.accessKey: IDL set to NaN should not throw 
PASS applet.accessKey: IDL set to NaN followed by getAttribute() 
PASS applet.accessKey: IDL set to NaN followed by IDL get 
PASS applet.accessKey: IDL set to Infinity should not throw 
PASS applet.accessKey: IDL set to Infinity followed by getAttribute() 
PASS applet.accessKey: IDL set to Infinity followed by IDL get 
PASS applet.accessKey: IDL set to -Infinity should not throw 
PASS applet.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS applet.accessKey: IDL set to -Infinity followed by IDL get 
PASS applet.accessKey: IDL set to "\0" should not throw 
PASS applet.accessKey: IDL set to "\0" followed by getAttribute() 
PASS applet.accessKey: IDL set to "\0" followed by IDL get 
PASS applet.accessKey: IDL set to null should not throw 
PASS applet.accessKey: IDL set to null followed by getAttribute() 
PASS applet.accessKey: IDL set to null followed by IDL get 
PASS applet.accessKey: IDL set to object "test-toString" should not throw 
PASS applet.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS applet.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS applet.accessKey: IDL set to object "test-valueOf" should not throw 
PASS applet.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS applet.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS applet.tabIndex: typeof IDL attribute 
PASS applet.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to -36 followed by IDL get 
PASS applet.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to -1 followed by IDL get 
PASS applet.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to 0 followed by IDL get 
PASS applet.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to 1 followed by IDL get 
PASS applet.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL applet.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS applet.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL applet.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS applet.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "0" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "1" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS applet.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS applet.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS applet.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS applet.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS applet.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS applet.tabIndex: IDL set to -36 should not throw 
PASS applet.tabIndex: IDL set to -36 followed by getAttribute() 
PASS applet.tabIndex: IDL set to -36 followed by IDL get 
PASS applet.tabIndex: IDL set to -1 should not throw 
PASS applet.tabIndex: IDL set to -1 followed by getAttribute() 
PASS applet.tabIndex: IDL set to -1 followed by IDL get 
PASS applet.tabIndex: IDL set to 0 should not throw 
PASS applet.tabIndex: IDL set to 0 followed by getAttribute() 
PASS applet.tabIndex: IDL set to 0 followed by IDL get 
PASS applet.tabIndex: IDL set to 1 should not throw 
PASS applet.tabIndex: IDL set to 1 followed by getAttribute() 
PASS applet.tabIndex: IDL set to 1 followed by IDL get 
PASS applet.tabIndex: IDL set to 2147483647 should not throw 
PASS applet.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL applet.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS applet.tabIndex: IDL set to -2147483648 should not throw 
PASS applet.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL applet.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
FAIL applet.align: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.align: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.align: setAttribute() to "" followed by getAttribute() 
FAIL applet.align: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.align: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.align: setAttribute() to undefined followed by getAttribute() 
FAIL applet.align: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.align: setAttribute() to 7 followed by getAttribute() 
FAIL applet.align: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.align: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.align: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.align: setAttribute() to true followed by getAttribute() 
FAIL applet.align: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.align: setAttribute() to false followed by getAttribute() 
FAIL applet.align: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.align: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.align: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.align: setAttribute() to NaN followed by getAttribute() 
FAIL applet.align: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.align: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.align: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.align: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.align: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.align: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.align: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.align: setAttribute() to null followed by getAttribute() 
FAIL applet.align: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.align: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.align: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.align: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.align: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.align: IDL set to "" should not throw 
FAIL applet.align: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.align: IDL set to "" followed by IDL get 
PASS applet.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.align: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.align: IDL set to undefined should not throw 
FAIL applet.align: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.align: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.align: IDL set to 7 should not throw 
FAIL applet.align: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.align: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.align: IDL set to 1.5 should not throw 
FAIL applet.align: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.align: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.align: IDL set to true should not throw 
FAIL applet.align: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.align: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.align: IDL set to false should not throw 
FAIL applet.align: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.align: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.align: IDL set to object "[object Object]" should not throw 
FAIL applet.align: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.align: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.align: IDL set to NaN should not throw 
FAIL applet.align: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.align: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.align: IDL set to Infinity should not throw 
FAIL applet.align: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.align: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.align: IDL set to -Infinity should not throw 
FAIL applet.align: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.align: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.align: IDL set to "\0" should not throw 
FAIL applet.align: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.align: IDL set to "\0" followed by IDL get 
PASS applet.align: IDL set to null should not throw 
FAIL applet.align: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.align: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.align: IDL set to object "test-toString" should not throw 
FAIL applet.align: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.align: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.align: IDL set to object "test-valueOf" should not throw 
PASS applet.align: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.align: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.alt: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.alt: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.alt: setAttribute() to "" followed by getAttribute() 
FAIL applet.alt: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.alt: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.alt: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.alt: setAttribute() to undefined followed by getAttribute() 
FAIL applet.alt: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.alt: setAttribute() to 7 followed by getAttribute() 
FAIL applet.alt: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.alt: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.alt: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.alt: setAttribute() to true followed by getAttribute() 
FAIL applet.alt: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.alt: setAttribute() to false followed by getAttribute() 
FAIL applet.alt: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.alt: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.alt: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.alt: setAttribute() to NaN followed by getAttribute() 
FAIL applet.alt: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.alt: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.alt: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.alt: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.alt: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.alt: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.alt: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.alt: setAttribute() to null followed by getAttribute() 
FAIL applet.alt: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.alt: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.alt: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.alt: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.alt: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.alt: IDL set to "" should not throw 
FAIL applet.alt: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.alt: IDL set to "" followed by IDL get 
PASS applet.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.alt: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.alt: IDL set to undefined should not throw 
FAIL applet.alt: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.alt: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.alt: IDL set to 7 should not throw 
FAIL applet.alt: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.alt: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.alt: IDL set to 1.5 should not throw 
FAIL applet.alt: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.alt: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.alt: IDL set to true should not throw 
FAIL applet.alt: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.alt: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.alt: IDL set to false should not throw 
FAIL applet.alt: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.alt: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.alt: IDL set to object "[object Object]" should not throw 
FAIL applet.alt: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.alt: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.alt: IDL set to NaN should not throw 
FAIL applet.alt: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.alt: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.alt: IDL set to Infinity should not throw 
FAIL applet.alt: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.alt: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.alt: IDL set to -Infinity should not throw 
FAIL applet.alt: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.alt: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.alt: IDL set to "\0" should not throw 
FAIL applet.alt: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.alt: IDL set to "\0" followed by IDL get 
PASS applet.alt: IDL set to null should not throw 
FAIL applet.alt: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.alt: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.alt: IDL set to object "test-toString" should not throw 
FAIL applet.alt: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.alt: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.alt: IDL set to object "test-valueOf" should not throw 
PASS applet.alt: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.alt: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.archive: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.archive: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.archive: setAttribute() to "" followed by getAttribute() 
FAIL applet.archive: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.archive: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.archive: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.archive: setAttribute() to undefined followed by getAttribute() 
FAIL applet.archive: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.archive: setAttribute() to 7 followed by getAttribute() 
FAIL applet.archive: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.archive: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.archive: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.archive: setAttribute() to true followed by getAttribute() 
FAIL applet.archive: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.archive: setAttribute() to false followed by getAttribute() 
FAIL applet.archive: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.archive: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.archive: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.archive: setAttribute() to NaN followed by getAttribute() 
FAIL applet.archive: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.archive: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.archive: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.archive: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.archive: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.archive: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.archive: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.archive: setAttribute() to null followed by getAttribute() 
FAIL applet.archive: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.archive: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.archive: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.archive: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.archive: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.archive: IDL set to "" should not throw 
FAIL applet.archive: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.archive: IDL set to "" followed by IDL get 
PASS applet.archive: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.archive: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.archive: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.archive: IDL set to undefined should not throw 
FAIL applet.archive: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.archive: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.archive: IDL set to 7 should not throw 
FAIL applet.archive: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.archive: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.archive: IDL set to 1.5 should not throw 
FAIL applet.archive: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.archive: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.archive: IDL set to true should not throw 
FAIL applet.archive: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.archive: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.archive: IDL set to false should not throw 
FAIL applet.archive: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.archive: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.archive: IDL set to object "[object Object]" should not throw 
FAIL applet.archive: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.archive: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.archive: IDL set to NaN should not throw 
FAIL applet.archive: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.archive: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.archive: IDL set to Infinity should not throw 
FAIL applet.archive: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.archive: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.archive: IDL set to -Infinity should not throw 
FAIL applet.archive: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.archive: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.archive: IDL set to "\0" should not throw 
FAIL applet.archive: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.archive: IDL set to "\0" followed by IDL get 
PASS applet.archive: IDL set to null should not throw 
FAIL applet.archive: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.archive: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.archive: IDL set to object "test-toString" should not throw 
FAIL applet.archive: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.archive: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.archive: IDL set to object "test-valueOf" should not throw 
PASS applet.archive: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.archive: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.code: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.code: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.code: setAttribute() to "" followed by getAttribute() 
FAIL applet.code: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.code: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.code: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.code: setAttribute() to undefined followed by getAttribute() 
FAIL applet.code: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.code: setAttribute() to 7 followed by getAttribute() 
FAIL applet.code: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.code: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.code: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.code: setAttribute() to true followed by getAttribute() 
FAIL applet.code: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.code: setAttribute() to false followed by getAttribute() 
FAIL applet.code: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.code: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.code: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.code: setAttribute() to NaN followed by getAttribute() 
FAIL applet.code: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.code: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.code: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.code: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.code: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.code: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.code: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.code: setAttribute() to null followed by getAttribute() 
FAIL applet.code: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.code: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.code: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.code: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.code: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.code: IDL set to "" should not throw 
FAIL applet.code: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.code: IDL set to "" followed by IDL get 
PASS applet.code: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.code: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.code: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.code: IDL set to undefined should not throw 
FAIL applet.code: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.code: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.code: IDL set to 7 should not throw 
FAIL applet.code: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.code: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.code: IDL set to 1.5 should not throw 
FAIL applet.code: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.code: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.code: IDL set to true should not throw 
FAIL applet.code: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.code: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.code: IDL set to false should not throw 
FAIL applet.code: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.code: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.code: IDL set to object "[object Object]" should not throw 
FAIL applet.code: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.code: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.code: IDL set to NaN should not throw 
FAIL applet.code: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.code: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.code: IDL set to Infinity should not throw 
FAIL applet.code: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.code: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.code: IDL set to -Infinity should not throw 
FAIL applet.code: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.code: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.code: IDL set to "\0" should not throw 
FAIL applet.code: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.code: IDL set to "\0" followed by IDL get 
PASS applet.code: IDL set to null should not throw 
FAIL applet.code: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.code: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.code: IDL set to object "test-toString" should not throw 
FAIL applet.code: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.code: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.code: IDL set to object "test-valueOf" should not throw 
PASS applet.code: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.code: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.codeBase: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.codeBase: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to "" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to "" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to " foo " followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "file:///.../html/dom/foo" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "file://site.example/path???@#l" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to undefined followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "file:///.../html/dom/undefined" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to 7 followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/7" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/1.5" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to true followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to true followed by IDL get assert_equals: expected (string) "file:///.../html/dom/true" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to false followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to false followed by IDL get assert_equals: expected (string) "file:///.../html/dom/false" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/[object%20Object]" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to NaN followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "file:///.../html/dom/NaN" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/Infinity" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/-Infinity" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to null followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to null followed by IDL get assert_equals: expected (string) "file:///.../html/dom/null" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-toString" but got (undefined) undefined
PASS applet.codeBase: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.codeBase: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-valueOf" but got (undefined) undefined
PASS applet.codeBase: IDL set to "" should not throw 
FAIL applet.codeBase: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL applet.codeBase: IDL set to "" followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got ""
PASS applet.codeBase: IDL set to " foo " should not throw 
FAIL applet.codeBase: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL applet.codeBase: IDL set to " foo " followed by IDL get assert_equals: expected "file:///.../html/dom/foo" but got " foo "
PASS applet.codeBase: IDL set to "http://site.example/" should not throw 
FAIL applet.codeBase: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS applet.codeBase: IDL set to "http://site.example/" followed by IDL get 
PASS applet.codeBase: IDL set to "//site.example/path???@#l" should not throw 
FAIL applet.codeBase: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL applet.codeBase: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "file://site.example/path???@#l" but got "//site.example/path???@#l"
PASS applet.codeBase: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL applet.codeBase: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL applet.codeBase: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS applet.codeBase: IDL set to undefined should not throw 
FAIL applet.codeBase: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.codeBase: IDL set to undefined followed by IDL get assert_equals: expected (string) "file:///.../html/dom/undefined" but got (undefined) undefined
PASS applet.codeBase: IDL set to 7 should not throw 
FAIL applet.codeBase: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.codeBase: IDL set to 7 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/7" but got (number) 7
PASS applet.codeBase: IDL set to 1.5 should not throw 
FAIL applet.codeBase: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.codeBase: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/1.5" but got (number) 1.5
PASS applet.codeBase: IDL set to true should not throw 
FAIL applet.codeBase: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.codeBase: IDL set to true followed by IDL get assert_equals: expected (string) "file:///.../html/dom/true" but got (boolean) true
PASS applet.codeBase: IDL set to false should not throw 
FAIL applet.codeBase: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.codeBase: IDL set to false followed by IDL get assert_equals: expected (string) "file:///.../html/dom/false" but got (boolean) false
PASS applet.codeBase: IDL set to object "[object Object]" should not throw 
FAIL applet.codeBase: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.codeBase: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS applet.codeBase: IDL set to NaN should not throw 
FAIL applet.codeBase: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.codeBase: IDL set to NaN followed by IDL get assert_equals: expected (string) "file:///.../html/dom/NaN" but got (number) NaN
PASS applet.codeBase: IDL set to Infinity should not throw 
FAIL applet.codeBase: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.codeBase: IDL set to Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/Infinity" but got (number) Infinity
PASS applet.codeBase: IDL set to -Infinity should not throw 
FAIL applet.codeBase: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.codeBase: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/-Infinity" but got (number) -Infinity
PASS applet.codeBase: IDL set to "\0" should not throw 
FAIL applet.codeBase: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL applet.codeBase: IDL set to "\0" followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got "\0"
PASS applet.codeBase: IDL set to null should not throw 
FAIL applet.codeBase: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.codeBase: IDL set to null followed by IDL get assert_equals: expected (string) "file:///.../html/dom/null" but got (object) null
PASS applet.codeBase: IDL set to object "test-toString" should not throw 
FAIL applet.codeBase: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.codeBase: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-toString" but got (object) object "test-toString"
PASS applet.codeBase: IDL set to object "test-valueOf" should not throw 
PASS applet.codeBase: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.codeBase: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL applet.height: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.height: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.height: setAttribute() to "" followed by getAttribute() 
FAIL applet.height: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.height: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.height: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.height: setAttribute() to undefined followed by getAttribute() 
FAIL applet.height: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.height: setAttribute() to 7 followed by getAttribute() 
FAIL applet.height: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.height: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.height: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.height: setAttribute() to true followed by getAttribute() 
FAIL applet.height: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.height: setAttribute() to false followed by getAttribute() 
FAIL applet.height: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.height: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.height: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.height: setAttribute() to NaN followed by getAttribute() 
FAIL applet.height: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.height: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.height: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.height: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.height: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.height: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.height: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.height: setAttribute() to null followed by getAttribute() 
FAIL applet.height: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.height: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.height: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.height: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.height: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.height: IDL set to "" should not throw 
FAIL applet.height: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.height: IDL set to "" followed by IDL get 
PASS applet.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.height: IDL set to undefined should not throw 
FAIL applet.height: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.height: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.height: IDL set to 7 should not throw 
FAIL applet.height: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.height: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.height: IDL set to 1.5 should not throw 
FAIL applet.height: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.height: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.height: IDL set to true should not throw 
FAIL applet.height: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.height: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.height: IDL set to false should not throw 
FAIL applet.height: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.height: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.height: IDL set to object "[object Object]" should not throw 
FAIL applet.height: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.height: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.height: IDL set to NaN should not throw 
FAIL applet.height: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.height: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.height: IDL set to Infinity should not throw 
FAIL applet.height: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.height: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.height: IDL set to -Infinity should not throw 
FAIL applet.height: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.height: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.height: IDL set to "\0" should not throw 
FAIL applet.height: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.height: IDL set to "\0" followed by IDL get 
PASS applet.height: IDL set to null should not throw 
FAIL applet.height: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.height: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.height: IDL set to object "test-toString" should not throw 
FAIL applet.height: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.height: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.height: IDL set to object "test-valueOf" should not throw 
PASS applet.height: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.height: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.hspace: typeof IDL attribute assert_equals: expected "number" but got "undefined"
FAIL applet.hspace: IDL get with DOM attribute unset assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to -2147483649 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to -2147483649 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to -2147483648 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to -2147483648 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to -36 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to -36 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to -1 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to -1 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 0 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 0 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 1 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 1 followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 257 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 257 followed by IDL get assert_equals: expected (number) 257 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 2147483647 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 2147483647 followed by IDL get assert_equals: expected (number) 2147483647 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 2147483648 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 2147483648 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 4294967295 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 4294967295 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 4294967296 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 4294967296 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "-1" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "-1" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "-0" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "-0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "0" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "1" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "1" followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\t7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\t7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\v7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\v7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\f7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\f7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "﻿7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "﻿7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\n7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\n7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\r7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\r7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "᠎7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "᠎7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "　7" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "　7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.hspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to undefined followed by getAttribute() 
FAIL applet.hspace: setAttribute() to undefined followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.hspace: setAttribute() to 1.5 followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.hspace: setAttribute() to true followed by getAttribute() 
FAIL applet.hspace: setAttribute() to true followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to false followed by getAttribute() 
FAIL applet.hspace: setAttribute() to false followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to NaN followed by getAttribute() 
FAIL applet.hspace: setAttribute() to NaN followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.hspace: setAttribute() to Infinity followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.hspace: setAttribute() to -Infinity followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to "\0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: setAttribute() to object "2" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to object "2" followed by IDL get assert_equals: expected (number) 2 but got (undefined) undefined
PASS applet.hspace: setAttribute() to object "3" followed by getAttribute() 
FAIL applet.hspace: setAttribute() to object "3" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.hspace: IDL set to 0 should not throw 
FAIL applet.hspace: IDL set to 0 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
PASS applet.hspace: IDL set to 0 followed by IDL get 
PASS applet.hspace: IDL set to 1 should not throw 
FAIL applet.hspace: IDL set to 1 followed by getAttribute() assert_equals: expected "1" but got "[object Object]"
PASS applet.hspace: IDL set to 1 followed by IDL get 
PASS applet.hspace: IDL set to 257 should not throw 
FAIL applet.hspace: IDL set to 257 followed by getAttribute() assert_equals: expected "257" but got "[object Object]"
PASS applet.hspace: IDL set to 257 followed by IDL get 
PASS applet.hspace: IDL set to 2147483647 should not throw 
FAIL applet.hspace: IDL set to 2147483647 followed by getAttribute() assert_equals: expected "2147483647" but got "[object Object]"
PASS applet.hspace: IDL set to 2147483647 followed by IDL get 
PASS applet.hspace: IDL set to "-0" should not throw 
FAIL applet.hspace: IDL set to "-0" followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.hspace: IDL set to "-0" followed by IDL get assert_equals: expected (number) 0 but got (string) "-0"
PASS applet.hspace: IDL set to 2147483648 should not throw 
FAIL applet.hspace: IDL set to 2147483648 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.hspace: IDL set to 2147483648 followed by IDL get assert_equals: expected 0 but got 2147483648
PASS applet.hspace: IDL set to 4294967295 should not throw 
FAIL applet.hspace: IDL set to 4294967295 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.hspace: IDL set to 4294967295 followed by IDL get assert_equals: expected 0 but got 4294967295
FAIL applet.name: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.name: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.name: setAttribute() to "" followed by getAttribute() 
FAIL applet.name: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.name: setAttribute() to undefined followed by getAttribute() 
FAIL applet.name: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.name: setAttribute() to 7 followed by getAttribute() 
FAIL applet.name: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.name: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.name: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.name: setAttribute() to true followed by getAttribute() 
FAIL applet.name: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.name: setAttribute() to false followed by getAttribute() 
FAIL applet.name: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.name: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.name: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.name: setAttribute() to NaN followed by getAttribute() 
FAIL applet.name: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.name: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.name: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.name: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.name: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.name: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.name: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.name: setAttribute() to null followed by getAttribute() 
FAIL applet.name: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.name: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.name: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.name: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.name: IDL set to "" should not throw 
FAIL applet.name: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.name: IDL set to "" followed by IDL get 
PASS applet.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.name: IDL set to undefined should not throw 
FAIL applet.name: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.name: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.name: IDL set to 7 should not throw 
FAIL applet.name: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.name: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.name: IDL set to 1.5 should not throw 
FAIL applet.name: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.name: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.name: IDL set to true should not throw 
FAIL applet.name: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.name: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.name: IDL set to false should not throw 
FAIL applet.name: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.name: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.name: IDL set to object "[object Object]" should not throw 
FAIL applet.name: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.name: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.name: IDL set to NaN should not throw 
FAIL applet.name: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.name: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.name: IDL set to Infinity should not throw 
FAIL applet.name: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.name: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.name: IDL set to -Infinity should not throw 
FAIL applet.name: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.name: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.name: IDL set to "\0" should not throw 
FAIL applet.name: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.name: IDL set to "\0" followed by IDL get 
PASS applet.name: IDL set to null should not throw 
FAIL applet.name: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.name: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.name: IDL set to object "test-toString" should not throw 
FAIL applet.name: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.name: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.name: IDL set to object "test-valueOf" should not throw 
PASS applet.name: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.name: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
FAIL applet.object: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.object: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.object: setAttribute() to "" followed by getAttribute() 
FAIL applet.object: setAttribute() to "" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.object: setAttribute() to " foo " followed by getAttribute() 
FAIL applet.object: setAttribute() to " foo " followed by IDL get assert_equals: expected (string) "file:///.../html/dom/foo" but got (undefined) undefined
PASS applet.object: setAttribute() to "http://site.example/" followed by getAttribute() 
FAIL applet.object: setAttribute() to "http://site.example/" followed by IDL get assert_equals: expected (string) "http://site.example/" but got (undefined) undefined
PASS applet.object: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
FAIL applet.object: setAttribute() to "//site.example/path???@#l" followed by IDL get assert_equals: expected (string) "file://site.example/path???@#l" but got (undefined) undefined
PASS applet.object: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
FAIL applet.object: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.object: setAttribute() to undefined followed by getAttribute() 
FAIL applet.object: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "file:///.../html/dom/undefined" but got (undefined) undefined
PASS applet.object: setAttribute() to 7 followed by getAttribute() 
FAIL applet.object: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/7" but got (undefined) undefined
PASS applet.object: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.object: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/1.5" but got (undefined) undefined
PASS applet.object: setAttribute() to true followed by getAttribute() 
FAIL applet.object: setAttribute() to true followed by IDL get assert_equals: expected (string) "file:///.../html/dom/true" but got (undefined) undefined
PASS applet.object: setAttribute() to false followed by getAttribute() 
FAIL applet.object: setAttribute() to false followed by IDL get assert_equals: expected (string) "file:///.../html/dom/false" but got (undefined) undefined
PASS applet.object: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.object: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/[object%20Object]" but got (undefined) undefined
PASS applet.object: setAttribute() to NaN followed by getAttribute() 
FAIL applet.object: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "file:///.../html/dom/NaN" but got (undefined) undefined
PASS applet.object: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.object: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/Infinity" but got (undefined) undefined
PASS applet.object: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.object: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/-Infinity" but got (undefined) undefined
PASS applet.object: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.object: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/reflection-obsolete.html" but got (undefined) undefined
PASS applet.object: setAttribute() to null followed by getAttribute() 
FAIL applet.object: setAttribute() to null followed by IDL get assert_equals: expected (string) "file:///.../html/dom/null" but got (undefined) undefined
PASS applet.object: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.object: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-toString" but got (undefined) undefined
PASS applet.object: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.object: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-valueOf" but got (undefined) undefined
PASS applet.object: IDL set to "" should not throw 
FAIL applet.object: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
FAIL applet.object: IDL set to "" followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got ""
PASS applet.object: IDL set to " foo " should not throw 
FAIL applet.object: IDL set to " foo " followed by getAttribute() assert_equals: expected " foo " but got "test-valueOf"
FAIL applet.object: IDL set to " foo " followed by IDL get assert_equals: expected "file:///.../html/dom/foo" but got " foo "
PASS applet.object: IDL set to "http://site.example/" should not throw 
FAIL applet.object: IDL set to "http://site.example/" followed by getAttribute() assert_equals: expected "http://site.example/" but got "test-valueOf"
PASS applet.object: IDL set to "http://site.example/" followed by IDL get 
PASS applet.object: IDL set to "//site.example/path???@#l" should not throw 
FAIL applet.object: IDL set to "//site.example/path???@#l" followed by getAttribute() assert_equals: expected "//site.example/path???@#l" but got "test-valueOf"
FAIL applet.object: IDL set to "//site.example/path???@#l" followed by IDL get assert_equals: expected "file://site.example/path???@#l" but got "//site.example/path???@#l"
PASS applet.object: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
FAIL applet.object: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() assert_equals: expected "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " but got "test-valueOf"
FAIL applet.object: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f "
PASS applet.object: IDL set to undefined should not throw 
FAIL applet.object: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.object: IDL set to undefined followed by IDL get assert_equals: expected (string) "file:///.../html/dom/undefined" but got (undefined) undefined
PASS applet.object: IDL set to 7 should not throw 
FAIL applet.object: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.object: IDL set to 7 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/7" but got (number) 7
PASS applet.object: IDL set to 1.5 should not throw 
FAIL applet.object: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.object: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "file:///.../html/dom/1.5" but got (number) 1.5
PASS applet.object: IDL set to true should not throw 
FAIL applet.object: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.object: IDL set to true followed by IDL get assert_equals: expected (string) "file:///.../html/dom/true" but got (boolean) true
PASS applet.object: IDL set to false should not throw 
FAIL applet.object: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.object: IDL set to false followed by IDL get assert_equals: expected (string) "file:///.../html/dom/false" but got (boolean) false
PASS applet.object: IDL set to object "[object Object]" should not throw 
FAIL applet.object: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.object: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/[object%20Object]" but got (object) object "[object Object]"
PASS applet.object: IDL set to NaN should not throw 
FAIL applet.object: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.object: IDL set to NaN followed by IDL get assert_equals: expected (string) "file:///.../html/dom/NaN" but got (number) NaN
PASS applet.object: IDL set to Infinity should not throw 
FAIL applet.object: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.object: IDL set to Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/Infinity" but got (number) Infinity
PASS applet.object: IDL set to -Infinity should not throw 
FAIL applet.object: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.object: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "file:///.../html/dom/-Infinity" but got (number) -Infinity
PASS applet.object: IDL set to "\0" should not throw 
FAIL applet.object: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
FAIL applet.object: IDL set to "\0" followed by IDL get assert_equals: expected "file:///.../html/dom/reflection-obsolete.html" but got "\0"
PASS applet.object: IDL set to null should not throw 
FAIL applet.object: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.object: IDL set to null followed by IDL get assert_equals: expected (string) "file:///.../html/dom/null" but got (object) null
PASS applet.object: IDL set to object "test-toString" should not throw 
FAIL applet.object: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.object: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-toString" but got (object) object "test-toString"
PASS applet.object: IDL set to object "test-valueOf" should not throw 
PASS applet.object: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.object: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "file:///.../html/dom/test-valueOf" but got (object) object "test-valueOf"
FAIL applet.vspace: typeof IDL attribute assert_equals: expected "number" but got "undefined"
FAIL applet.vspace: IDL get with DOM attribute unset assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to -2147483649 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to -2147483649 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to -2147483648 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to -2147483648 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to -36 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to -36 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to -1 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to -1 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 0 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 0 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 1 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 1 followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 257 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 257 followed by IDL get assert_equals: expected (number) 257 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 2147483647 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 2147483647 followed by IDL get assert_equals: expected (number) 2147483647 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 2147483648 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 2147483648 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 4294967295 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 4294967295 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 4294967296 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 4294967296 followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "-1" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "-1" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "-0" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "-0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "0" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "1" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "1" followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\t7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\t7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\v7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\v7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\f7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\f7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "﻿7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "﻿7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\n7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\n7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\r7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\r7" followed by IDL get assert_equals: expected (number) 7 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "᠎7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "᠎7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "　7" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "　7" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.vspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to undefined followed by getAttribute() 
FAIL applet.vspace: setAttribute() to undefined followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.vspace: setAttribute() to 1.5 followed by IDL get assert_equals: expected (number) 1 but got (undefined) undefined
PASS applet.vspace: setAttribute() to true followed by getAttribute() 
FAIL applet.vspace: setAttribute() to true followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to false followed by getAttribute() 
FAIL applet.vspace: setAttribute() to false followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to NaN followed by getAttribute() 
FAIL applet.vspace: setAttribute() to NaN followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.vspace: setAttribute() to Infinity followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.vspace: setAttribute() to -Infinity followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to "\0" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: setAttribute() to object "2" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to object "2" followed by IDL get assert_equals: expected (number) 2 but got (undefined) undefined
PASS applet.vspace: setAttribute() to object "3" followed by getAttribute() 
FAIL applet.vspace: setAttribute() to object "3" followed by IDL get assert_equals: expected (number) 0 but got (undefined) undefined
PASS applet.vspace: IDL set to 0 should not throw 
FAIL applet.vspace: IDL set to 0 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
PASS applet.vspace: IDL set to 0 followed by IDL get 
PASS applet.vspace: IDL set to 1 should not throw 
FAIL applet.vspace: IDL set to 1 followed by getAttribute() assert_equals: expected "1" but got "[object Object]"
PASS applet.vspace: IDL set to 1 followed by IDL get 
PASS applet.vspace: IDL set to 257 should not throw 
FAIL applet.vspace: IDL set to 257 followed by getAttribute() assert_equals: expected "257" but got "[object Object]"
PASS applet.vspace: IDL set to 257 followed by IDL get 
PASS applet.vspace: IDL set to 2147483647 should not throw 
FAIL applet.vspace: IDL set to 2147483647 followed by getAttribute() assert_equals: expected "2147483647" but got "[object Object]"
PASS applet.vspace: IDL set to 2147483647 followed by IDL get 
PASS applet.vspace: IDL set to "-0" should not throw 
FAIL applet.vspace: IDL set to "-0" followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.vspace: IDL set to "-0" followed by IDL get assert_equals: expected (number) 0 but got (string) "-0"
PASS applet.vspace: IDL set to 2147483648 should not throw 
FAIL applet.vspace: IDL set to 2147483648 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.vspace: IDL set to 2147483648 followed by IDL get assert_equals: expected 0 but got 2147483648
PASS applet.vspace: IDL set to 4294967295 should not throw 
FAIL applet.vspace: IDL set to 4294967295 followed by getAttribute() assert_equals: expected "0" but got "[object Object]"
FAIL applet.vspace: IDL set to 4294967295 followed by IDL get assert_equals: expected 0 but got 4294967295
FAIL applet.width: typeof IDL attribute assert_equals: expected "string" but got "undefined"
FAIL applet.width: IDL get with DOM attribute unset assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.width: setAttribute() to "" followed by getAttribute() 
FAIL applet.width: setAttribute() to "" followed by IDL get assert_equals: expected (string) "" but got (undefined) undefined
PASS applet.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
FAIL applet.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get assert_equals: expected (string) " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got (undefined) undefined
PASS applet.width: setAttribute() to undefined followed by getAttribute() 
FAIL applet.width: setAttribute() to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.width: setAttribute() to 7 followed by getAttribute() 
FAIL applet.width: setAttribute() to 7 followed by IDL get assert_equals: expected (string) "7" but got (undefined) undefined
PASS applet.width: setAttribute() to 1.5 followed by getAttribute() 
FAIL applet.width: setAttribute() to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (undefined) undefined
PASS applet.width: setAttribute() to true followed by getAttribute() 
FAIL applet.width: setAttribute() to true followed by IDL get assert_equals: expected (string) "true" but got (undefined) undefined
PASS applet.width: setAttribute() to false followed by getAttribute() 
FAIL applet.width: setAttribute() to false followed by IDL get assert_equals: expected (string) "false" but got (undefined) undefined
PASS applet.width: setAttribute() to object "[object Object]" followed by getAttribute() 
FAIL applet.width: setAttribute() to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (undefined) undefined
PASS applet.width: setAttribute() to NaN followed by getAttribute() 
FAIL applet.width: setAttribute() to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (undefined) undefined
PASS applet.width: setAttribute() to Infinity followed by getAttribute() 
FAIL applet.width: setAttribute() to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (undefined) undefined
PASS applet.width: setAttribute() to -Infinity followed by getAttribute() 
FAIL applet.width: setAttribute() to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (undefined) undefined
PASS applet.width: setAttribute() to "\0" followed by getAttribute() 
FAIL applet.width: setAttribute() to "\0" followed by IDL get assert_equals: expected (string) "\0" but got (undefined) undefined
PASS applet.width: setAttribute() to null followed by getAttribute() 
FAIL applet.width: setAttribute() to null followed by IDL get assert_equals: expected (string) "null" but got (undefined) undefined
PASS applet.width: setAttribute() to object "test-toString" followed by getAttribute() 
FAIL applet.width: setAttribute() to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (undefined) undefined
PASS applet.width: setAttribute() to object "test-valueOf" followed by getAttribute() 
FAIL applet.width: setAttribute() to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (undefined) undefined
PASS applet.width: IDL set to "" should not throw 
FAIL applet.width: IDL set to "" followed by getAttribute() assert_equals: expected "" but got "test-valueOf"
PASS applet.width: IDL set to "" followed by IDL get 
PASS applet.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
FAIL applet.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() assert_equals: expected " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " but got "test-valueOf"
PASS applet.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS applet.width: IDL set to undefined should not throw 
FAIL applet.width: IDL set to undefined followed by getAttribute() assert_equals: expected "undefined" but got "test-valueOf"
FAIL applet.width: IDL set to undefined followed by IDL get assert_equals: expected (string) "undefined" but got (undefined) undefined
PASS applet.width: IDL set to 7 should not throw 
FAIL applet.width: IDL set to 7 followed by getAttribute() assert_equals: expected "7" but got "test-valueOf"
FAIL applet.width: IDL set to 7 followed by IDL get assert_equals: expected (string) "7" but got (number) 7
PASS applet.width: IDL set to 1.5 should not throw 
FAIL applet.width: IDL set to 1.5 followed by getAttribute() assert_equals: expected "1.5" but got "test-valueOf"
FAIL applet.width: IDL set to 1.5 followed by IDL get assert_equals: expected (string) "1.5" but got (number) 1.5
PASS applet.width: IDL set to true should not throw 
FAIL applet.width: IDL set to true followed by getAttribute() assert_equals: expected "true" but got "test-valueOf"
FAIL applet.width: IDL set to true followed by IDL get assert_equals: expected (string) "true" but got (boolean) true
PASS applet.width: IDL set to false should not throw 
FAIL applet.width: IDL set to false followed by getAttribute() assert_equals: expected "false" but got "test-valueOf"
FAIL applet.width: IDL set to false followed by IDL get assert_equals: expected (string) "false" but got (boolean) false
PASS applet.width: IDL set to object "[object Object]" should not throw 
FAIL applet.width: IDL set to object "[object Object]" followed by getAttribute() assert_equals: expected "[object Object]" but got "test-valueOf"
FAIL applet.width: IDL set to object "[object Object]" followed by IDL get assert_equals: expected (string) "[object Object]" but got (object) object "[object Object]"
PASS applet.width: IDL set to NaN should not throw 
FAIL applet.width: IDL set to NaN followed by getAttribute() assert_equals: expected "NaN" but got "test-valueOf"
FAIL applet.width: IDL set to NaN followed by IDL get assert_equals: expected (string) "NaN" but got (number) NaN
PASS applet.width: IDL set to Infinity should not throw 
FAIL applet.width: IDL set to Infinity followed by getAttribute() assert_equals: expected "Infinity" but got "test-valueOf"
FAIL applet.width: IDL set to Infinity followed by IDL get assert_equals: expected (string) "Infinity" but got (number) Infinity
PASS applet.width: IDL set to -Infinity should not throw 
FAIL applet.width: IDL set to -Infinity followed by getAttribute() assert_equals: expected "-Infinity" but got "test-valueOf"
FAIL applet.width: IDL set to -Infinity followed by IDL get assert_equals: expected (string) "-Infinity" but got (number) -Infinity
PASS applet.width: IDL set to "\0" should not throw 
FAIL applet.width: IDL set to "\0" followed by getAttribute() assert_equals: expected "\0" but got "test-valueOf"
PASS applet.width: IDL set to "\0" followed by IDL get 
PASS applet.width: IDL set to null should not throw 
FAIL applet.width: IDL set to null followed by getAttribute() assert_equals: expected "null" but got "test-valueOf"
FAIL applet.width: IDL set to null followed by IDL get assert_equals: expected (string) "null" but got (object) null
PASS applet.width: IDL set to object "test-toString" should not throw 
FAIL applet.width: IDL set to object "test-toString" followed by getAttribute() assert_equals: expected "test-toString" but got "test-valueOf"
FAIL applet.width: IDL set to object "test-toString" followed by IDL get assert_equals: expected (string) "test-toString" but got (object) object "test-toString"
PASS applet.width: IDL set to object "test-valueOf" should not throw 
PASS applet.width: IDL set to object "test-valueOf" followed by getAttribute() 
FAIL applet.width: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected (string) "test-valueOf" but got (object) object "test-valueOf"
PASS marquee.title: typeof IDL attribute 
PASS marquee.title: IDL get with DOM attribute unset 
PASS marquee.title: setAttribute() to "" followed by getAttribute() 
PASS marquee.title: setAttribute() to "" followed by IDL get 
PASS marquee.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.title: setAttribute() to undefined followed by getAttribute() 
PASS marquee.title: setAttribute() to undefined followed by IDL get 
PASS marquee.title: setAttribute() to 7 followed by getAttribute() 
PASS marquee.title: setAttribute() to 7 followed by IDL get 
PASS marquee.title: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.title: setAttribute() to 1.5 followed by IDL get 
PASS marquee.title: setAttribute() to true followed by getAttribute() 
PASS marquee.title: setAttribute() to true followed by IDL get 
PASS marquee.title: setAttribute() to false followed by getAttribute() 
PASS marquee.title: setAttribute() to false followed by IDL get 
PASS marquee.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.title: setAttribute() to NaN followed by getAttribute() 
PASS marquee.title: setAttribute() to NaN followed by IDL get 
PASS marquee.title: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.title: setAttribute() to Infinity followed by IDL get 
PASS marquee.title: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.title: setAttribute() to -Infinity followed by IDL get 
PASS marquee.title: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.title: setAttribute() to "\0" followed by IDL get 
PASS marquee.title: setAttribute() to null followed by getAttribute() 
PASS marquee.title: setAttribute() to null followed by IDL get 
PASS marquee.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.title: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.title: IDL set to "" should not throw 
PASS marquee.title: IDL set to "" followed by getAttribute() 
PASS marquee.title: IDL set to "" followed by IDL get 
PASS marquee.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.title: IDL set to undefined should not throw 
PASS marquee.title: IDL set to undefined followed by getAttribute() 
PASS marquee.title: IDL set to undefined followed by IDL get 
PASS marquee.title: IDL set to 7 should not throw 
PASS marquee.title: IDL set to 7 followed by getAttribute() 
PASS marquee.title: IDL set to 7 followed by IDL get 
PASS marquee.title: IDL set to 1.5 should not throw 
PASS marquee.title: IDL set to 1.5 followed by getAttribute() 
PASS marquee.title: IDL set to 1.5 followed by IDL get 
PASS marquee.title: IDL set to true should not throw 
PASS marquee.title: IDL set to true followed by getAttribute() 
PASS marquee.title: IDL set to true followed by IDL get 
PASS marquee.title: IDL set to false should not throw 
PASS marquee.title: IDL set to false followed by getAttribute() 
PASS marquee.title: IDL set to false followed by IDL get 
PASS marquee.title: IDL set to object "[object Object]" should not throw 
PASS marquee.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.title: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.title: IDL set to NaN should not throw 
PASS marquee.title: IDL set to NaN followed by getAttribute() 
PASS marquee.title: IDL set to NaN followed by IDL get 
PASS marquee.title: IDL set to Infinity should not throw 
PASS marquee.title: IDL set to Infinity followed by getAttribute() 
PASS marquee.title: IDL set to Infinity followed by IDL get 
PASS marquee.title: IDL set to -Infinity should not throw 
PASS marquee.title: IDL set to -Infinity followed by getAttribute() 
PASS marquee.title: IDL set to -Infinity followed by IDL get 
PASS marquee.title: IDL set to "\0" should not throw 
PASS marquee.title: IDL set to "\0" followed by getAttribute() 
PASS marquee.title: IDL set to "\0" followed by IDL get 
PASS marquee.title: IDL set to null should not throw 
PASS marquee.title: IDL set to null followed by getAttribute() 
PASS marquee.title: IDL set to null followed by IDL get 
PASS marquee.title: IDL set to object "test-toString" should not throw 
PASS marquee.title: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.title: IDL set to object "test-toString" followed by IDL get 
PASS marquee.title: IDL set to object "test-valueOf" should not throw 
PASS marquee.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.title: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.lang: typeof IDL attribute 
PASS marquee.lang: IDL get with DOM attribute unset 
PASS marquee.lang: setAttribute() to "" followed by getAttribute() 
PASS marquee.lang: setAttribute() to "" followed by IDL get 
PASS marquee.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.lang: setAttribute() to undefined followed by getAttribute() 
PASS marquee.lang: setAttribute() to undefined followed by IDL get 
PASS marquee.lang: setAttribute() to 7 followed by getAttribute() 
PASS marquee.lang: setAttribute() to 7 followed by IDL get 
PASS marquee.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.lang: setAttribute() to 1.5 followed by IDL get 
PASS marquee.lang: setAttribute() to true followed by getAttribute() 
PASS marquee.lang: setAttribute() to true followed by IDL get 
PASS marquee.lang: setAttribute() to false followed by getAttribute() 
PASS marquee.lang: setAttribute() to false followed by IDL get 
PASS marquee.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.lang: setAttribute() to NaN followed by getAttribute() 
PASS marquee.lang: setAttribute() to NaN followed by IDL get 
PASS marquee.lang: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.lang: setAttribute() to Infinity followed by IDL get 
PASS marquee.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.lang: setAttribute() to -Infinity followed by IDL get 
PASS marquee.lang: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.lang: setAttribute() to "\0" followed by IDL get 
PASS marquee.lang: setAttribute() to null followed by getAttribute() 
PASS marquee.lang: setAttribute() to null followed by IDL get 
PASS marquee.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.lang: IDL set to "" should not throw 
PASS marquee.lang: IDL set to "" followed by getAttribute() 
PASS marquee.lang: IDL set to "" followed by IDL get 
PASS marquee.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.lang: IDL set to undefined should not throw 
PASS marquee.lang: IDL set to undefined followed by getAttribute() 
PASS marquee.lang: IDL set to undefined followed by IDL get 
PASS marquee.lang: IDL set to 7 should not throw 
PASS marquee.lang: IDL set to 7 followed by getAttribute() 
PASS marquee.lang: IDL set to 7 followed by IDL get 
PASS marquee.lang: IDL set to 1.5 should not throw 
PASS marquee.lang: IDL set to 1.5 followed by getAttribute() 
PASS marquee.lang: IDL set to 1.5 followed by IDL get 
PASS marquee.lang: IDL set to true should not throw 
PASS marquee.lang: IDL set to true followed by getAttribute() 
PASS marquee.lang: IDL set to true followed by IDL get 
PASS marquee.lang: IDL set to false should not throw 
PASS marquee.lang: IDL set to false followed by getAttribute() 
PASS marquee.lang: IDL set to false followed by IDL get 
PASS marquee.lang: IDL set to object "[object Object]" should not throw 
PASS marquee.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.lang: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.lang: IDL set to NaN should not throw 
PASS marquee.lang: IDL set to NaN followed by getAttribute() 
PASS marquee.lang: IDL set to NaN followed by IDL get 
PASS marquee.lang: IDL set to Infinity should not throw 
PASS marquee.lang: IDL set to Infinity followed by getAttribute() 
PASS marquee.lang: IDL set to Infinity followed by IDL get 
PASS marquee.lang: IDL set to -Infinity should not throw 
PASS marquee.lang: IDL set to -Infinity followed by getAttribute() 
PASS marquee.lang: IDL set to -Infinity followed by IDL get 
PASS marquee.lang: IDL set to "\0" should not throw 
PASS marquee.lang: IDL set to "\0" followed by getAttribute() 
PASS marquee.lang: IDL set to "\0" followed by IDL get 
PASS marquee.lang: IDL set to null should not throw 
PASS marquee.lang: IDL set to null followed by getAttribute() 
PASS marquee.lang: IDL set to null followed by IDL get 
PASS marquee.lang: IDL set to object "test-toString" should not throw 
PASS marquee.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.lang: IDL set to object "test-toString" followed by IDL get 
PASS marquee.lang: IDL set to object "test-valueOf" should not throw 
PASS marquee.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.dir: typeof IDL attribute 
PASS marquee.dir: IDL get with DOM attribute unset 
PASS marquee.dir: setAttribute() to "" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "" followed by IDL get 
PASS marquee.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.dir: setAttribute() to undefined followed by getAttribute() 
PASS marquee.dir: setAttribute() to undefined followed by IDL get 
PASS marquee.dir: setAttribute() to 7 followed by getAttribute() 
PASS marquee.dir: setAttribute() to 7 followed by IDL get 
PASS marquee.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.dir: setAttribute() to 1.5 followed by IDL get 
PASS marquee.dir: setAttribute() to true followed by getAttribute() 
PASS marquee.dir: setAttribute() to true followed by IDL get 
PASS marquee.dir: setAttribute() to false followed by getAttribute() 
PASS marquee.dir: setAttribute() to false followed by IDL get 
PASS marquee.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.dir: setAttribute() to NaN followed by getAttribute() 
PASS marquee.dir: setAttribute() to NaN followed by IDL get 
PASS marquee.dir: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.dir: setAttribute() to Infinity followed by IDL get 
PASS marquee.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.dir: setAttribute() to -Infinity followed by IDL get 
PASS marquee.dir: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "\0" followed by IDL get 
PASS marquee.dir: setAttribute() to null followed by getAttribute() 
PASS marquee.dir: setAttribute() to null followed by IDL get 
PASS marquee.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "ltr" followed by IDL get 
PASS marquee.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "xltr" followed by IDL get 
PASS marquee.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS marquee.dir: setAttribute() to "tr" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "tr" followed by IDL get 
PASS marquee.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "LTR" followed by IDL get 
PASS marquee.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "rtl" followed by IDL get 
PASS marquee.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "xrtl" followed by IDL get 
PASS marquee.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS marquee.dir: setAttribute() to "tl" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "tl" followed by IDL get 
PASS marquee.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "RTL" followed by IDL get 
PASS marquee.dir: setAttribute() to "auto" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "auto" followed by IDL get 
PASS marquee.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "xauto" followed by IDL get 
PASS marquee.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "auto\0" followed by IDL get 
PASS marquee.dir: setAttribute() to "uto" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "uto" followed by IDL get 
PASS marquee.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS marquee.dir: setAttribute() to "AUTO" followed by IDL get 
PASS marquee.dir: IDL set to "" should not throw 
PASS marquee.dir: IDL set to "" followed by getAttribute() 
PASS marquee.dir: IDL set to "" followed by IDL get 
PASS marquee.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.dir: IDL set to undefined should not throw 
PASS marquee.dir: IDL set to undefined followed by getAttribute() 
PASS marquee.dir: IDL set to undefined followed by IDL get 
PASS marquee.dir: IDL set to 7 should not throw 
PASS marquee.dir: IDL set to 7 followed by getAttribute() 
PASS marquee.dir: IDL set to 7 followed by IDL get 
PASS marquee.dir: IDL set to 1.5 should not throw 
PASS marquee.dir: IDL set to 1.5 followed by getAttribute() 
PASS marquee.dir: IDL set to 1.5 followed by IDL get 
PASS marquee.dir: IDL set to true should not throw 
PASS marquee.dir: IDL set to true followed by getAttribute() 
PASS marquee.dir: IDL set to true followed by IDL get 
PASS marquee.dir: IDL set to false should not throw 
PASS marquee.dir: IDL set to false followed by getAttribute() 
PASS marquee.dir: IDL set to false followed by IDL get 
PASS marquee.dir: IDL set to object "[object Object]" should not throw 
PASS marquee.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.dir: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.dir: IDL set to NaN should not throw 
PASS marquee.dir: IDL set to NaN followed by getAttribute() 
PASS marquee.dir: IDL set to NaN followed by IDL get 
PASS marquee.dir: IDL set to Infinity should not throw 
PASS marquee.dir: IDL set to Infinity followed by getAttribute() 
PASS marquee.dir: IDL set to Infinity followed by IDL get 
PASS marquee.dir: IDL set to -Infinity should not throw 
PASS marquee.dir: IDL set to -Infinity followed by getAttribute() 
PASS marquee.dir: IDL set to -Infinity followed by IDL get 
PASS marquee.dir: IDL set to "\0" should not throw 
PASS marquee.dir: IDL set to "\0" followed by getAttribute() 
PASS marquee.dir: IDL set to "\0" followed by IDL get 
PASS marquee.dir: IDL set to null should not throw 
PASS marquee.dir: IDL set to null followed by IDL get 
PASS marquee.dir: IDL set to object "test-toString" should not throw 
PASS marquee.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.dir: IDL set to object "test-toString" followed by IDL get 
PASS marquee.dir: IDL set to object "test-valueOf" should not throw 
PASS marquee.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.dir: IDL set to "ltr" should not throw 
PASS marquee.dir: IDL set to "ltr" followed by getAttribute() 
PASS marquee.dir: IDL set to "ltr" followed by IDL get 
PASS marquee.dir: IDL set to "xltr" should not throw 
PASS marquee.dir: IDL set to "xltr" followed by getAttribute() 
PASS marquee.dir: IDL set to "xltr" followed by IDL get 
PASS marquee.dir: IDL set to "ltr\0" should not throw 
PASS marquee.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS marquee.dir: IDL set to "ltr\0" followed by IDL get 
PASS marquee.dir: IDL set to "tr" should not throw 
PASS marquee.dir: IDL set to "tr" followed by getAttribute() 
PASS marquee.dir: IDL set to "tr" followed by IDL get 
PASS marquee.dir: IDL set to "LTR" should not throw 
PASS marquee.dir: IDL set to "LTR" followed by getAttribute() 
PASS marquee.dir: IDL set to "LTR" followed by IDL get 
PASS marquee.dir: IDL set to "rtl" should not throw 
PASS marquee.dir: IDL set to "rtl" followed by getAttribute() 
PASS marquee.dir: IDL set to "rtl" followed by IDL get 
PASS marquee.dir: IDL set to "xrtl" should not throw 
PASS marquee.dir: IDL set to "xrtl" followed by getAttribute() 
PASS marquee.dir: IDL set to "xrtl" followed by IDL get 
PASS marquee.dir: IDL set to "rtl\0" should not throw 
PASS marquee.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS marquee.dir: IDL set to "rtl\0" followed by IDL get 
PASS marquee.dir: IDL set to "tl" should not throw 
PASS marquee.dir: IDL set to "tl" followed by getAttribute() 
PASS marquee.dir: IDL set to "tl" followed by IDL get 
PASS marquee.dir: IDL set to "RTL" should not throw 
PASS marquee.dir: IDL set to "RTL" followed by getAttribute() 
PASS marquee.dir: IDL set to "RTL" followed by IDL get 
PASS marquee.dir: IDL set to "auto" should not throw 
PASS marquee.dir: IDL set to "auto" followed by getAttribute() 
PASS marquee.dir: IDL set to "auto" followed by IDL get 
PASS marquee.dir: IDL set to "xauto" should not throw 
PASS marquee.dir: IDL set to "xauto" followed by getAttribute() 
PASS marquee.dir: IDL set to "xauto" followed by IDL get 
PASS marquee.dir: IDL set to "auto\0" should not throw 
PASS marquee.dir: IDL set to "auto\0" followed by getAttribute() 
PASS marquee.dir: IDL set to "auto\0" followed by IDL get 
PASS marquee.dir: IDL set to "uto" should not throw 
PASS marquee.dir: IDL set to "uto" followed by getAttribute() 
PASS marquee.dir: IDL set to "uto" followed by IDL get 
PASS marquee.dir: IDL set to "AUTO" should not throw 
PASS marquee.dir: IDL set to "AUTO" followed by getAttribute() 
PASS marquee.dir: IDL set to "AUTO" followed by IDL get 
PASS marquee.className (<marquee class>): typeof IDL attribute 
PASS marquee.className (<marquee class>): IDL get with DOM attribute unset 
PASS marquee.className (<marquee class>): setAttribute() to "" followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to "" followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to undefined followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to undefined followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to 7 followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to 7 followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to 1.5 followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to true followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to true followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to false followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to false followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to NaN followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to NaN followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to Infinity followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to Infinity followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to -Infinity followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to "\0" followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to "\0" followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to null followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to null followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.className (<marquee class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.className (<marquee class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to "" should not throw 
PASS marquee.className (<marquee class>): IDL set to "" followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to "" followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.className (<marquee class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to undefined should not throw 
PASS marquee.className (<marquee class>): IDL set to undefined followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to undefined followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to 7 should not throw 
PASS marquee.className (<marquee class>): IDL set to 7 followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to 7 followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to 1.5 should not throw 
PASS marquee.className (<marquee class>): IDL set to 1.5 followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to 1.5 followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to true should not throw 
PASS marquee.className (<marquee class>): IDL set to true followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to true followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to false should not throw 
PASS marquee.className (<marquee class>): IDL set to false followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to false followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to object "[object Object]" should not throw 
PASS marquee.className (<marquee class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to object "[object Object]" followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to NaN should not throw 
PASS marquee.className (<marquee class>): IDL set to NaN followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to NaN followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to Infinity should not throw 
PASS marquee.className (<marquee class>): IDL set to Infinity followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to Infinity followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to -Infinity should not throw 
PASS marquee.className (<marquee class>): IDL set to -Infinity followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to -Infinity followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to "\0" should not throw 
PASS marquee.className (<marquee class>): IDL set to "\0" followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to "\0" followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to null should not throw 
PASS marquee.className (<marquee class>): IDL set to null followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to null followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to object "test-toString" should not throw 
PASS marquee.className (<marquee class>): IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to object "test-toString" followed by IDL get 
PASS marquee.className (<marquee class>): IDL set to object "test-valueOf" should not throw 
PASS marquee.className (<marquee class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.className (<marquee class>): IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.hidden: typeof IDL attribute 
PASS marquee.hidden: IDL get with DOM attribute unset 
PASS marquee.hidden: setAttribute() to "" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to "" followed by IDL get 
PASS marquee.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS marquee.hidden: setAttribute() to " foo " followed by IDL get 
PASS marquee.hidden: setAttribute() to undefined followed by getAttribute() 
PASS marquee.hidden: setAttribute() to undefined followed by IDL get 
PASS marquee.hidden: setAttribute() to null followed by getAttribute() 
PASS marquee.hidden: setAttribute() to null followed by IDL get 
PASS marquee.hidden: setAttribute() to 7 followed by getAttribute() 
PASS marquee.hidden: setAttribute() to 7 followed by IDL get 
PASS marquee.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.hidden: setAttribute() to 1.5 followed by IDL get 
PASS marquee.hidden: setAttribute() to true followed by getAttribute() 
PASS marquee.hidden: setAttribute() to true followed by IDL get 
PASS marquee.hidden: setAttribute() to false followed by getAttribute() 
PASS marquee.hidden: setAttribute() to false followed by IDL get 
PASS marquee.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.hidden: setAttribute() to NaN followed by getAttribute() 
PASS marquee.hidden: setAttribute() to NaN followed by IDL get 
PASS marquee.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.hidden: setAttribute() to Infinity followed by IDL get 
PASS marquee.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.hidden: setAttribute() to -Infinity followed by IDL get 
PASS marquee.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to "\0" followed by IDL get 
PASS marquee.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS marquee.hidden: setAttribute() to "hidden" followed by IDL get 
PASS marquee.hidden: IDL set to "" should not throw 
PASS marquee.hidden: IDL set to "" followed by hasAttribute() 
PASS marquee.hidden: IDL set to "" followed by IDL get 
PASS marquee.hidden: IDL set to " foo " should not throw 
PASS marquee.hidden: IDL set to " foo " followed by hasAttribute() 
PASS marquee.hidden: IDL set to " foo " followed by IDL get 
PASS marquee.hidden: IDL set to undefined should not throw 
PASS marquee.hidden: IDL set to undefined followed by hasAttribute() 
PASS marquee.hidden: IDL set to undefined followed by IDL get 
PASS marquee.hidden: IDL set to null should not throw 
PASS marquee.hidden: IDL set to null followed by hasAttribute() 
PASS marquee.hidden: IDL set to null followed by IDL get 
PASS marquee.hidden: IDL set to 7 should not throw 
PASS marquee.hidden: IDL set to 7 followed by hasAttribute() 
PASS marquee.hidden: IDL set to 7 followed by IDL get 
PASS marquee.hidden: IDL set to 1.5 should not throw 
PASS marquee.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS marquee.hidden: IDL set to 1.5 followed by IDL get 
PASS marquee.hidden: IDL set to true should not throw 
PASS marquee.hidden: IDL set to true followed by hasAttribute() 
PASS marquee.hidden: IDL set to true followed by IDL get 
PASS marquee.hidden: IDL set to false should not throw 
PASS marquee.hidden: IDL set to false followed by hasAttribute() 
PASS marquee.hidden: IDL set to false followed by IDL get 
PASS marquee.hidden: IDL set to object "[object Object]" should not throw 
PASS marquee.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS marquee.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.hidden: IDL set to NaN should not throw 
PASS marquee.hidden: IDL set to NaN followed by hasAttribute() 
PASS marquee.hidden: IDL set to NaN followed by IDL get 
PASS marquee.hidden: IDL set to Infinity should not throw 
PASS marquee.hidden: IDL set to Infinity followed by hasAttribute() 
PASS marquee.hidden: IDL set to Infinity followed by IDL get 
PASS marquee.hidden: IDL set to -Infinity should not throw 
PASS marquee.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS marquee.hidden: IDL set to -Infinity followed by IDL get 
PASS marquee.hidden: IDL set to "\0" should not throw 
PASS marquee.hidden: IDL set to "\0" followed by hasAttribute() 
PASS marquee.hidden: IDL set to "\0" followed by IDL get 
PASS marquee.hidden: IDL set to object "test-toString" should not throw 
PASS marquee.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS marquee.hidden: IDL set to object "test-toString" followed by IDL get 
PASS marquee.hidden: IDL set to object "test-valueOf" should not throw 
PASS marquee.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS marquee.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.accessKey: typeof IDL attribute 
PASS marquee.accessKey: IDL get with DOM attribute unset 
PASS marquee.accessKey: setAttribute() to "" followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to "" followed by IDL get 
PASS marquee.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to undefined followed by IDL get 
PASS marquee.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to 7 followed by IDL get 
PASS marquee.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS marquee.accessKey: setAttribute() to true followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to true followed by IDL get 
PASS marquee.accessKey: setAttribute() to false followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to false followed by IDL get 
PASS marquee.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to NaN followed by IDL get 
PASS marquee.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to Infinity followed by IDL get 
PASS marquee.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS marquee.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to "\0" followed by IDL get 
PASS marquee.accessKey: setAttribute() to null followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to null followed by IDL get 
PASS marquee.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.accessKey: IDL set to "" should not throw 
PASS marquee.accessKey: IDL set to "" followed by getAttribute() 
PASS marquee.accessKey: IDL set to "" followed by IDL get 
PASS marquee.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.accessKey: IDL set to undefined should not throw 
PASS marquee.accessKey: IDL set to undefined followed by getAttribute() 
PASS marquee.accessKey: IDL set to undefined followed by IDL get 
PASS marquee.accessKey: IDL set to 7 should not throw 
PASS marquee.accessKey: IDL set to 7 followed by getAttribute() 
PASS marquee.accessKey: IDL set to 7 followed by IDL get 
PASS marquee.accessKey: IDL set to 1.5 should not throw 
PASS marquee.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS marquee.accessKey: IDL set to 1.5 followed by IDL get 
PASS marquee.accessKey: IDL set to true should not throw 
PASS marquee.accessKey: IDL set to true followed by getAttribute() 
PASS marquee.accessKey: IDL set to true followed by IDL get 
PASS marquee.accessKey: IDL set to false should not throw 
PASS marquee.accessKey: IDL set to false followed by getAttribute() 
PASS marquee.accessKey: IDL set to false followed by IDL get 
PASS marquee.accessKey: IDL set to object "[object Object]" should not throw 
PASS marquee.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.accessKey: IDL set to NaN should not throw 
PASS marquee.accessKey: IDL set to NaN followed by getAttribute() 
PASS marquee.accessKey: IDL set to NaN followed by IDL get 
PASS marquee.accessKey: IDL set to Infinity should not throw 
PASS marquee.accessKey: IDL set to Infinity followed by getAttribute() 
PASS marquee.accessKey: IDL set to Infinity followed by IDL get 
PASS marquee.accessKey: IDL set to -Infinity should not throw 
PASS marquee.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS marquee.accessKey: IDL set to -Infinity followed by IDL get 
PASS marquee.accessKey: IDL set to "\0" should not throw 
PASS marquee.accessKey: IDL set to "\0" followed by getAttribute() 
PASS marquee.accessKey: IDL set to "\0" followed by IDL get 
PASS marquee.accessKey: IDL set to null should not throw 
PASS marquee.accessKey: IDL set to null followed by getAttribute() 
PASS marquee.accessKey: IDL set to null followed by IDL get 
PASS marquee.accessKey: IDL set to object "test-toString" should not throw 
PASS marquee.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS marquee.accessKey: IDL set to object "test-valueOf" should not throw 
PASS marquee.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.tabIndex: typeof IDL attribute 
PASS marquee.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to -36 followed by IDL get 
PASS marquee.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to -1 followed by IDL get 
PASS marquee.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to 0 followed by IDL get 
PASS marquee.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to 1 followed by IDL get 
PASS marquee.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL marquee.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS marquee.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL marquee.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS marquee.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "0" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "1" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS marquee.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS marquee.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS marquee.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS marquee.tabIndex: IDL set to -36 should not throw 
PASS marquee.tabIndex: IDL set to -36 followed by getAttribute() 
PASS marquee.tabIndex: IDL set to -36 followed by IDL get 
PASS marquee.tabIndex: IDL set to -1 should not throw 
PASS marquee.tabIndex: IDL set to -1 followed by getAttribute() 
PASS marquee.tabIndex: IDL set to -1 followed by IDL get 
PASS marquee.tabIndex: IDL set to 0 should not throw 
PASS marquee.tabIndex: IDL set to 0 followed by getAttribute() 
PASS marquee.tabIndex: IDL set to 0 followed by IDL get 
PASS marquee.tabIndex: IDL set to 1 should not throw 
PASS marquee.tabIndex: IDL set to 1 followed by getAttribute() 
PASS marquee.tabIndex: IDL set to 1 followed by IDL get 
PASS marquee.tabIndex: IDL set to 2147483647 should not throw 
PASS marquee.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL marquee.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS marquee.tabIndex: IDL set to -2147483648 should not throw 
PASS marquee.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL marquee.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS marquee.behavior: typeof IDL attribute 
PASS marquee.behavior: IDL get with DOM attribute unset 
PASS marquee.behavior: setAttribute() to "" followed by getAttribute() 
PASS marquee.behavior: setAttribute() to "" followed by IDL get 
PASS marquee.behavior: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.behavior: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.behavior: setAttribute() to undefined followed by getAttribute() 
PASS marquee.behavior: setAttribute() to undefined followed by IDL get 
PASS marquee.behavior: setAttribute() to 7 followed by getAttribute() 
PASS marquee.behavior: setAttribute() to 7 followed by IDL get 
PASS marquee.behavior: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.behavior: setAttribute() to 1.5 followed by IDL get 
PASS marquee.behavior: setAttribute() to true followed by getAttribute() 
PASS marquee.behavior: setAttribute() to true followed by IDL get 
PASS marquee.behavior: setAttribute() to false followed by getAttribute() 
PASS marquee.behavior: setAttribute() to false followed by IDL get 
PASS marquee.behavior: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.behavior: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.behavior: setAttribute() to NaN followed by getAttribute() 
PASS marquee.behavior: setAttribute() to NaN followed by IDL get 
PASS marquee.behavior: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.behavior: setAttribute() to Infinity followed by IDL get 
PASS marquee.behavior: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.behavior: setAttribute() to -Infinity followed by IDL get 
PASS marquee.behavior: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.behavior: setAttribute() to "\0" followed by IDL get 
PASS marquee.behavior: setAttribute() to null followed by getAttribute() 
PASS marquee.behavior: setAttribute() to null followed by IDL get 
PASS marquee.behavior: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.behavior: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.behavior: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.behavior: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.behavior: IDL set to "" should not throw 
PASS marquee.behavior: IDL set to "" followed by getAttribute() 
PASS marquee.behavior: IDL set to "" followed by IDL get 
PASS marquee.behavior: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.behavior: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.behavior: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.behavior: IDL set to undefined should not throw 
PASS marquee.behavior: IDL set to undefined followed by getAttribute() 
PASS marquee.behavior: IDL set to undefined followed by IDL get 
PASS marquee.behavior: IDL set to 7 should not throw 
PASS marquee.behavior: IDL set to 7 followed by getAttribute() 
PASS marquee.behavior: IDL set to 7 followed by IDL get 
PASS marquee.behavior: IDL set to 1.5 should not throw 
PASS marquee.behavior: IDL set to 1.5 followed by getAttribute() 
PASS marquee.behavior: IDL set to 1.5 followed by IDL get 
PASS marquee.behavior: IDL set to true should not throw 
PASS marquee.behavior: IDL set to true followed by getAttribute() 
PASS marquee.behavior: IDL set to true followed by IDL get 
PASS marquee.behavior: IDL set to false should not throw 
PASS marquee.behavior: IDL set to false followed by getAttribute() 
PASS marquee.behavior: IDL set to false followed by IDL get 
PASS marquee.behavior: IDL set to object "[object Object]" should not throw 
PASS marquee.behavior: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.behavior: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.behavior: IDL set to NaN should not throw 
PASS marquee.behavior: IDL set to NaN followed by getAttribute() 
PASS marquee.behavior: IDL set to NaN followed by IDL get 
PASS marquee.behavior: IDL set to Infinity should not throw 
PASS marquee.behavior: IDL set to Infinity followed by getAttribute() 
PASS marquee.behavior: IDL set to Infinity followed by IDL get 
PASS marquee.behavior: IDL set to -Infinity should not throw 
PASS marquee.behavior: IDL set to -Infinity followed by getAttribute() 
PASS marquee.behavior: IDL set to -Infinity followed by IDL get 
PASS marquee.behavior: IDL set to "\0" should not throw 
PASS marquee.behavior: IDL set to "\0" followed by getAttribute() 
PASS marquee.behavior: IDL set to "\0" followed by IDL get 
PASS marquee.behavior: IDL set to null should not throw 
PASS marquee.behavior: IDL set to null followed by getAttribute() 
PASS marquee.behavior: IDL set to null followed by IDL get 
PASS marquee.behavior: IDL set to object "test-toString" should not throw 
PASS marquee.behavior: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.behavior: IDL set to object "test-toString" followed by IDL get 
PASS marquee.behavior: IDL set to object "test-valueOf" should not throw 
PASS marquee.behavior: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.behavior: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.bgColor: typeof IDL attribute 
PASS marquee.bgColor: IDL get with DOM attribute unset 
PASS marquee.bgColor: setAttribute() to "" followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to "" followed by IDL get 
PASS marquee.bgColor: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.bgColor: setAttribute() to undefined followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to undefined followed by IDL get 
PASS marquee.bgColor: setAttribute() to 7 followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to 7 followed by IDL get 
PASS marquee.bgColor: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to 1.5 followed by IDL get 
PASS marquee.bgColor: setAttribute() to true followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to true followed by IDL get 
PASS marquee.bgColor: setAttribute() to false followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to false followed by IDL get 
PASS marquee.bgColor: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.bgColor: setAttribute() to NaN followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to NaN followed by IDL get 
PASS marquee.bgColor: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to Infinity followed by IDL get 
PASS marquee.bgColor: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to -Infinity followed by IDL get 
PASS marquee.bgColor: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to "\0" followed by IDL get 
PASS marquee.bgColor: setAttribute() to null followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to null followed by IDL get 
PASS marquee.bgColor: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.bgColor: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.bgColor: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.bgColor: IDL set to "" should not throw 
PASS marquee.bgColor: IDL set to "" followed by getAttribute() 
PASS marquee.bgColor: IDL set to "" followed by IDL get 
PASS marquee.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.bgColor: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.bgColor: IDL set to undefined should not throw 
PASS marquee.bgColor: IDL set to undefined followed by getAttribute() 
PASS marquee.bgColor: IDL set to undefined followed by IDL get 
PASS marquee.bgColor: IDL set to 7 should not throw 
PASS marquee.bgColor: IDL set to 7 followed by getAttribute() 
PASS marquee.bgColor: IDL set to 7 followed by IDL get 
PASS marquee.bgColor: IDL set to 1.5 should not throw 
PASS marquee.bgColor: IDL set to 1.5 followed by getAttribute() 
PASS marquee.bgColor: IDL set to 1.5 followed by IDL get 
PASS marquee.bgColor: IDL set to true should not throw 
PASS marquee.bgColor: IDL set to true followed by getAttribute() 
PASS marquee.bgColor: IDL set to true followed by IDL get 
PASS marquee.bgColor: IDL set to false should not throw 
PASS marquee.bgColor: IDL set to false followed by getAttribute() 
PASS marquee.bgColor: IDL set to false followed by IDL get 
PASS marquee.bgColor: IDL set to object "[object Object]" should not throw 
PASS marquee.bgColor: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.bgColor: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.bgColor: IDL set to NaN should not throw 
PASS marquee.bgColor: IDL set to NaN followed by getAttribute() 
PASS marquee.bgColor: IDL set to NaN followed by IDL get 
PASS marquee.bgColor: IDL set to Infinity should not throw 
PASS marquee.bgColor: IDL set to Infinity followed by getAttribute() 
PASS marquee.bgColor: IDL set to Infinity followed by IDL get 
PASS marquee.bgColor: IDL set to -Infinity should not throw 
PASS marquee.bgColor: IDL set to -Infinity followed by getAttribute() 
PASS marquee.bgColor: IDL set to -Infinity followed by IDL get 
PASS marquee.bgColor: IDL set to "\0" should not throw 
PASS marquee.bgColor: IDL set to "\0" followed by getAttribute() 
PASS marquee.bgColor: IDL set to "\0" followed by IDL get 
PASS marquee.bgColor: IDL set to null should not throw 
PASS marquee.bgColor: IDL set to null followed by getAttribute() 
PASS marquee.bgColor: IDL set to null followed by IDL get 
PASS marquee.bgColor: IDL set to object "test-toString" should not throw 
PASS marquee.bgColor: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.bgColor: IDL set to object "test-toString" followed by IDL get 
PASS marquee.bgColor: IDL set to object "test-valueOf" should not throw 
PASS marquee.bgColor: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.bgColor: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.direction: typeof IDL attribute 
PASS marquee.direction: IDL get with DOM attribute unset 
PASS marquee.direction: setAttribute() to "" followed by getAttribute() 
PASS marquee.direction: setAttribute() to "" followed by IDL get 
PASS marquee.direction: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.direction: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.direction: setAttribute() to undefined followed by getAttribute() 
PASS marquee.direction: setAttribute() to undefined followed by IDL get 
PASS marquee.direction: setAttribute() to 7 followed by getAttribute() 
PASS marquee.direction: setAttribute() to 7 followed by IDL get 
PASS marquee.direction: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.direction: setAttribute() to 1.5 followed by IDL get 
PASS marquee.direction: setAttribute() to true followed by getAttribute() 
PASS marquee.direction: setAttribute() to true followed by IDL get 
PASS marquee.direction: setAttribute() to false followed by getAttribute() 
PASS marquee.direction: setAttribute() to false followed by IDL get 
PASS marquee.direction: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.direction: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.direction: setAttribute() to NaN followed by getAttribute() 
PASS marquee.direction: setAttribute() to NaN followed by IDL get 
PASS marquee.direction: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.direction: setAttribute() to Infinity followed by IDL get 
PASS marquee.direction: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.direction: setAttribute() to -Infinity followed by IDL get 
PASS marquee.direction: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.direction: setAttribute() to "\0" followed by IDL get 
PASS marquee.direction: setAttribute() to null followed by getAttribute() 
PASS marquee.direction: setAttribute() to null followed by IDL get 
PASS marquee.direction: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.direction: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.direction: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.direction: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.direction: IDL set to "" should not throw 
PASS marquee.direction: IDL set to "" followed by getAttribute() 
PASS marquee.direction: IDL set to "" followed by IDL get 
PASS marquee.direction: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.direction: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.direction: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.direction: IDL set to undefined should not throw 
PASS marquee.direction: IDL set to undefined followed by getAttribute() 
PASS marquee.direction: IDL set to undefined followed by IDL get 
PASS marquee.direction: IDL set to 7 should not throw 
PASS marquee.direction: IDL set to 7 followed by getAttribute() 
PASS marquee.direction: IDL set to 7 followed by IDL get 
PASS marquee.direction: IDL set to 1.5 should not throw 
PASS marquee.direction: IDL set to 1.5 followed by getAttribute() 
PASS marquee.direction: IDL set to 1.5 followed by IDL get 
PASS marquee.direction: IDL set to true should not throw 
PASS marquee.direction: IDL set to true followed by getAttribute() 
PASS marquee.direction: IDL set to true followed by IDL get 
PASS marquee.direction: IDL set to false should not throw 
PASS marquee.direction: IDL set to false followed by getAttribute() 
PASS marquee.direction: IDL set to false followed by IDL get 
PASS marquee.direction: IDL set to object "[object Object]" should not throw 
PASS marquee.direction: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.direction: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.direction: IDL set to NaN should not throw 
PASS marquee.direction: IDL set to NaN followed by getAttribute() 
PASS marquee.direction: IDL set to NaN followed by IDL get 
PASS marquee.direction: IDL set to Infinity should not throw 
PASS marquee.direction: IDL set to Infinity followed by getAttribute() 
PASS marquee.direction: IDL set to Infinity followed by IDL get 
PASS marquee.direction: IDL set to -Infinity should not throw 
PASS marquee.direction: IDL set to -Infinity followed by getAttribute() 
PASS marquee.direction: IDL set to -Infinity followed by IDL get 
PASS marquee.direction: IDL set to "\0" should not throw 
PASS marquee.direction: IDL set to "\0" followed by getAttribute() 
PASS marquee.direction: IDL set to "\0" followed by IDL get 
PASS marquee.direction: IDL set to null should not throw 
PASS marquee.direction: IDL set to null followed by getAttribute() 
PASS marquee.direction: IDL set to null followed by IDL get 
PASS marquee.direction: IDL set to object "test-toString" should not throw 
PASS marquee.direction: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.direction: IDL set to object "test-toString" followed by IDL get 
PASS marquee.direction: IDL set to object "test-valueOf" should not throw 
PASS marquee.direction: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.direction: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.height: typeof IDL attribute 
PASS marquee.height: IDL get with DOM attribute unset 
PASS marquee.height: setAttribute() to "" followed by getAttribute() 
PASS marquee.height: setAttribute() to "" followed by IDL get 
PASS marquee.height: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.height: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.height: setAttribute() to undefined followed by getAttribute() 
PASS marquee.height: setAttribute() to undefined followed by IDL get 
PASS marquee.height: setAttribute() to 7 followed by getAttribute() 
PASS marquee.height: setAttribute() to 7 followed by IDL get 
PASS marquee.height: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.height: setAttribute() to 1.5 followed by IDL get 
PASS marquee.height: setAttribute() to true followed by getAttribute() 
PASS marquee.height: setAttribute() to true followed by IDL get 
PASS marquee.height: setAttribute() to false followed by getAttribute() 
PASS marquee.height: setAttribute() to false followed by IDL get 
PASS marquee.height: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.height: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.height: setAttribute() to NaN followed by getAttribute() 
PASS marquee.height: setAttribute() to NaN followed by IDL get 
PASS marquee.height: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.height: setAttribute() to Infinity followed by IDL get 
PASS marquee.height: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.height: setAttribute() to -Infinity followed by IDL get 
PASS marquee.height: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.height: setAttribute() to "\0" followed by IDL get 
PASS marquee.height: setAttribute() to null followed by getAttribute() 
PASS marquee.height: setAttribute() to null followed by IDL get 
PASS marquee.height: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.height: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.height: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.height: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.height: IDL set to "" should not throw 
PASS marquee.height: IDL set to "" followed by getAttribute() 
PASS marquee.height: IDL set to "" followed by IDL get 
PASS marquee.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.height: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.height: IDL set to undefined should not throw 
PASS marquee.height: IDL set to undefined followed by getAttribute() 
PASS marquee.height: IDL set to undefined followed by IDL get 
PASS marquee.height: IDL set to 7 should not throw 
PASS marquee.height: IDL set to 7 followed by getAttribute() 
PASS marquee.height: IDL set to 7 followed by IDL get 
PASS marquee.height: IDL set to 1.5 should not throw 
PASS marquee.height: IDL set to 1.5 followed by getAttribute() 
PASS marquee.height: IDL set to 1.5 followed by IDL get 
PASS marquee.height: IDL set to true should not throw 
PASS marquee.height: IDL set to true followed by getAttribute() 
PASS marquee.height: IDL set to true followed by IDL get 
PASS marquee.height: IDL set to false should not throw 
PASS marquee.height: IDL set to false followed by getAttribute() 
PASS marquee.height: IDL set to false followed by IDL get 
PASS marquee.height: IDL set to object "[object Object]" should not throw 
PASS marquee.height: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.height: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.height: IDL set to NaN should not throw 
PASS marquee.height: IDL set to NaN followed by getAttribute() 
PASS marquee.height: IDL set to NaN followed by IDL get 
PASS marquee.height: IDL set to Infinity should not throw 
PASS marquee.height: IDL set to Infinity followed by getAttribute() 
PASS marquee.height: IDL set to Infinity followed by IDL get 
PASS marquee.height: IDL set to -Infinity should not throw 
PASS marquee.height: IDL set to -Infinity followed by getAttribute() 
PASS marquee.height: IDL set to -Infinity followed by IDL get 
PASS marquee.height: IDL set to "\0" should not throw 
PASS marquee.height: IDL set to "\0" followed by getAttribute() 
PASS marquee.height: IDL set to "\0" followed by IDL get 
PASS marquee.height: IDL set to null should not throw 
PASS marquee.height: IDL set to null followed by getAttribute() 
PASS marquee.height: IDL set to null followed by IDL get 
PASS marquee.height: IDL set to object "test-toString" should not throw 
PASS marquee.height: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.height: IDL set to object "test-toString" followed by IDL get 
PASS marquee.height: IDL set to object "test-valueOf" should not throw 
PASS marquee.height: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.height: IDL set to object "test-valueOf" followed by IDL get 
PASS marquee.hspace: typeof IDL attribute 
PASS marquee.hspace: IDL get with DOM attribute unset 
PASS marquee.hspace: setAttribute() to -2147483649 followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to -2147483649 followed by IDL get assert_equals: expected 0 but got 2147483647
PASS marquee.hspace: setAttribute() to -2147483648 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to -2147483648 followed by IDL get 
PASS marquee.hspace: setAttribute() to -36 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to -36 followed by IDL get 
PASS marquee.hspace: setAttribute() to -1 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to -1 followed by IDL get 
PASS marquee.hspace: setAttribute() to 0 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 0 followed by IDL get 
PASS marquee.hspace: setAttribute() to 1 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 1 followed by IDL get 
PASS marquee.hspace: setAttribute() to 257 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 257 followed by IDL get 
PASS marquee.hspace: setAttribute() to 2147483647 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 2147483647 followed by IDL get 
PASS marquee.hspace: setAttribute() to 2147483648 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 2147483648 followed by IDL get 
PASS marquee.hspace: setAttribute() to 4294967295 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 4294967295 followed by IDL get 
PASS marquee.hspace: setAttribute() to 4294967296 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 4294967296 followed by IDL get 
PASS marquee.hspace: setAttribute() to "" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "" followed by IDL get 
PASS marquee.hspace: setAttribute() to "-1" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "-1" followed by IDL get 
PASS marquee.hspace: setAttribute() to "-0" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "-0" followed by IDL get 
PASS marquee.hspace: setAttribute() to "0" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "0" followed by IDL get 
PASS marquee.hspace: setAttribute() to "1" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "1" followed by IDL get 
PASS marquee.hspace: setAttribute() to "\t7" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "\t7" followed by IDL get 
PASS marquee.hspace: setAttribute() to "\v7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to "\v7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to "\f7" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "\f7" followed by IDL get 
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to " 7" followed by IDL get 
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to "﻿7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to "﻿7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to "\n7" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "\n7" followed by IDL get 
PASS marquee.hspace: setAttribute() to "\r7" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "\r7" followed by IDL get 
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to "᠎7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to "᠎7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to "　7" followed by getAttribute() 
FAIL marquee.hspace: setAttribute() to "　7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.hspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.hspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.hspace: setAttribute() to undefined followed by getAttribute() 
PASS marquee.hspace: setAttribute() to undefined followed by IDL get 
PASS marquee.hspace: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.hspace: setAttribute() to 1.5 followed by IDL get 
PASS marquee.hspace: setAttribute() to true followed by getAttribute() 
PASS marquee.hspace: setAttribute() to true followed by IDL get 
PASS marquee.hspace: setAttribute() to false followed by getAttribute() 
PASS marquee.hspace: setAttribute() to false followed by IDL get 
PASS marquee.hspace: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.hspace: setAttribute() to NaN followed by getAttribute() 
PASS marquee.hspace: setAttribute() to NaN followed by IDL get 
PASS marquee.hspace: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.hspace: setAttribute() to Infinity followed by IDL get 
PASS marquee.hspace: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.hspace: setAttribute() to -Infinity followed by IDL get 
PASS marquee.hspace: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to "\0" followed by IDL get 
PASS marquee.hspace: setAttribute() to object "2" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to object "2" followed by IDL get 
PASS marquee.hspace: setAttribute() to object "3" followed by getAttribute() 
PASS marquee.hspace: setAttribute() to object "3" followed by IDL get 
PASS marquee.hspace: IDL set to 0 should not throw 
PASS marquee.hspace: IDL set to 0 followed by getAttribute() 
PASS marquee.hspace: IDL set to 0 followed by IDL get 
PASS marquee.hspace: IDL set to 1 should not throw 
PASS marquee.hspace: IDL set to 1 followed by getAttribute() 
PASS marquee.hspace: IDL set to 1 followed by IDL get 
PASS marquee.hspace: IDL set to 257 should not throw 
PASS marquee.hspace: IDL set to 257 followed by getAttribute() 
PASS marquee.hspace: IDL set to 257 followed by IDL get 
PASS marquee.hspace: IDL set to 2147483647 should not throw 
PASS marquee.hspace: IDL set to 2147483647 followed by getAttribute() 
PASS marquee.hspace: IDL set to 2147483647 followed by IDL get 
PASS marquee.hspace: IDL set to "-0" should not throw 
PASS marquee.hspace: IDL set to "-0" followed by getAttribute() 
PASS marquee.hspace: IDL set to "-0" followed by IDL get 
PASS marquee.hspace: IDL set to 2147483648 should not throw 
FAIL marquee.hspace: IDL set to 2147483648 followed by getAttribute() assert_equals: expected "0" but got "2147483648"
PASS marquee.hspace: IDL set to 2147483648 followed by IDL get 
PASS marquee.hspace: IDL set to 4294967295 should not throw 
FAIL marquee.hspace: IDL set to 4294967295 followed by getAttribute() assert_equals: expected "0" but got "4294967295"
PASS marquee.hspace: IDL set to 4294967295 followed by IDL get 
PASS marquee.scrollAmount: typeof IDL attribute 
PASS marquee.scrollAmount: IDL get with DOM attribute unset 
PASS marquee.scrollAmount: setAttribute() to -2147483649 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to -2147483649 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to -2147483648 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to -2147483648 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to -36 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to -36 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to -1 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to -1 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 0 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 0 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 1 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 1 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 257 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 257 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 2147483647 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 2147483647 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 2147483648 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 2147483648 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 4294967295 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 4294967295 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 4294967296 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 4294967296 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "-1" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "-1" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "-0" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "-0" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "0" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "0" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "1" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "1" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "\t7" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "\t7" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "\v7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to "\v7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to "\f7" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "\f7" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to " 7" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to "﻿7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to "﻿7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to "\n7" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "\n7" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "\r7" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "\r7" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to "᠎7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to "᠎7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to " 7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to "　7" followed by getAttribute() 
FAIL marquee.scrollAmount: setAttribute() to "　7" followed by IDL get assert_equals: expected 6 but got 7
PASS marquee.scrollAmount: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to undefined followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to undefined followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to 1.5 followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to true followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to true followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to false followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to false followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to NaN followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to NaN followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to Infinity followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to -Infinity followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to "\0" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to object "2" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to object "2" followed by IDL get 
PASS marquee.scrollAmount: setAttribute() to object "3" followed by getAttribute() 
PASS marquee.scrollAmount: setAttribute() to object "3" followed by IDL get 
PASS marquee.scrollAmount: IDL set to 0 should not throw 
PASS marquee.scrollAmount: IDL set to 0 followed by getAttribute() 
PASS marquee.scrollAmount: IDL set to 0 followed by IDL get 
PASS marquee.scrollAmount: IDL set to 1 should not throw 
PASS marquee.scrollAmount: IDL set to 1 followed by getAttribute() 
PASS marquee.scrollAmount: IDL set to 1 followed by IDL get 
PASS marquee.scrollAmount: IDL set to 257 should not throw 
PASS marquee.scrollAmount: IDL set to 257 followed by getAttribute() 
PASS marquee.scrollAmount: IDL set to 257 followed by IDL get 
PASS marquee.scrollAmount: IDL set to 2147483647 should not throw 
PASS marquee.scrollAmount: IDL set to 2147483647 followed by getAttribute() 
PASS marquee.scrollAmount: IDL set to 2147483647 followed by IDL get 
PASS marquee.scrollAmount: IDL set to "-0" should not throw 
PASS marquee.scrollAmount: IDL set to "-0" followed by getAttribute() 
PASS marquee.scrollAmount: IDL set to "-0" followed by IDL get 
FAIL marquee.scrollAmount: IDL set to 2147483648 should not throw Failed to set the 'scrollAmount' property on 'HTMLMarqueeElement': The provided value (-2147483648) is negative.
FAIL marquee.scrollAmount: IDL set to 4294967295 should not throw Failed to set the 'scrollAmount' property on 'HTMLMarqueeElement': The provided value (-1) is negative.
PASS marquee.scrollDelay: typeof IDL attribute 
PASS marquee.scrollDelay: IDL get with DOM attribute unset 
PASS marquee.scrollDelay: setAttribute() to -2147483649 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to -2147483649 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to -2147483648 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to -2147483648 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to -36 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to -36 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to -1 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to -1 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 0 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 0 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 1 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 1 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 257 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 257 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 2147483647 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 2147483647 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 2147483648 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 2147483648 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 4294967295 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 4294967295 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 4294967296 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 4294967296 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "-1" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "-1" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "-0" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "-0" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "0" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "0" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "1" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "1" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "\t7" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "\t7" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "\v7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to "\v7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to "\f7" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "\f7" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to " 7" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to "﻿7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to "﻿7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to "\n7" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "\n7" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "\r7" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "\r7" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to "᠎7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to "᠎7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to " 7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to "　7" followed by getAttribute() 
FAIL marquee.scrollDelay: setAttribute() to "　7" followed by IDL get assert_equals: expected 85 but got 7
PASS marquee.scrollDelay: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to undefined followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to undefined followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to 1.5 followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to true followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to true followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to false followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to false followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to NaN followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to NaN followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to Infinity followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to -Infinity followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to "\0" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to object "2" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to object "2" followed by IDL get 
PASS marquee.scrollDelay: setAttribute() to object "3" followed by getAttribute() 
PASS marquee.scrollDelay: setAttribute() to object "3" followed by IDL get 
PASS marquee.scrollDelay: IDL set to 0 should not throw 
PASS marquee.scrollDelay: IDL set to 0 followed by getAttribute() 
PASS marquee.scrollDelay: IDL set to 0 followed by IDL get 
PASS marquee.scrollDelay: IDL set to 1 should not throw 
PASS marquee.scrollDelay: IDL set to 1 followed by getAttribute() 
PASS marquee.scrollDelay: IDL set to 1 followed by IDL get 
PASS marquee.scrollDelay: IDL set to 257 should not throw 
PASS marquee.scrollDelay: IDL set to 257 followed by getAttribute() 
PASS marquee.scrollDelay: IDL set to 257 followed by IDL get 
PASS marquee.scrollDelay: IDL set to 2147483647 should not throw 
PASS marquee.scrollDelay: IDL set to 2147483647 followed by getAttribute() 
PASS marquee.scrollDelay: IDL set to 2147483647 followed by IDL get 
PASS marquee.scrollDelay: IDL set to "-0" should not throw 
PASS marquee.scrollDelay: IDL set to "-0" followed by getAttribute() 
PASS marquee.scrollDelay: IDL set to "-0" followed by IDL get 
FAIL marquee.scrollDelay: IDL set to 2147483648 should not throw Failed to set the 'scrollDelay' property on 'HTMLMarqueeElement': The provided value (-2147483648) is negative.
FAIL marquee.scrollDelay: IDL set to 4294967295 should not throw Failed to set the 'scrollDelay' property on 'HTMLMarqueeElement': The provided value (-1) is negative.
PASS marquee.trueSpeed: typeof IDL attribute 
PASS marquee.trueSpeed: IDL get with DOM attribute unset 
PASS marquee.trueSpeed: setAttribute() to "" followed by getAttribute() 
FAIL marquee.trueSpeed: setAttribute() to "" followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: setAttribute() to " foo " followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to " foo " followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to undefined followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to undefined followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to null followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to null followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to 7 followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to 7 followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to 1.5 followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to true followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to true followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to false followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to false followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to NaN followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to NaN followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to Infinity followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to -Infinity followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to "\0" followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.trueSpeed: setAttribute() to "trueSpeed" followed by getAttribute() 
PASS marquee.trueSpeed: setAttribute() to "trueSpeed" followed by IDL get 
PASS marquee.trueSpeed: IDL set to "" should not throw 
PASS marquee.trueSpeed: IDL set to "" followed by hasAttribute() 
PASS marquee.trueSpeed: IDL set to "" followed by IDL get 
PASS marquee.trueSpeed: IDL set to " foo " should not throw 
PASS marquee.trueSpeed: IDL set to " foo " followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to " foo " followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to undefined should not throw 
PASS marquee.trueSpeed: IDL set to undefined followed by hasAttribute() 
PASS marquee.trueSpeed: IDL set to undefined followed by IDL get 
PASS marquee.trueSpeed: IDL set to null should not throw 
PASS marquee.trueSpeed: IDL set to null followed by hasAttribute() 
PASS marquee.trueSpeed: IDL set to null followed by IDL get 
PASS marquee.trueSpeed: IDL set to 7 should not throw 
PASS marquee.trueSpeed: IDL set to 7 followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to 7 followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to 1.5 should not throw 
PASS marquee.trueSpeed: IDL set to 1.5 followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to 1.5 followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to true should not throw 
PASS marquee.trueSpeed: IDL set to true followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to true followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to false should not throw 
PASS marquee.trueSpeed: IDL set to false followed by hasAttribute() 
PASS marquee.trueSpeed: IDL set to false followed by IDL get 
PASS marquee.trueSpeed: IDL set to object "[object Object]" should not throw 
PASS marquee.trueSpeed: IDL set to object "[object Object]" followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to object "[object Object]" followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to NaN should not throw 
PASS marquee.trueSpeed: IDL set to NaN followed by hasAttribute() 
PASS marquee.trueSpeed: IDL set to NaN followed by IDL get 
PASS marquee.trueSpeed: IDL set to Infinity should not throw 
PASS marquee.trueSpeed: IDL set to Infinity followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to Infinity followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to -Infinity should not throw 
PASS marquee.trueSpeed: IDL set to -Infinity followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to -Infinity followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to "\0" should not throw 
PASS marquee.trueSpeed: IDL set to "\0" followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to "\0" followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to object "test-toString" should not throw 
PASS marquee.trueSpeed: IDL set to object "test-toString" followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to object "test-toString" followed by IDL get assert_equals: expected true but got false
PASS marquee.trueSpeed: IDL set to object "test-valueOf" should not throw 
PASS marquee.trueSpeed: IDL set to object "test-valueOf" followed by hasAttribute() 
FAIL marquee.trueSpeed: IDL set to object "test-valueOf" followed by IDL get assert_equals: expected true but got false
PASS marquee.vspace: typeof IDL attribute 
PASS marquee.vspace: IDL get with DOM attribute unset 
PASS marquee.vspace: setAttribute() to -2147483649 followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to -2147483649 followed by IDL get assert_equals: expected 0 but got 2147483647
PASS marquee.vspace: setAttribute() to -2147483648 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to -2147483648 followed by IDL get 
PASS marquee.vspace: setAttribute() to -36 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to -36 followed by IDL get 
PASS marquee.vspace: setAttribute() to -1 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to -1 followed by IDL get 
PASS marquee.vspace: setAttribute() to 0 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 0 followed by IDL get 
PASS marquee.vspace: setAttribute() to 1 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 1 followed by IDL get 
PASS marquee.vspace: setAttribute() to 257 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 257 followed by IDL get 
PASS marquee.vspace: setAttribute() to 2147483647 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 2147483647 followed by IDL get 
PASS marquee.vspace: setAttribute() to 2147483648 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 2147483648 followed by IDL get 
PASS marquee.vspace: setAttribute() to 4294967295 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 4294967295 followed by IDL get 
PASS marquee.vspace: setAttribute() to 4294967296 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 4294967296 followed by IDL get 
PASS marquee.vspace: setAttribute() to "" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "" followed by IDL get 
PASS marquee.vspace: setAttribute() to "-1" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "-1" followed by IDL get 
PASS marquee.vspace: setAttribute() to "-0" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "-0" followed by IDL get 
PASS marquee.vspace: setAttribute() to "0" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "0" followed by IDL get 
PASS marquee.vspace: setAttribute() to "1" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "1" followed by IDL get 
PASS marquee.vspace: setAttribute() to "\t7" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "\t7" followed by IDL get 
PASS marquee.vspace: setAttribute() to "\v7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to "\v7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to "\f7" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "\f7" followed by IDL get 
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to " 7" followed by IDL get 
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to "﻿7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to "﻿7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to "\n7" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "\n7" followed by IDL get 
PASS marquee.vspace: setAttribute() to "\r7" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "\r7" followed by IDL get 
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to "᠎7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to "᠎7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " 7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to " 7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to "　7" followed by getAttribute() 
FAIL marquee.vspace: setAttribute() to "　7" followed by IDL get assert_equals: expected 0 but got 7
PASS marquee.vspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.vspace: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.vspace: setAttribute() to undefined followed by getAttribute() 
PASS marquee.vspace: setAttribute() to undefined followed by IDL get 
PASS marquee.vspace: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.vspace: setAttribute() to 1.5 followed by IDL get 
PASS marquee.vspace: setAttribute() to true followed by getAttribute() 
PASS marquee.vspace: setAttribute() to true followed by IDL get 
PASS marquee.vspace: setAttribute() to false followed by getAttribute() 
PASS marquee.vspace: setAttribute() to false followed by IDL get 
PASS marquee.vspace: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.vspace: setAttribute() to NaN followed by getAttribute() 
PASS marquee.vspace: setAttribute() to NaN followed by IDL get 
PASS marquee.vspace: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.vspace: setAttribute() to Infinity followed by IDL get 
PASS marquee.vspace: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.vspace: setAttribute() to -Infinity followed by IDL get 
PASS marquee.vspace: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to "\0" followed by IDL get 
PASS marquee.vspace: setAttribute() to object "2" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to object "2" followed by IDL get 
PASS marquee.vspace: setAttribute() to object "3" followed by getAttribute() 
PASS marquee.vspace: setAttribute() to object "3" followed by IDL get 
PASS marquee.vspace: IDL set to 0 should not throw 
PASS marquee.vspace: IDL set to 0 followed by getAttribute() 
PASS marquee.vspace: IDL set to 0 followed by IDL get 
PASS marquee.vspace: IDL set to 1 should not throw 
PASS marquee.vspace: IDL set to 1 followed by getAttribute() 
PASS marquee.vspace: IDL set to 1 followed by IDL get 
PASS marquee.vspace: IDL set to 257 should not throw 
PASS marquee.vspace: IDL set to 257 followed by getAttribute() 
PASS marquee.vspace: IDL set to 257 followed by IDL get 
PASS marquee.vspace: IDL set to 2147483647 should not throw 
PASS marquee.vspace: IDL set to 2147483647 followed by getAttribute() 
PASS marquee.vspace: IDL set to 2147483647 followed by IDL get 
PASS marquee.vspace: IDL set to "-0" should not throw 
PASS marquee.vspace: IDL set to "-0" followed by getAttribute() 
PASS marquee.vspace: IDL set to "-0" followed by IDL get 
PASS marquee.vspace: IDL set to 2147483648 should not throw 
FAIL marquee.vspace: IDL set to 2147483648 followed by getAttribute() assert_equals: expected "0" but got "2147483648"
PASS marquee.vspace: IDL set to 2147483648 followed by IDL get 
PASS marquee.vspace: IDL set to 4294967295 should not throw 
FAIL marquee.vspace: IDL set to 4294967295 followed by getAttribute() assert_equals: expected "0" but got "4294967295"
PASS marquee.vspace: IDL set to 4294967295 followed by IDL get 
PASS marquee.width: typeof IDL attribute 
PASS marquee.width: IDL get with DOM attribute unset 
PASS marquee.width: setAttribute() to "" followed by getAttribute() 
PASS marquee.width: setAttribute() to "" followed by IDL get 
PASS marquee.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.width: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.width: setAttribute() to undefined followed by getAttribute() 
PASS marquee.width: setAttribute() to undefined followed by IDL get 
PASS marquee.width: setAttribute() to 7 followed by getAttribute() 
PASS marquee.width: setAttribute() to 7 followed by IDL get 
PASS marquee.width: setAttribute() to 1.5 followed by getAttribute() 
PASS marquee.width: setAttribute() to 1.5 followed by IDL get 
PASS marquee.width: setAttribute() to true followed by getAttribute() 
PASS marquee.width: setAttribute() to true followed by IDL get 
PASS marquee.width: setAttribute() to false followed by getAttribute() 
PASS marquee.width: setAttribute() to false followed by IDL get 
PASS marquee.width: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS marquee.width: setAttribute() to object "[object Object]" followed by IDL get 
PASS marquee.width: setAttribute() to NaN followed by getAttribute() 
PASS marquee.width: setAttribute() to NaN followed by IDL get 
PASS marquee.width: setAttribute() to Infinity followed by getAttribute() 
PASS marquee.width: setAttribute() to Infinity followed by IDL get 
PASS marquee.width: setAttribute() to -Infinity followed by getAttribute() 
PASS marquee.width: setAttribute() to -Infinity followed by IDL get 
PASS marquee.width: setAttribute() to "\0" followed by getAttribute() 
PASS marquee.width: setAttribute() to "\0" followed by IDL get 
PASS marquee.width: setAttribute() to null followed by getAttribute() 
PASS marquee.width: setAttribute() to null followed by IDL get 
PASS marquee.width: setAttribute() to object "test-toString" followed by getAttribute() 
PASS marquee.width: setAttribute() to object "test-toString" followed by IDL get 
PASS marquee.width: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS marquee.width: setAttribute() to object "test-valueOf" followed by IDL get 
PASS marquee.width: IDL set to "" should not throw 
PASS marquee.width: IDL set to "" followed by getAttribute() 
PASS marquee.width: IDL set to "" followed by IDL get 
PASS marquee.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS marquee.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS marquee.width: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS marquee.width: IDL set to undefined should not throw 
PASS marquee.width: IDL set to undefined followed by getAttribute() 
PASS marquee.width: IDL set to undefined followed by IDL get 
PASS marquee.width: IDL set to 7 should not throw 
PASS marquee.width: IDL set to 7 followed by getAttribute() 
PASS marquee.width: IDL set to 7 followed by IDL get 
PASS marquee.width: IDL set to 1.5 should not throw 
PASS marquee.width: IDL set to 1.5 followed by getAttribute() 
PASS marquee.width: IDL set to 1.5 followed by IDL get 
PASS marquee.width: IDL set to true should not throw 
PASS marquee.width: IDL set to true followed by getAttribute() 
PASS marquee.width: IDL set to true followed by IDL get 
PASS marquee.width: IDL set to false should not throw 
PASS marquee.width: IDL set to false followed by getAttribute() 
PASS marquee.width: IDL set to false followed by IDL get 
PASS marquee.width: IDL set to object "[object Object]" should not throw 
PASS marquee.width: IDL set to object "[object Object]" followed by getAttribute() 
PASS marquee.width: IDL set to object "[object Object]" followed by IDL get 
PASS marquee.width: IDL set to NaN should not throw 
PASS marquee.width: IDL set to NaN followed by getAttribute() 
PASS marquee.width: IDL set to NaN followed by IDL get 
PASS marquee.width: IDL set to Infinity should not throw 
PASS marquee.width: IDL set to Infinity followed by getAttribute() 
PASS marquee.width: IDL set to Infinity followed by IDL get 
PASS marquee.width: IDL set to -Infinity should not throw 
PASS marquee.width: IDL set to -Infinity followed by getAttribute() 
PASS marquee.width: IDL set to -Infinity followed by IDL get 
PASS marquee.width: IDL set to "\0" should not throw 
PASS marquee.width: IDL set to "\0" followed by getAttribute() 
PASS marquee.width: IDL set to "\0" followed by IDL get 
PASS marquee.width: IDL set to null should not throw 
PASS marquee.width: IDL set to null followed by getAttribute() 
PASS marquee.width: IDL set to null followed by IDL get 
PASS marquee.width: IDL set to object "test-toString" should not throw 
PASS marquee.width: IDL set to object "test-toString" followed by getAttribute() 
PASS marquee.width: IDL set to object "test-toString" followed by IDL get 
PASS marquee.width: IDL set to object "test-valueOf" should not throw 
PASS marquee.width: IDL set to object "test-valueOf" followed by getAttribute() 
PASS marquee.width: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.title: typeof IDL attribute 
PASS frameset.title: IDL get with DOM attribute unset 
PASS frameset.title: setAttribute() to "" followed by getAttribute() 
PASS frameset.title: setAttribute() to "" followed by IDL get 
PASS frameset.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.title: setAttribute() to undefined followed by getAttribute() 
PASS frameset.title: setAttribute() to undefined followed by IDL get 
PASS frameset.title: setAttribute() to 7 followed by getAttribute() 
PASS frameset.title: setAttribute() to 7 followed by IDL get 
PASS frameset.title: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.title: setAttribute() to 1.5 followed by IDL get 
PASS frameset.title: setAttribute() to true followed by getAttribute() 
PASS frameset.title: setAttribute() to true followed by IDL get 
PASS frameset.title: setAttribute() to false followed by getAttribute() 
PASS frameset.title: setAttribute() to false followed by IDL get 
PASS frameset.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.title: setAttribute() to NaN followed by getAttribute() 
PASS frameset.title: setAttribute() to NaN followed by IDL get 
PASS frameset.title: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.title: setAttribute() to Infinity followed by IDL get 
PASS frameset.title: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.title: setAttribute() to -Infinity followed by IDL get 
PASS frameset.title: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.title: setAttribute() to "\0" followed by IDL get 
PASS frameset.title: setAttribute() to null followed by getAttribute() 
PASS frameset.title: setAttribute() to null followed by IDL get 
PASS frameset.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.title: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.title: IDL set to "" should not throw 
PASS frameset.title: IDL set to "" followed by getAttribute() 
PASS frameset.title: IDL set to "" followed by IDL get 
PASS frameset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.title: IDL set to undefined should not throw 
PASS frameset.title: IDL set to undefined followed by getAttribute() 
PASS frameset.title: IDL set to undefined followed by IDL get 
PASS frameset.title: IDL set to 7 should not throw 
PASS frameset.title: IDL set to 7 followed by getAttribute() 
PASS frameset.title: IDL set to 7 followed by IDL get 
PASS frameset.title: IDL set to 1.5 should not throw 
PASS frameset.title: IDL set to 1.5 followed by getAttribute() 
PASS frameset.title: IDL set to 1.5 followed by IDL get 
PASS frameset.title: IDL set to true should not throw 
PASS frameset.title: IDL set to true followed by getAttribute() 
PASS frameset.title: IDL set to true followed by IDL get 
PASS frameset.title: IDL set to false should not throw 
PASS frameset.title: IDL set to false followed by getAttribute() 
PASS frameset.title: IDL set to false followed by IDL get 
PASS frameset.title: IDL set to object "[object Object]" should not throw 
PASS frameset.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.title: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.title: IDL set to NaN should not throw 
PASS frameset.title: IDL set to NaN followed by getAttribute() 
PASS frameset.title: IDL set to NaN followed by IDL get 
PASS frameset.title: IDL set to Infinity should not throw 
PASS frameset.title: IDL set to Infinity followed by getAttribute() 
PASS frameset.title: IDL set to Infinity followed by IDL get 
PASS frameset.title: IDL set to -Infinity should not throw 
PASS frameset.title: IDL set to -Infinity followed by getAttribute() 
PASS frameset.title: IDL set to -Infinity followed by IDL get 
PASS frameset.title: IDL set to "\0" should not throw 
PASS frameset.title: IDL set to "\0" followed by getAttribute() 
PASS frameset.title: IDL set to "\0" followed by IDL get 
PASS frameset.title: IDL set to null should not throw 
PASS frameset.title: IDL set to null followed by getAttribute() 
PASS frameset.title: IDL set to null followed by IDL get 
PASS frameset.title: IDL set to object "test-toString" should not throw 
PASS frameset.title: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.title: IDL set to object "test-toString" followed by IDL get 
PASS frameset.title: IDL set to object "test-valueOf" should not throw 
PASS frameset.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.title: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.lang: typeof IDL attribute 
PASS frameset.lang: IDL get with DOM attribute unset 
PASS frameset.lang: setAttribute() to "" followed by getAttribute() 
PASS frameset.lang: setAttribute() to "" followed by IDL get 
PASS frameset.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.lang: setAttribute() to undefined followed by getAttribute() 
PASS frameset.lang: setAttribute() to undefined followed by IDL get 
PASS frameset.lang: setAttribute() to 7 followed by getAttribute() 
PASS frameset.lang: setAttribute() to 7 followed by IDL get 
PASS frameset.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.lang: setAttribute() to 1.5 followed by IDL get 
PASS frameset.lang: setAttribute() to true followed by getAttribute() 
PASS frameset.lang: setAttribute() to true followed by IDL get 
PASS frameset.lang: setAttribute() to false followed by getAttribute() 
PASS frameset.lang: setAttribute() to false followed by IDL get 
PASS frameset.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.lang: setAttribute() to NaN followed by getAttribute() 
PASS frameset.lang: setAttribute() to NaN followed by IDL get 
PASS frameset.lang: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.lang: setAttribute() to Infinity followed by IDL get 
PASS frameset.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.lang: setAttribute() to -Infinity followed by IDL get 
PASS frameset.lang: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.lang: setAttribute() to "\0" followed by IDL get 
PASS frameset.lang: setAttribute() to null followed by getAttribute() 
PASS frameset.lang: setAttribute() to null followed by IDL get 
PASS frameset.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.lang: IDL set to "" should not throw 
PASS frameset.lang: IDL set to "" followed by getAttribute() 
PASS frameset.lang: IDL set to "" followed by IDL get 
PASS frameset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.lang: IDL set to undefined should not throw 
PASS frameset.lang: IDL set to undefined followed by getAttribute() 
PASS frameset.lang: IDL set to undefined followed by IDL get 
PASS frameset.lang: IDL set to 7 should not throw 
PASS frameset.lang: IDL set to 7 followed by getAttribute() 
PASS frameset.lang: IDL set to 7 followed by IDL get 
PASS frameset.lang: IDL set to 1.5 should not throw 
PASS frameset.lang: IDL set to 1.5 followed by getAttribute() 
PASS frameset.lang: IDL set to 1.5 followed by IDL get 
PASS frameset.lang: IDL set to true should not throw 
PASS frameset.lang: IDL set to true followed by getAttribute() 
PASS frameset.lang: IDL set to true followed by IDL get 
PASS frameset.lang: IDL set to false should not throw 
PASS frameset.lang: IDL set to false followed by getAttribute() 
PASS frameset.lang: IDL set to false followed by IDL get 
PASS frameset.lang: IDL set to object "[object Object]" should not throw 
PASS frameset.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.lang: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.lang: IDL set to NaN should not throw 
PASS frameset.lang: IDL set to NaN followed by getAttribute() 
PASS frameset.lang: IDL set to NaN followed by IDL get 
PASS frameset.lang: IDL set to Infinity should not throw 
PASS frameset.lang: IDL set to Infinity followed by getAttribute() 
PASS frameset.lang: IDL set to Infinity followed by IDL get 
PASS frameset.lang: IDL set to -Infinity should not throw 
PASS frameset.lang: IDL set to -Infinity followed by getAttribute() 
PASS frameset.lang: IDL set to -Infinity followed by IDL get 
PASS frameset.lang: IDL set to "\0" should not throw 
PASS frameset.lang: IDL set to "\0" followed by getAttribute() 
PASS frameset.lang: IDL set to "\0" followed by IDL get 
PASS frameset.lang: IDL set to null should not throw 
PASS frameset.lang: IDL set to null followed by getAttribute() 
PASS frameset.lang: IDL set to null followed by IDL get 
PASS frameset.lang: IDL set to object "test-toString" should not throw 
PASS frameset.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.lang: IDL set to object "test-toString" followed by IDL get 
PASS frameset.lang: IDL set to object "test-valueOf" should not throw 
PASS frameset.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.dir: typeof IDL attribute 
PASS frameset.dir: IDL get with DOM attribute unset 
PASS frameset.dir: setAttribute() to "" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "" followed by IDL get 
PASS frameset.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.dir: setAttribute() to undefined followed by getAttribute() 
PASS frameset.dir: setAttribute() to undefined followed by IDL get 
PASS frameset.dir: setAttribute() to 7 followed by getAttribute() 
PASS frameset.dir: setAttribute() to 7 followed by IDL get 
PASS frameset.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.dir: setAttribute() to 1.5 followed by IDL get 
PASS frameset.dir: setAttribute() to true followed by getAttribute() 
PASS frameset.dir: setAttribute() to true followed by IDL get 
PASS frameset.dir: setAttribute() to false followed by getAttribute() 
PASS frameset.dir: setAttribute() to false followed by IDL get 
PASS frameset.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.dir: setAttribute() to NaN followed by getAttribute() 
PASS frameset.dir: setAttribute() to NaN followed by IDL get 
PASS frameset.dir: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.dir: setAttribute() to Infinity followed by IDL get 
PASS frameset.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.dir: setAttribute() to -Infinity followed by IDL get 
PASS frameset.dir: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "\0" followed by IDL get 
PASS frameset.dir: setAttribute() to null followed by getAttribute() 
PASS frameset.dir: setAttribute() to null followed by IDL get 
PASS frameset.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "ltr" followed by IDL get 
PASS frameset.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "xltr" followed by IDL get 
PASS frameset.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS frameset.dir: setAttribute() to "tr" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "tr" followed by IDL get 
PASS frameset.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "LTR" followed by IDL get 
PASS frameset.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "rtl" followed by IDL get 
PASS frameset.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "xrtl" followed by IDL get 
PASS frameset.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS frameset.dir: setAttribute() to "tl" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "tl" followed by IDL get 
PASS frameset.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "RTL" followed by IDL get 
PASS frameset.dir: setAttribute() to "auto" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "auto" followed by IDL get 
PASS frameset.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "xauto" followed by IDL get 
PASS frameset.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "auto\0" followed by IDL get 
PASS frameset.dir: setAttribute() to "uto" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "uto" followed by IDL get 
PASS frameset.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS frameset.dir: setAttribute() to "AUTO" followed by IDL get 
PASS frameset.dir: IDL set to "" should not throw 
PASS frameset.dir: IDL set to "" followed by getAttribute() 
PASS frameset.dir: IDL set to "" followed by IDL get 
PASS frameset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.dir: IDL set to undefined should not throw 
PASS frameset.dir: IDL set to undefined followed by getAttribute() 
PASS frameset.dir: IDL set to undefined followed by IDL get 
PASS frameset.dir: IDL set to 7 should not throw 
PASS frameset.dir: IDL set to 7 followed by getAttribute() 
PASS frameset.dir: IDL set to 7 followed by IDL get 
PASS frameset.dir: IDL set to 1.5 should not throw 
PASS frameset.dir: IDL set to 1.5 followed by getAttribute() 
PASS frameset.dir: IDL set to 1.5 followed by IDL get 
PASS frameset.dir: IDL set to true should not throw 
PASS frameset.dir: IDL set to true followed by getAttribute() 
PASS frameset.dir: IDL set to true followed by IDL get 
PASS frameset.dir: IDL set to false should not throw 
PASS frameset.dir: IDL set to false followed by getAttribute() 
PASS frameset.dir: IDL set to false followed by IDL get 
PASS frameset.dir: IDL set to object "[object Object]" should not throw 
PASS frameset.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.dir: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.dir: IDL set to NaN should not throw 
PASS frameset.dir: IDL set to NaN followed by getAttribute() 
PASS frameset.dir: IDL set to NaN followed by IDL get 
PASS frameset.dir: IDL set to Infinity should not throw 
PASS frameset.dir: IDL set to Infinity followed by getAttribute() 
PASS frameset.dir: IDL set to Infinity followed by IDL get 
PASS frameset.dir: IDL set to -Infinity should not throw 
PASS frameset.dir: IDL set to -Infinity followed by getAttribute() 
PASS frameset.dir: IDL set to -Infinity followed by IDL get 
PASS frameset.dir: IDL set to "\0" should not throw 
PASS frameset.dir: IDL set to "\0" followed by getAttribute() 
PASS frameset.dir: IDL set to "\0" followed by IDL get 
PASS frameset.dir: IDL set to null should not throw 
PASS frameset.dir: IDL set to null followed by IDL get 
PASS frameset.dir: IDL set to object "test-toString" should not throw 
PASS frameset.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.dir: IDL set to object "test-toString" followed by IDL get 
PASS frameset.dir: IDL set to object "test-valueOf" should not throw 
PASS frameset.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.dir: IDL set to "ltr" should not throw 
PASS frameset.dir: IDL set to "ltr" followed by getAttribute() 
PASS frameset.dir: IDL set to "ltr" followed by IDL get 
PASS frameset.dir: IDL set to "xltr" should not throw 
PASS frameset.dir: IDL set to "xltr" followed by getAttribute() 
PASS frameset.dir: IDL set to "xltr" followed by IDL get 
PASS frameset.dir: IDL set to "ltr\0" should not throw 
PASS frameset.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS frameset.dir: IDL set to "ltr\0" followed by IDL get 
PASS frameset.dir: IDL set to "tr" should not throw 
PASS frameset.dir: IDL set to "tr" followed by getAttribute() 
PASS frameset.dir: IDL set to "tr" followed by IDL get 
PASS frameset.dir: IDL set to "LTR" should not throw 
PASS frameset.dir: IDL set to "LTR" followed by getAttribute() 
PASS frameset.dir: IDL set to "LTR" followed by IDL get 
PASS frameset.dir: IDL set to "rtl" should not throw 
PASS frameset.dir: IDL set to "rtl" followed by getAttribute() 
PASS frameset.dir: IDL set to "rtl" followed by IDL get 
PASS frameset.dir: IDL set to "xrtl" should not throw 
PASS frameset.dir: IDL set to "xrtl" followed by getAttribute() 
PASS frameset.dir: IDL set to "xrtl" followed by IDL get 
PASS frameset.dir: IDL set to "rtl\0" should not throw 
PASS frameset.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS frameset.dir: IDL set to "rtl\0" followed by IDL get 
PASS frameset.dir: IDL set to "tl" should not throw 
PASS frameset.dir: IDL set to "tl" followed by getAttribute() 
PASS frameset.dir: IDL set to "tl" followed by IDL get 
PASS frameset.dir: IDL set to "RTL" should not throw 
PASS frameset.dir: IDL set to "RTL" followed by getAttribute() 
PASS frameset.dir: IDL set to "RTL" followed by IDL get 
PASS frameset.dir: IDL set to "auto" should not throw 
PASS frameset.dir: IDL set to "auto" followed by getAttribute() 
PASS frameset.dir: IDL set to "auto" followed by IDL get 
PASS frameset.dir: IDL set to "xauto" should not throw 
PASS frameset.dir: IDL set to "xauto" followed by getAttribute() 
PASS frameset.dir: IDL set to "xauto" followed by IDL get 
PASS frameset.dir: IDL set to "auto\0" should not throw 
PASS frameset.dir: IDL set to "auto\0" followed by getAttribute() 
PASS frameset.dir: IDL set to "auto\0" followed by IDL get 
PASS frameset.dir: IDL set to "uto" should not throw 
PASS frameset.dir: IDL set to "uto" followed by getAttribute() 
PASS frameset.dir: IDL set to "uto" followed by IDL get 
PASS frameset.dir: IDL set to "AUTO" should not throw 
PASS frameset.dir: IDL set to "AUTO" followed by getAttribute() 
PASS frameset.dir: IDL set to "AUTO" followed by IDL get 
PASS frameset.className (<frameset class>): typeof IDL attribute 
PASS frameset.className (<frameset class>): IDL get with DOM attribute unset 
PASS frameset.className (<frameset class>): setAttribute() to "" followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to "" followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to undefined followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to undefined followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to 7 followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to 7 followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to 1.5 followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to true followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to true followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to false followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to false followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to NaN followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to NaN followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to Infinity followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to Infinity followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to -Infinity followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to "\0" followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to "\0" followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to null followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to null followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.className (<frameset class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.className (<frameset class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to "" should not throw 
PASS frameset.className (<frameset class>): IDL set to "" followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to "" followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.className (<frameset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to undefined should not throw 
PASS frameset.className (<frameset class>): IDL set to undefined followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to undefined followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to 7 should not throw 
PASS frameset.className (<frameset class>): IDL set to 7 followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to 7 followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to 1.5 should not throw 
PASS frameset.className (<frameset class>): IDL set to 1.5 followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to 1.5 followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to true should not throw 
PASS frameset.className (<frameset class>): IDL set to true followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to true followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to false should not throw 
PASS frameset.className (<frameset class>): IDL set to false followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to false followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to object "[object Object]" should not throw 
PASS frameset.className (<frameset class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to object "[object Object]" followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to NaN should not throw 
PASS frameset.className (<frameset class>): IDL set to NaN followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to NaN followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to Infinity should not throw 
PASS frameset.className (<frameset class>): IDL set to Infinity followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to Infinity followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to -Infinity should not throw 
PASS frameset.className (<frameset class>): IDL set to -Infinity followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to -Infinity followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to "\0" should not throw 
PASS frameset.className (<frameset class>): IDL set to "\0" followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to "\0" followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to null should not throw 
PASS frameset.className (<frameset class>): IDL set to null followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to null followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to object "test-toString" should not throw 
PASS frameset.className (<frameset class>): IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to object "test-toString" followed by IDL get 
PASS frameset.className (<frameset class>): IDL set to object "test-valueOf" should not throw 
PASS frameset.className (<frameset class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.className (<frameset class>): IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.hidden: typeof IDL attribute 
PASS frameset.hidden: IDL get with DOM attribute unset 
PASS frameset.hidden: setAttribute() to "" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to "" followed by IDL get 
PASS frameset.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS frameset.hidden: setAttribute() to " foo " followed by IDL get 
PASS frameset.hidden: setAttribute() to undefined followed by getAttribute() 
PASS frameset.hidden: setAttribute() to undefined followed by IDL get 
PASS frameset.hidden: setAttribute() to null followed by getAttribute() 
PASS frameset.hidden: setAttribute() to null followed by IDL get 
PASS frameset.hidden: setAttribute() to 7 followed by getAttribute() 
PASS frameset.hidden: setAttribute() to 7 followed by IDL get 
PASS frameset.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.hidden: setAttribute() to 1.5 followed by IDL get 
PASS frameset.hidden: setAttribute() to true followed by getAttribute() 
PASS frameset.hidden: setAttribute() to true followed by IDL get 
PASS frameset.hidden: setAttribute() to false followed by getAttribute() 
PASS frameset.hidden: setAttribute() to false followed by IDL get 
PASS frameset.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.hidden: setAttribute() to NaN followed by getAttribute() 
PASS frameset.hidden: setAttribute() to NaN followed by IDL get 
PASS frameset.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.hidden: setAttribute() to Infinity followed by IDL get 
PASS frameset.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.hidden: setAttribute() to -Infinity followed by IDL get 
PASS frameset.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to "\0" followed by IDL get 
PASS frameset.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS frameset.hidden: setAttribute() to "hidden" followed by IDL get 
PASS frameset.hidden: IDL set to "" should not throw 
PASS frameset.hidden: IDL set to "" followed by hasAttribute() 
PASS frameset.hidden: IDL set to "" followed by IDL get 
PASS frameset.hidden: IDL set to " foo " should not throw 
PASS frameset.hidden: IDL set to " foo " followed by hasAttribute() 
PASS frameset.hidden: IDL set to " foo " followed by IDL get 
PASS frameset.hidden: IDL set to undefined should not throw 
PASS frameset.hidden: IDL set to undefined followed by hasAttribute() 
PASS frameset.hidden: IDL set to undefined followed by IDL get 
PASS frameset.hidden: IDL set to null should not throw 
PASS frameset.hidden: IDL set to null followed by hasAttribute() 
PASS frameset.hidden: IDL set to null followed by IDL get 
PASS frameset.hidden: IDL set to 7 should not throw 
PASS frameset.hidden: IDL set to 7 followed by hasAttribute() 
PASS frameset.hidden: IDL set to 7 followed by IDL get 
PASS frameset.hidden: IDL set to 1.5 should not throw 
PASS frameset.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS frameset.hidden: IDL set to 1.5 followed by IDL get 
PASS frameset.hidden: IDL set to true should not throw 
PASS frameset.hidden: IDL set to true followed by hasAttribute() 
PASS frameset.hidden: IDL set to true followed by IDL get 
PASS frameset.hidden: IDL set to false should not throw 
PASS frameset.hidden: IDL set to false followed by hasAttribute() 
PASS frameset.hidden: IDL set to false followed by IDL get 
PASS frameset.hidden: IDL set to object "[object Object]" should not throw 
PASS frameset.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS frameset.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.hidden: IDL set to NaN should not throw 
PASS frameset.hidden: IDL set to NaN followed by hasAttribute() 
PASS frameset.hidden: IDL set to NaN followed by IDL get 
PASS frameset.hidden: IDL set to Infinity should not throw 
PASS frameset.hidden: IDL set to Infinity followed by hasAttribute() 
PASS frameset.hidden: IDL set to Infinity followed by IDL get 
PASS frameset.hidden: IDL set to -Infinity should not throw 
PASS frameset.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS frameset.hidden: IDL set to -Infinity followed by IDL get 
PASS frameset.hidden: IDL set to "\0" should not throw 
PASS frameset.hidden: IDL set to "\0" followed by hasAttribute() 
PASS frameset.hidden: IDL set to "\0" followed by IDL get 
PASS frameset.hidden: IDL set to object "test-toString" should not throw 
PASS frameset.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS frameset.hidden: IDL set to object "test-toString" followed by IDL get 
PASS frameset.hidden: IDL set to object "test-valueOf" should not throw 
PASS frameset.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS frameset.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.accessKey: typeof IDL attribute 
PASS frameset.accessKey: IDL get with DOM attribute unset 
PASS frameset.accessKey: setAttribute() to "" followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to "" followed by IDL get 
PASS frameset.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to undefined followed by IDL get 
PASS frameset.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to 7 followed by IDL get 
PASS frameset.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS frameset.accessKey: setAttribute() to true followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to true followed by IDL get 
PASS frameset.accessKey: setAttribute() to false followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to false followed by IDL get 
PASS frameset.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to NaN followed by IDL get 
PASS frameset.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to Infinity followed by IDL get 
PASS frameset.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS frameset.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to "\0" followed by IDL get 
PASS frameset.accessKey: setAttribute() to null followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to null followed by IDL get 
PASS frameset.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.accessKey: IDL set to "" should not throw 
PASS frameset.accessKey: IDL set to "" followed by getAttribute() 
PASS frameset.accessKey: IDL set to "" followed by IDL get 
PASS frameset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.accessKey: IDL set to undefined should not throw 
PASS frameset.accessKey: IDL set to undefined followed by getAttribute() 
PASS frameset.accessKey: IDL set to undefined followed by IDL get 
PASS frameset.accessKey: IDL set to 7 should not throw 
PASS frameset.accessKey: IDL set to 7 followed by getAttribute() 
PASS frameset.accessKey: IDL set to 7 followed by IDL get 
PASS frameset.accessKey: IDL set to 1.5 should not throw 
PASS frameset.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS frameset.accessKey: IDL set to 1.5 followed by IDL get 
PASS frameset.accessKey: IDL set to true should not throw 
PASS frameset.accessKey: IDL set to true followed by getAttribute() 
PASS frameset.accessKey: IDL set to true followed by IDL get 
PASS frameset.accessKey: IDL set to false should not throw 
PASS frameset.accessKey: IDL set to false followed by getAttribute() 
PASS frameset.accessKey: IDL set to false followed by IDL get 
PASS frameset.accessKey: IDL set to object "[object Object]" should not throw 
PASS frameset.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.accessKey: IDL set to NaN should not throw 
PASS frameset.accessKey: IDL set to NaN followed by getAttribute() 
PASS frameset.accessKey: IDL set to NaN followed by IDL get 
PASS frameset.accessKey: IDL set to Infinity should not throw 
PASS frameset.accessKey: IDL set to Infinity followed by getAttribute() 
PASS frameset.accessKey: IDL set to Infinity followed by IDL get 
PASS frameset.accessKey: IDL set to -Infinity should not throw 
PASS frameset.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS frameset.accessKey: IDL set to -Infinity followed by IDL get 
PASS frameset.accessKey: IDL set to "\0" should not throw 
PASS frameset.accessKey: IDL set to "\0" followed by getAttribute() 
PASS frameset.accessKey: IDL set to "\0" followed by IDL get 
PASS frameset.accessKey: IDL set to null should not throw 
PASS frameset.accessKey: IDL set to null followed by getAttribute() 
PASS frameset.accessKey: IDL set to null followed by IDL get 
PASS frameset.accessKey: IDL set to object "test-toString" should not throw 
PASS frameset.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS frameset.accessKey: IDL set to object "test-valueOf" should not throw 
PASS frameset.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.tabIndex: typeof IDL attribute 
PASS frameset.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to -36 followed by IDL get 
PASS frameset.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to -1 followed by IDL get 
PASS frameset.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to 0 followed by IDL get 
PASS frameset.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to 1 followed by IDL get 
PASS frameset.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL frameset.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS frameset.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL frameset.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS frameset.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "0" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "1" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS frameset.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS frameset.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS frameset.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS frameset.tabIndex: IDL set to -36 should not throw 
PASS frameset.tabIndex: IDL set to -36 followed by getAttribute() 
PASS frameset.tabIndex: IDL set to -36 followed by IDL get 
PASS frameset.tabIndex: IDL set to -1 should not throw 
PASS frameset.tabIndex: IDL set to -1 followed by getAttribute() 
PASS frameset.tabIndex: IDL set to -1 followed by IDL get 
PASS frameset.tabIndex: IDL set to 0 should not throw 
PASS frameset.tabIndex: IDL set to 0 followed by getAttribute() 
PASS frameset.tabIndex: IDL set to 0 followed by IDL get 
PASS frameset.tabIndex: IDL set to 1 should not throw 
PASS frameset.tabIndex: IDL set to 1 followed by getAttribute() 
PASS frameset.tabIndex: IDL set to 1 followed by IDL get 
PASS frameset.tabIndex: IDL set to 2147483647 should not throw 
PASS frameset.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL frameset.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS frameset.tabIndex: IDL set to -2147483648 should not throw 
PASS frameset.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL frameset.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS frameset.cols: typeof IDL attribute 
PASS frameset.cols: IDL get with DOM attribute unset 
PASS frameset.cols: setAttribute() to "" followed by getAttribute() 
PASS frameset.cols: setAttribute() to "" followed by IDL get 
PASS frameset.cols: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.cols: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.cols: setAttribute() to undefined followed by getAttribute() 
PASS frameset.cols: setAttribute() to undefined followed by IDL get 
PASS frameset.cols: setAttribute() to 7 followed by getAttribute() 
PASS frameset.cols: setAttribute() to 7 followed by IDL get 
PASS frameset.cols: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.cols: setAttribute() to 1.5 followed by IDL get 
PASS frameset.cols: setAttribute() to true followed by getAttribute() 
PASS frameset.cols: setAttribute() to true followed by IDL get 
PASS frameset.cols: setAttribute() to false followed by getAttribute() 
PASS frameset.cols: setAttribute() to false followed by IDL get 
PASS frameset.cols: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.cols: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.cols: setAttribute() to NaN followed by getAttribute() 
PASS frameset.cols: setAttribute() to NaN followed by IDL get 
PASS frameset.cols: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.cols: setAttribute() to Infinity followed by IDL get 
PASS frameset.cols: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.cols: setAttribute() to -Infinity followed by IDL get 
PASS frameset.cols: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.cols: setAttribute() to "\0" followed by IDL get 
PASS frameset.cols: setAttribute() to null followed by getAttribute() 
PASS frameset.cols: setAttribute() to null followed by IDL get 
PASS frameset.cols: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.cols: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.cols: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.cols: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.cols: IDL set to "" should not throw 
PASS frameset.cols: IDL set to "" followed by getAttribute() 
PASS frameset.cols: IDL set to "" followed by IDL get 
PASS frameset.cols: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.cols: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.cols: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.cols: IDL set to undefined should not throw 
PASS frameset.cols: IDL set to undefined followed by getAttribute() 
PASS frameset.cols: IDL set to undefined followed by IDL get 
PASS frameset.cols: IDL set to 7 should not throw 
PASS frameset.cols: IDL set to 7 followed by getAttribute() 
PASS frameset.cols: IDL set to 7 followed by IDL get 
PASS frameset.cols: IDL set to 1.5 should not throw 
PASS frameset.cols: IDL set to 1.5 followed by getAttribute() 
PASS frameset.cols: IDL set to 1.5 followed by IDL get 
PASS frameset.cols: IDL set to true should not throw 
PASS frameset.cols: IDL set to true followed by getAttribute() 
PASS frameset.cols: IDL set to true followed by IDL get 
PASS frameset.cols: IDL set to false should not throw 
PASS frameset.cols: IDL set to false followed by getAttribute() 
PASS frameset.cols: IDL set to false followed by IDL get 
PASS frameset.cols: IDL set to object "[object Object]" should not throw 
PASS frameset.cols: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.cols: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.cols: IDL set to NaN should not throw 
PASS frameset.cols: IDL set to NaN followed by getAttribute() 
PASS frameset.cols: IDL set to NaN followed by IDL get 
PASS frameset.cols: IDL set to Infinity should not throw 
PASS frameset.cols: IDL set to Infinity followed by getAttribute() 
PASS frameset.cols: IDL set to Infinity followed by IDL get 
PASS frameset.cols: IDL set to -Infinity should not throw 
PASS frameset.cols: IDL set to -Infinity followed by getAttribute() 
PASS frameset.cols: IDL set to -Infinity followed by IDL get 
PASS frameset.cols: IDL set to "\0" should not throw 
PASS frameset.cols: IDL set to "\0" followed by getAttribute() 
PASS frameset.cols: IDL set to "\0" followed by IDL get 
PASS frameset.cols: IDL set to null should not throw 
PASS frameset.cols: IDL set to null followed by getAttribute() 
PASS frameset.cols: IDL set to null followed by IDL get 
PASS frameset.cols: IDL set to object "test-toString" should not throw 
PASS frameset.cols: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.cols: IDL set to object "test-toString" followed by IDL get 
PASS frameset.cols: IDL set to object "test-valueOf" should not throw 
PASS frameset.cols: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.cols: IDL set to object "test-valueOf" followed by IDL get 
PASS frameset.rows: typeof IDL attribute 
PASS frameset.rows: IDL get with DOM attribute unset 
PASS frameset.rows: setAttribute() to "" followed by getAttribute() 
PASS frameset.rows: setAttribute() to "" followed by IDL get 
PASS frameset.rows: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.rows: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.rows: setAttribute() to undefined followed by getAttribute() 
PASS frameset.rows: setAttribute() to undefined followed by IDL get 
PASS frameset.rows: setAttribute() to 7 followed by getAttribute() 
PASS frameset.rows: setAttribute() to 7 followed by IDL get 
PASS frameset.rows: setAttribute() to 1.5 followed by getAttribute() 
PASS frameset.rows: setAttribute() to 1.5 followed by IDL get 
PASS frameset.rows: setAttribute() to true followed by getAttribute() 
PASS frameset.rows: setAttribute() to true followed by IDL get 
PASS frameset.rows: setAttribute() to false followed by getAttribute() 
PASS frameset.rows: setAttribute() to false followed by IDL get 
PASS frameset.rows: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frameset.rows: setAttribute() to object "[object Object]" followed by IDL get 
PASS frameset.rows: setAttribute() to NaN followed by getAttribute() 
PASS frameset.rows: setAttribute() to NaN followed by IDL get 
PASS frameset.rows: setAttribute() to Infinity followed by getAttribute() 
PASS frameset.rows: setAttribute() to Infinity followed by IDL get 
PASS frameset.rows: setAttribute() to -Infinity followed by getAttribute() 
PASS frameset.rows: setAttribute() to -Infinity followed by IDL get 
PASS frameset.rows: setAttribute() to "\0" followed by getAttribute() 
PASS frameset.rows: setAttribute() to "\0" followed by IDL get 
PASS frameset.rows: setAttribute() to null followed by getAttribute() 
PASS frameset.rows: setAttribute() to null followed by IDL get 
PASS frameset.rows: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frameset.rows: setAttribute() to object "test-toString" followed by IDL get 
PASS frameset.rows: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frameset.rows: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frameset.rows: IDL set to "" should not throw 
PASS frameset.rows: IDL set to "" followed by getAttribute() 
PASS frameset.rows: IDL set to "" followed by IDL get 
PASS frameset.rows: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frameset.rows: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frameset.rows: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frameset.rows: IDL set to undefined should not throw 
PASS frameset.rows: IDL set to undefined followed by getAttribute() 
PASS frameset.rows: IDL set to undefined followed by IDL get 
PASS frameset.rows: IDL set to 7 should not throw 
PASS frameset.rows: IDL set to 7 followed by getAttribute() 
PASS frameset.rows: IDL set to 7 followed by IDL get 
PASS frameset.rows: IDL set to 1.5 should not throw 
PASS frameset.rows: IDL set to 1.5 followed by getAttribute() 
PASS frameset.rows: IDL set to 1.5 followed by IDL get 
PASS frameset.rows: IDL set to true should not throw 
PASS frameset.rows: IDL set to true followed by getAttribute() 
PASS frameset.rows: IDL set to true followed by IDL get 
PASS frameset.rows: IDL set to false should not throw 
PASS frameset.rows: IDL set to false followed by getAttribute() 
PASS frameset.rows: IDL set to false followed by IDL get 
PASS frameset.rows: IDL set to object "[object Object]" should not throw 
PASS frameset.rows: IDL set to object "[object Object]" followed by getAttribute() 
PASS frameset.rows: IDL set to object "[object Object]" followed by IDL get 
PASS frameset.rows: IDL set to NaN should not throw 
PASS frameset.rows: IDL set to NaN followed by getAttribute() 
PASS frameset.rows: IDL set to NaN followed by IDL get 
PASS frameset.rows: IDL set to Infinity should not throw 
PASS frameset.rows: IDL set to Infinity followed by getAttribute() 
PASS frameset.rows: IDL set to Infinity followed by IDL get 
PASS frameset.rows: IDL set to -Infinity should not throw 
PASS frameset.rows: IDL set to -Infinity followed by getAttribute() 
PASS frameset.rows: IDL set to -Infinity followed by IDL get 
PASS frameset.rows: IDL set to "\0" should not throw 
PASS frameset.rows: IDL set to "\0" followed by getAttribute() 
PASS frameset.rows: IDL set to "\0" followed by IDL get 
PASS frameset.rows: IDL set to null should not throw 
PASS frameset.rows: IDL set to null followed by getAttribute() 
PASS frameset.rows: IDL set to null followed by IDL get 
PASS frameset.rows: IDL set to object "test-toString" should not throw 
PASS frameset.rows: IDL set to object "test-toString" followed by getAttribute() 
PASS frameset.rows: IDL set to object "test-toString" followed by IDL get 
PASS frameset.rows: IDL set to object "test-valueOf" should not throw 
PASS frameset.rows: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frameset.rows: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.title: typeof IDL attribute 
PASS frame.title: IDL get with DOM attribute unset 
PASS frame.title: setAttribute() to "" followed by getAttribute() 
PASS frame.title: setAttribute() to "" followed by IDL get 
PASS frame.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.title: setAttribute() to undefined followed by getAttribute() 
PASS frame.title: setAttribute() to undefined followed by IDL get 
PASS frame.title: setAttribute() to 7 followed by getAttribute() 
PASS frame.title: setAttribute() to 7 followed by IDL get 
PASS frame.title: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.title: setAttribute() to 1.5 followed by IDL get 
PASS frame.title: setAttribute() to true followed by getAttribute() 
PASS frame.title: setAttribute() to true followed by IDL get 
PASS frame.title: setAttribute() to false followed by getAttribute() 
PASS frame.title: setAttribute() to false followed by IDL get 
PASS frame.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.title: setAttribute() to NaN followed by getAttribute() 
PASS frame.title: setAttribute() to NaN followed by IDL get 
PASS frame.title: setAttribute() to Infinity followed by getAttribute() 
PASS frame.title: setAttribute() to Infinity followed by IDL get 
PASS frame.title: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.title: setAttribute() to -Infinity followed by IDL get 
PASS frame.title: setAttribute() to "\0" followed by getAttribute() 
PASS frame.title: setAttribute() to "\0" followed by IDL get 
PASS frame.title: setAttribute() to null followed by getAttribute() 
PASS frame.title: setAttribute() to null followed by IDL get 
PASS frame.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.title: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.title: IDL set to "" should not throw 
PASS frame.title: IDL set to "" followed by getAttribute() 
PASS frame.title: IDL set to "" followed by IDL get 
PASS frame.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.title: IDL set to undefined should not throw 
PASS frame.title: IDL set to undefined followed by getAttribute() 
PASS frame.title: IDL set to undefined followed by IDL get 
PASS frame.title: IDL set to 7 should not throw 
PASS frame.title: IDL set to 7 followed by getAttribute() 
PASS frame.title: IDL set to 7 followed by IDL get 
PASS frame.title: IDL set to 1.5 should not throw 
PASS frame.title: IDL set to 1.5 followed by getAttribute() 
PASS frame.title: IDL set to 1.5 followed by IDL get 
PASS frame.title: IDL set to true should not throw 
PASS frame.title: IDL set to true followed by getAttribute() 
PASS frame.title: IDL set to true followed by IDL get 
PASS frame.title: IDL set to false should not throw 
PASS frame.title: IDL set to false followed by getAttribute() 
PASS frame.title: IDL set to false followed by IDL get 
PASS frame.title: IDL set to object "[object Object]" should not throw 
PASS frame.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.title: IDL set to object "[object Object]" followed by IDL get 
PASS frame.title: IDL set to NaN should not throw 
PASS frame.title: IDL set to NaN followed by getAttribute() 
PASS frame.title: IDL set to NaN followed by IDL get 
PASS frame.title: IDL set to Infinity should not throw 
PASS frame.title: IDL set to Infinity followed by getAttribute() 
PASS frame.title: IDL set to Infinity followed by IDL get 
PASS frame.title: IDL set to -Infinity should not throw 
PASS frame.title: IDL set to -Infinity followed by getAttribute() 
PASS frame.title: IDL set to -Infinity followed by IDL get 
PASS frame.title: IDL set to "\0" should not throw 
PASS frame.title: IDL set to "\0" followed by getAttribute() 
PASS frame.title: IDL set to "\0" followed by IDL get 
PASS frame.title: IDL set to null should not throw 
PASS frame.title: IDL set to null followed by getAttribute() 
PASS frame.title: IDL set to null followed by IDL get 
PASS frame.title: IDL set to object "test-toString" should not throw 
PASS frame.title: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.title: IDL set to object "test-toString" followed by IDL get 
PASS frame.title: IDL set to object "test-valueOf" should not throw 
PASS frame.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.title: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.lang: typeof IDL attribute 
PASS frame.lang: IDL get with DOM attribute unset 
PASS frame.lang: setAttribute() to "" followed by getAttribute() 
PASS frame.lang: setAttribute() to "" followed by IDL get 
PASS frame.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.lang: setAttribute() to undefined followed by getAttribute() 
PASS frame.lang: setAttribute() to undefined followed by IDL get 
PASS frame.lang: setAttribute() to 7 followed by getAttribute() 
PASS frame.lang: setAttribute() to 7 followed by IDL get 
PASS frame.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.lang: setAttribute() to 1.5 followed by IDL get 
PASS frame.lang: setAttribute() to true followed by getAttribute() 
PASS frame.lang: setAttribute() to true followed by IDL get 
PASS frame.lang: setAttribute() to false followed by getAttribute() 
PASS frame.lang: setAttribute() to false followed by IDL get 
PASS frame.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.lang: setAttribute() to NaN followed by getAttribute() 
PASS frame.lang: setAttribute() to NaN followed by IDL get 
PASS frame.lang: setAttribute() to Infinity followed by getAttribute() 
PASS frame.lang: setAttribute() to Infinity followed by IDL get 
PASS frame.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.lang: setAttribute() to -Infinity followed by IDL get 
PASS frame.lang: setAttribute() to "\0" followed by getAttribute() 
PASS frame.lang: setAttribute() to "\0" followed by IDL get 
PASS frame.lang: setAttribute() to null followed by getAttribute() 
PASS frame.lang: setAttribute() to null followed by IDL get 
PASS frame.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.lang: IDL set to "" should not throw 
PASS frame.lang: IDL set to "" followed by getAttribute() 
PASS frame.lang: IDL set to "" followed by IDL get 
PASS frame.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.lang: IDL set to undefined should not throw 
PASS frame.lang: IDL set to undefined followed by getAttribute() 
PASS frame.lang: IDL set to undefined followed by IDL get 
PASS frame.lang: IDL set to 7 should not throw 
PASS frame.lang: IDL set to 7 followed by getAttribute() 
PASS frame.lang: IDL set to 7 followed by IDL get 
PASS frame.lang: IDL set to 1.5 should not throw 
PASS frame.lang: IDL set to 1.5 followed by getAttribute() 
PASS frame.lang: IDL set to 1.5 followed by IDL get 
PASS frame.lang: IDL set to true should not throw 
PASS frame.lang: IDL set to true followed by getAttribute() 
PASS frame.lang: IDL set to true followed by IDL get 
PASS frame.lang: IDL set to false should not throw 
PASS frame.lang: IDL set to false followed by getAttribute() 
PASS frame.lang: IDL set to false followed by IDL get 
PASS frame.lang: IDL set to object "[object Object]" should not throw 
PASS frame.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.lang: IDL set to object "[object Object]" followed by IDL get 
PASS frame.lang: IDL set to NaN should not throw 
PASS frame.lang: IDL set to NaN followed by getAttribute() 
PASS frame.lang: IDL set to NaN followed by IDL get 
PASS frame.lang: IDL set to Infinity should not throw 
PASS frame.lang: IDL set to Infinity followed by getAttribute() 
PASS frame.lang: IDL set to Infinity followed by IDL get 
PASS frame.lang: IDL set to -Infinity should not throw 
PASS frame.lang: IDL set to -Infinity followed by getAttribute() 
PASS frame.lang: IDL set to -Infinity followed by IDL get 
PASS frame.lang: IDL set to "\0" should not throw 
PASS frame.lang: IDL set to "\0" followed by getAttribute() 
PASS frame.lang: IDL set to "\0" followed by IDL get 
PASS frame.lang: IDL set to null should not throw 
PASS frame.lang: IDL set to null followed by getAttribute() 
PASS frame.lang: IDL set to null followed by IDL get 
PASS frame.lang: IDL set to object "test-toString" should not throw 
PASS frame.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.lang: IDL set to object "test-toString" followed by IDL get 
PASS frame.lang: IDL set to object "test-valueOf" should not throw 
PASS frame.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.dir: typeof IDL attribute 
PASS frame.dir: IDL get with DOM attribute unset 
PASS frame.dir: setAttribute() to "" followed by getAttribute() 
PASS frame.dir: setAttribute() to "" followed by IDL get 
PASS frame.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.dir: setAttribute() to undefined followed by getAttribute() 
PASS frame.dir: setAttribute() to undefined followed by IDL get 
PASS frame.dir: setAttribute() to 7 followed by getAttribute() 
PASS frame.dir: setAttribute() to 7 followed by IDL get 
PASS frame.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.dir: setAttribute() to 1.5 followed by IDL get 
PASS frame.dir: setAttribute() to true followed by getAttribute() 
PASS frame.dir: setAttribute() to true followed by IDL get 
PASS frame.dir: setAttribute() to false followed by getAttribute() 
PASS frame.dir: setAttribute() to false followed by IDL get 
PASS frame.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.dir: setAttribute() to NaN followed by getAttribute() 
PASS frame.dir: setAttribute() to NaN followed by IDL get 
PASS frame.dir: setAttribute() to Infinity followed by getAttribute() 
PASS frame.dir: setAttribute() to Infinity followed by IDL get 
PASS frame.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.dir: setAttribute() to -Infinity followed by IDL get 
PASS frame.dir: setAttribute() to "\0" followed by getAttribute() 
PASS frame.dir: setAttribute() to "\0" followed by IDL get 
PASS frame.dir: setAttribute() to null followed by getAttribute() 
PASS frame.dir: setAttribute() to null followed by IDL get 
PASS frame.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS frame.dir: setAttribute() to "ltr" followed by IDL get 
PASS frame.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS frame.dir: setAttribute() to "xltr" followed by IDL get 
PASS frame.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS frame.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS frame.dir: setAttribute() to "tr" followed by getAttribute() 
PASS frame.dir: setAttribute() to "tr" followed by IDL get 
PASS frame.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS frame.dir: setAttribute() to "LTR" followed by IDL get 
PASS frame.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS frame.dir: setAttribute() to "rtl" followed by IDL get 
PASS frame.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS frame.dir: setAttribute() to "xrtl" followed by IDL get 
PASS frame.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS frame.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS frame.dir: setAttribute() to "tl" followed by getAttribute() 
PASS frame.dir: setAttribute() to "tl" followed by IDL get 
PASS frame.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS frame.dir: setAttribute() to "RTL" followed by IDL get 
PASS frame.dir: setAttribute() to "auto" followed by getAttribute() 
PASS frame.dir: setAttribute() to "auto" followed by IDL get 
PASS frame.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS frame.dir: setAttribute() to "xauto" followed by IDL get 
PASS frame.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS frame.dir: setAttribute() to "auto\0" followed by IDL get 
PASS frame.dir: setAttribute() to "uto" followed by getAttribute() 
PASS frame.dir: setAttribute() to "uto" followed by IDL get 
PASS frame.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS frame.dir: setAttribute() to "AUTO" followed by IDL get 
PASS frame.dir: IDL set to "" should not throw 
PASS frame.dir: IDL set to "" followed by getAttribute() 
PASS frame.dir: IDL set to "" followed by IDL get 
PASS frame.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.dir: IDL set to undefined should not throw 
PASS frame.dir: IDL set to undefined followed by getAttribute() 
PASS frame.dir: IDL set to undefined followed by IDL get 
PASS frame.dir: IDL set to 7 should not throw 
PASS frame.dir: IDL set to 7 followed by getAttribute() 
PASS frame.dir: IDL set to 7 followed by IDL get 
PASS frame.dir: IDL set to 1.5 should not throw 
PASS frame.dir: IDL set to 1.5 followed by getAttribute() 
PASS frame.dir: IDL set to 1.5 followed by IDL get 
PASS frame.dir: IDL set to true should not throw 
PASS frame.dir: IDL set to true followed by getAttribute() 
PASS frame.dir: IDL set to true followed by IDL get 
PASS frame.dir: IDL set to false should not throw 
PASS frame.dir: IDL set to false followed by getAttribute() 
PASS frame.dir: IDL set to false followed by IDL get 
PASS frame.dir: IDL set to object "[object Object]" should not throw 
PASS frame.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.dir: IDL set to object "[object Object]" followed by IDL get 
PASS frame.dir: IDL set to NaN should not throw 
PASS frame.dir: IDL set to NaN followed by getAttribute() 
PASS frame.dir: IDL set to NaN followed by IDL get 
PASS frame.dir: IDL set to Infinity should not throw 
PASS frame.dir: IDL set to Infinity followed by getAttribute() 
PASS frame.dir: IDL set to Infinity followed by IDL get 
PASS frame.dir: IDL set to -Infinity should not throw 
PASS frame.dir: IDL set to -Infinity followed by getAttribute() 
PASS frame.dir: IDL set to -Infinity followed by IDL get 
PASS frame.dir: IDL set to "\0" should not throw 
PASS frame.dir: IDL set to "\0" followed by getAttribute() 
PASS frame.dir: IDL set to "\0" followed by IDL get 
PASS frame.dir: IDL set to null should not throw 
PASS frame.dir: IDL set to null followed by IDL get 
PASS frame.dir: IDL set to object "test-toString" should not throw 
PASS frame.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.dir: IDL set to object "test-toString" followed by IDL get 
PASS frame.dir: IDL set to object "test-valueOf" should not throw 
PASS frame.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.dir: IDL set to "ltr" should not throw 
PASS frame.dir: IDL set to "ltr" followed by getAttribute() 
PASS frame.dir: IDL set to "ltr" followed by IDL get 
PASS frame.dir: IDL set to "xltr" should not throw 
PASS frame.dir: IDL set to "xltr" followed by getAttribute() 
PASS frame.dir: IDL set to "xltr" followed by IDL get 
PASS frame.dir: IDL set to "ltr\0" should not throw 
PASS frame.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS frame.dir: IDL set to "ltr\0" followed by IDL get 
PASS frame.dir: IDL set to "tr" should not throw 
PASS frame.dir: IDL set to "tr" followed by getAttribute() 
PASS frame.dir: IDL set to "tr" followed by IDL get 
PASS frame.dir: IDL set to "LTR" should not throw 
PASS frame.dir: IDL set to "LTR" followed by getAttribute() 
PASS frame.dir: IDL set to "LTR" followed by IDL get 
PASS frame.dir: IDL set to "rtl" should not throw 
PASS frame.dir: IDL set to "rtl" followed by getAttribute() 
PASS frame.dir: IDL set to "rtl" followed by IDL get 
PASS frame.dir: IDL set to "xrtl" should not throw 
PASS frame.dir: IDL set to "xrtl" followed by getAttribute() 
PASS frame.dir: IDL set to "xrtl" followed by IDL get 
PASS frame.dir: IDL set to "rtl\0" should not throw 
PASS frame.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS frame.dir: IDL set to "rtl\0" followed by IDL get 
PASS frame.dir: IDL set to "tl" should not throw 
PASS frame.dir: IDL set to "tl" followed by getAttribute() 
PASS frame.dir: IDL set to "tl" followed by IDL get 
PASS frame.dir: IDL set to "RTL" should not throw 
PASS frame.dir: IDL set to "RTL" followed by getAttribute() 
PASS frame.dir: IDL set to "RTL" followed by IDL get 
PASS frame.dir: IDL set to "auto" should not throw 
PASS frame.dir: IDL set to "auto" followed by getAttribute() 
PASS frame.dir: IDL set to "auto" followed by IDL get 
PASS frame.dir: IDL set to "xauto" should not throw 
PASS frame.dir: IDL set to "xauto" followed by getAttribute() 
PASS frame.dir: IDL set to "xauto" followed by IDL get 
PASS frame.dir: IDL set to "auto\0" should not throw 
PASS frame.dir: IDL set to "auto\0" followed by getAttribute() 
PASS frame.dir: IDL set to "auto\0" followed by IDL get 
PASS frame.dir: IDL set to "uto" should not throw 
PASS frame.dir: IDL set to "uto" followed by getAttribute() 
PASS frame.dir: IDL set to "uto" followed by IDL get 
PASS frame.dir: IDL set to "AUTO" should not throw 
PASS frame.dir: IDL set to "AUTO" followed by getAttribute() 
PASS frame.dir: IDL set to "AUTO" followed by IDL get 
PASS frame.className (<frame class>): typeof IDL attribute 
PASS frame.className (<frame class>): IDL get with DOM attribute unset 
PASS frame.className (<frame class>): setAttribute() to "" followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to "" followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to undefined followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to undefined followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to 7 followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to 7 followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to 1.5 followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to 1.5 followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to true followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to true followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to false followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to false followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to NaN followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to NaN followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to Infinity followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to Infinity followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to -Infinity followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to -Infinity followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to "\0" followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to "\0" followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to null followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to null followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to object "test-toString" followed by IDL get 
PASS frame.className (<frame class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.className (<frame class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.className (<frame class>): IDL set to "" should not throw 
PASS frame.className (<frame class>): IDL set to "" followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to "" followed by IDL get 
PASS frame.className (<frame class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.className (<frame class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.className (<frame class>): IDL set to undefined should not throw 
PASS frame.className (<frame class>): IDL set to undefined followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to undefined followed by IDL get 
PASS frame.className (<frame class>): IDL set to 7 should not throw 
PASS frame.className (<frame class>): IDL set to 7 followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to 7 followed by IDL get 
PASS frame.className (<frame class>): IDL set to 1.5 should not throw 
PASS frame.className (<frame class>): IDL set to 1.5 followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to 1.5 followed by IDL get 
PASS frame.className (<frame class>): IDL set to true should not throw 
PASS frame.className (<frame class>): IDL set to true followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to true followed by IDL get 
PASS frame.className (<frame class>): IDL set to false should not throw 
PASS frame.className (<frame class>): IDL set to false followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to false followed by IDL get 
PASS frame.className (<frame class>): IDL set to object "[object Object]" should not throw 
PASS frame.className (<frame class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to object "[object Object]" followed by IDL get 
PASS frame.className (<frame class>): IDL set to NaN should not throw 
PASS frame.className (<frame class>): IDL set to NaN followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to NaN followed by IDL get 
PASS frame.className (<frame class>): IDL set to Infinity should not throw 
PASS frame.className (<frame class>): IDL set to Infinity followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to Infinity followed by IDL get 
PASS frame.className (<frame class>): IDL set to -Infinity should not throw 
PASS frame.className (<frame class>): IDL set to -Infinity followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to -Infinity followed by IDL get 
PASS frame.className (<frame class>): IDL set to "\0" should not throw 
PASS frame.className (<frame class>): IDL set to "\0" followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to "\0" followed by IDL get 
PASS frame.className (<frame class>): IDL set to null should not throw 
PASS frame.className (<frame class>): IDL set to null followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to null followed by IDL get 
PASS frame.className (<frame class>): IDL set to object "test-toString" should not throw 
PASS frame.className (<frame class>): IDL set to object "test-toString" followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to object "test-toString" followed by IDL get 
PASS frame.className (<frame class>): IDL set to object "test-valueOf" should not throw 
PASS frame.className (<frame class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.className (<frame class>): IDL set to object "test-valueOf" followed by IDL get 
PASS frame.hidden: typeof IDL attribute 
PASS frame.hidden: IDL get with DOM attribute unset 
PASS frame.hidden: setAttribute() to "" followed by getAttribute() 
PASS frame.hidden: setAttribute() to "" followed by IDL get 
PASS frame.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS frame.hidden: setAttribute() to " foo " followed by IDL get 
PASS frame.hidden: setAttribute() to undefined followed by getAttribute() 
PASS frame.hidden: setAttribute() to undefined followed by IDL get 
PASS frame.hidden: setAttribute() to null followed by getAttribute() 
PASS frame.hidden: setAttribute() to null followed by IDL get 
PASS frame.hidden: setAttribute() to 7 followed by getAttribute() 
PASS frame.hidden: setAttribute() to 7 followed by IDL get 
PASS frame.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.hidden: setAttribute() to 1.5 followed by IDL get 
PASS frame.hidden: setAttribute() to true followed by getAttribute() 
PASS frame.hidden: setAttribute() to true followed by IDL get 
PASS frame.hidden: setAttribute() to false followed by getAttribute() 
PASS frame.hidden: setAttribute() to false followed by IDL get 
PASS frame.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.hidden: setAttribute() to NaN followed by getAttribute() 
PASS frame.hidden: setAttribute() to NaN followed by IDL get 
PASS frame.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS frame.hidden: setAttribute() to Infinity followed by IDL get 
PASS frame.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.hidden: setAttribute() to -Infinity followed by IDL get 
PASS frame.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS frame.hidden: setAttribute() to "\0" followed by IDL get 
PASS frame.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS frame.hidden: setAttribute() to "hidden" followed by IDL get 
PASS frame.hidden: IDL set to "" should not throw 
PASS frame.hidden: IDL set to "" followed by hasAttribute() 
PASS frame.hidden: IDL set to "" followed by IDL get 
PASS frame.hidden: IDL set to " foo " should not throw 
PASS frame.hidden: IDL set to " foo " followed by hasAttribute() 
PASS frame.hidden: IDL set to " foo " followed by IDL get 
PASS frame.hidden: IDL set to undefined should not throw 
PASS frame.hidden: IDL set to undefined followed by hasAttribute() 
PASS frame.hidden: IDL set to undefined followed by IDL get 
PASS frame.hidden: IDL set to null should not throw 
PASS frame.hidden: IDL set to null followed by hasAttribute() 
PASS frame.hidden: IDL set to null followed by IDL get 
PASS frame.hidden: IDL set to 7 should not throw 
PASS frame.hidden: IDL set to 7 followed by hasAttribute() 
PASS frame.hidden: IDL set to 7 followed by IDL get 
PASS frame.hidden: IDL set to 1.5 should not throw 
PASS frame.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS frame.hidden: IDL set to 1.5 followed by IDL get 
PASS frame.hidden: IDL set to true should not throw 
PASS frame.hidden: IDL set to true followed by hasAttribute() 
PASS frame.hidden: IDL set to true followed by IDL get 
PASS frame.hidden: IDL set to false should not throw 
PASS frame.hidden: IDL set to false followed by hasAttribute() 
PASS frame.hidden: IDL set to false followed by IDL get 
PASS frame.hidden: IDL set to object "[object Object]" should not throw 
PASS frame.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS frame.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS frame.hidden: IDL set to NaN should not throw 
PASS frame.hidden: IDL set to NaN followed by hasAttribute() 
PASS frame.hidden: IDL set to NaN followed by IDL get 
PASS frame.hidden: IDL set to Infinity should not throw 
PASS frame.hidden: IDL set to Infinity followed by hasAttribute() 
PASS frame.hidden: IDL set to Infinity followed by IDL get 
PASS frame.hidden: IDL set to -Infinity should not throw 
PASS frame.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS frame.hidden: IDL set to -Infinity followed by IDL get 
PASS frame.hidden: IDL set to "\0" should not throw 
PASS frame.hidden: IDL set to "\0" followed by hasAttribute() 
PASS frame.hidden: IDL set to "\0" followed by IDL get 
PASS frame.hidden: IDL set to object "test-toString" should not throw 
PASS frame.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS frame.hidden: IDL set to object "test-toString" followed by IDL get 
PASS frame.hidden: IDL set to object "test-valueOf" should not throw 
PASS frame.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS frame.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.accessKey: typeof IDL attribute 
PASS frame.accessKey: IDL get with DOM attribute unset 
PASS frame.accessKey: setAttribute() to "" followed by getAttribute() 
PASS frame.accessKey: setAttribute() to "" followed by IDL get 
PASS frame.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS frame.accessKey: setAttribute() to undefined followed by IDL get 
PASS frame.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS frame.accessKey: setAttribute() to 7 followed by IDL get 
PASS frame.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS frame.accessKey: setAttribute() to true followed by getAttribute() 
PASS frame.accessKey: setAttribute() to true followed by IDL get 
PASS frame.accessKey: setAttribute() to false followed by getAttribute() 
PASS frame.accessKey: setAttribute() to false followed by IDL get 
PASS frame.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS frame.accessKey: setAttribute() to NaN followed by IDL get 
PASS frame.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS frame.accessKey: setAttribute() to Infinity followed by IDL get 
PASS frame.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS frame.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS frame.accessKey: setAttribute() to "\0" followed by IDL get 
PASS frame.accessKey: setAttribute() to null followed by getAttribute() 
PASS frame.accessKey: setAttribute() to null followed by IDL get 
PASS frame.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.accessKey: IDL set to "" should not throw 
PASS frame.accessKey: IDL set to "" followed by getAttribute() 
PASS frame.accessKey: IDL set to "" followed by IDL get 
PASS frame.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.accessKey: IDL set to undefined should not throw 
PASS frame.accessKey: IDL set to undefined followed by getAttribute() 
PASS frame.accessKey: IDL set to undefined followed by IDL get 
PASS frame.accessKey: IDL set to 7 should not throw 
PASS frame.accessKey: IDL set to 7 followed by getAttribute() 
PASS frame.accessKey: IDL set to 7 followed by IDL get 
PASS frame.accessKey: IDL set to 1.5 should not throw 
PASS frame.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS frame.accessKey: IDL set to 1.5 followed by IDL get 
PASS frame.accessKey: IDL set to true should not throw 
PASS frame.accessKey: IDL set to true followed by getAttribute() 
PASS frame.accessKey: IDL set to true followed by IDL get 
PASS frame.accessKey: IDL set to false should not throw 
PASS frame.accessKey: IDL set to false followed by getAttribute() 
PASS frame.accessKey: IDL set to false followed by IDL get 
PASS frame.accessKey: IDL set to object "[object Object]" should not throw 
PASS frame.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS frame.accessKey: IDL set to NaN should not throw 
PASS frame.accessKey: IDL set to NaN followed by getAttribute() 
PASS frame.accessKey: IDL set to NaN followed by IDL get 
PASS frame.accessKey: IDL set to Infinity should not throw 
PASS frame.accessKey: IDL set to Infinity followed by getAttribute() 
PASS frame.accessKey: IDL set to Infinity followed by IDL get 
PASS frame.accessKey: IDL set to -Infinity should not throw 
PASS frame.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS frame.accessKey: IDL set to -Infinity followed by IDL get 
PASS frame.accessKey: IDL set to "\0" should not throw 
PASS frame.accessKey: IDL set to "\0" followed by getAttribute() 
PASS frame.accessKey: IDL set to "\0" followed by IDL get 
PASS frame.accessKey: IDL set to null should not throw 
PASS frame.accessKey: IDL set to null followed by getAttribute() 
PASS frame.accessKey: IDL set to null followed by IDL get 
PASS frame.accessKey: IDL set to object "test-toString" should not throw 
PASS frame.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS frame.accessKey: IDL set to object "test-valueOf" should not throw 
PASS frame.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.tabIndex: typeof IDL attribute 
PASS frame.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to -36 followed by IDL get 
PASS frame.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to -1 followed by IDL get 
PASS frame.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to 0 followed by IDL get 
PASS frame.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to 1 followed by IDL get 
PASS frame.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL frame.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS frame.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL frame.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS frame.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "0" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "1" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS frame.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS frame.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS frame.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS frame.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS frame.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS frame.tabIndex: IDL set to -36 should not throw 
PASS frame.tabIndex: IDL set to -36 followed by getAttribute() 
PASS frame.tabIndex: IDL set to -36 followed by IDL get 
PASS frame.tabIndex: IDL set to -1 should not throw 
PASS frame.tabIndex: IDL set to -1 followed by getAttribute() 
PASS frame.tabIndex: IDL set to -1 followed by IDL get 
PASS frame.tabIndex: IDL set to 0 should not throw 
PASS frame.tabIndex: IDL set to 0 followed by getAttribute() 
PASS frame.tabIndex: IDL set to 0 followed by IDL get 
PASS frame.tabIndex: IDL set to 1 should not throw 
PASS frame.tabIndex: IDL set to 1 followed by getAttribute() 
PASS frame.tabIndex: IDL set to 1 followed by IDL get 
PASS frame.tabIndex: IDL set to 2147483647 should not throw 
PASS frame.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL frame.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS frame.tabIndex: IDL set to -2147483648 should not throw 
PASS frame.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL frame.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS frame.name: typeof IDL attribute 
PASS frame.name: IDL get with DOM attribute unset 
PASS frame.name: setAttribute() to "" followed by getAttribute() 
PASS frame.name: setAttribute() to "" followed by IDL get 
PASS frame.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.name: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.name: setAttribute() to undefined followed by getAttribute() 
PASS frame.name: setAttribute() to undefined followed by IDL get 
PASS frame.name: setAttribute() to 7 followed by getAttribute() 
PASS frame.name: setAttribute() to 7 followed by IDL get 
PASS frame.name: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.name: setAttribute() to 1.5 followed by IDL get 
PASS frame.name: setAttribute() to true followed by getAttribute() 
PASS frame.name: setAttribute() to true followed by IDL get 
PASS frame.name: setAttribute() to false followed by getAttribute() 
PASS frame.name: setAttribute() to false followed by IDL get 
PASS frame.name: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.name: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.name: setAttribute() to NaN followed by getAttribute() 
PASS frame.name: setAttribute() to NaN followed by IDL get 
PASS frame.name: setAttribute() to Infinity followed by getAttribute() 
PASS frame.name: setAttribute() to Infinity followed by IDL get 
PASS frame.name: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.name: setAttribute() to -Infinity followed by IDL get 
PASS frame.name: setAttribute() to "\0" followed by getAttribute() 
PASS frame.name: setAttribute() to "\0" followed by IDL get 
PASS frame.name: setAttribute() to null followed by getAttribute() 
PASS frame.name: setAttribute() to null followed by IDL get 
PASS frame.name: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.name: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.name: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.name: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.name: IDL set to "" should not throw 
PASS frame.name: IDL set to "" followed by getAttribute() 
PASS frame.name: IDL set to "" followed by IDL get 
PASS frame.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.name: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.name: IDL set to undefined should not throw 
PASS frame.name: IDL set to undefined followed by getAttribute() 
PASS frame.name: IDL set to undefined followed by IDL get 
PASS frame.name: IDL set to 7 should not throw 
PASS frame.name: IDL set to 7 followed by getAttribute() 
PASS frame.name: IDL set to 7 followed by IDL get 
PASS frame.name: IDL set to 1.5 should not throw 
PASS frame.name: IDL set to 1.5 followed by getAttribute() 
PASS frame.name: IDL set to 1.5 followed by IDL get 
PASS frame.name: IDL set to true should not throw 
PASS frame.name: IDL set to true followed by getAttribute() 
PASS frame.name: IDL set to true followed by IDL get 
PASS frame.name: IDL set to false should not throw 
PASS frame.name: IDL set to false followed by getAttribute() 
PASS frame.name: IDL set to false followed by IDL get 
PASS frame.name: IDL set to object "[object Object]" should not throw 
PASS frame.name: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.name: IDL set to object "[object Object]" followed by IDL get 
PASS frame.name: IDL set to NaN should not throw 
PASS frame.name: IDL set to NaN followed by getAttribute() 
PASS frame.name: IDL set to NaN followed by IDL get 
PASS frame.name: IDL set to Infinity should not throw 
PASS frame.name: IDL set to Infinity followed by getAttribute() 
PASS frame.name: IDL set to Infinity followed by IDL get 
PASS frame.name: IDL set to -Infinity should not throw 
PASS frame.name: IDL set to -Infinity followed by getAttribute() 
PASS frame.name: IDL set to -Infinity followed by IDL get 
PASS frame.name: IDL set to "\0" should not throw 
PASS frame.name: IDL set to "\0" followed by getAttribute() 
PASS frame.name: IDL set to "\0" followed by IDL get 
PASS frame.name: IDL set to null should not throw 
PASS frame.name: IDL set to null followed by getAttribute() 
PASS frame.name: IDL set to null followed by IDL get 
PASS frame.name: IDL set to object "test-toString" should not throw 
PASS frame.name: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.name: IDL set to object "test-toString" followed by IDL get 
PASS frame.name: IDL set to object "test-valueOf" should not throw 
PASS frame.name: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.name: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.scrolling: typeof IDL attribute 
PASS frame.scrolling: IDL get with DOM attribute unset 
PASS frame.scrolling: setAttribute() to "" followed by getAttribute() 
PASS frame.scrolling: setAttribute() to "" followed by IDL get 
PASS frame.scrolling: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.scrolling: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.scrolling: setAttribute() to undefined followed by getAttribute() 
PASS frame.scrolling: setAttribute() to undefined followed by IDL get 
PASS frame.scrolling: setAttribute() to 7 followed by getAttribute() 
PASS frame.scrolling: setAttribute() to 7 followed by IDL get 
PASS frame.scrolling: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.scrolling: setAttribute() to 1.5 followed by IDL get 
PASS frame.scrolling: setAttribute() to true followed by getAttribute() 
PASS frame.scrolling: setAttribute() to true followed by IDL get 
PASS frame.scrolling: setAttribute() to false followed by getAttribute() 
PASS frame.scrolling: setAttribute() to false followed by IDL get 
PASS frame.scrolling: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.scrolling: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.scrolling: setAttribute() to NaN followed by getAttribute() 
PASS frame.scrolling: setAttribute() to NaN followed by IDL get 
PASS frame.scrolling: setAttribute() to Infinity followed by getAttribute() 
PASS frame.scrolling: setAttribute() to Infinity followed by IDL get 
PASS frame.scrolling: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.scrolling: setAttribute() to -Infinity followed by IDL get 
PASS frame.scrolling: setAttribute() to "\0" followed by getAttribute() 
PASS frame.scrolling: setAttribute() to "\0" followed by IDL get 
PASS frame.scrolling: setAttribute() to null followed by getAttribute() 
PASS frame.scrolling: setAttribute() to null followed by IDL get 
PASS frame.scrolling: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.scrolling: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.scrolling: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.scrolling: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.scrolling: IDL set to "" should not throw 
PASS frame.scrolling: IDL set to "" followed by getAttribute() 
PASS frame.scrolling: IDL set to "" followed by IDL get 
PASS frame.scrolling: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.scrolling: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.scrolling: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.scrolling: IDL set to undefined should not throw 
PASS frame.scrolling: IDL set to undefined followed by getAttribute() 
PASS frame.scrolling: IDL set to undefined followed by IDL get 
PASS frame.scrolling: IDL set to 7 should not throw 
PASS frame.scrolling: IDL set to 7 followed by getAttribute() 
PASS frame.scrolling: IDL set to 7 followed by IDL get 
PASS frame.scrolling: IDL set to 1.5 should not throw 
PASS frame.scrolling: IDL set to 1.5 followed by getAttribute() 
PASS frame.scrolling: IDL set to 1.5 followed by IDL get 
PASS frame.scrolling: IDL set to true should not throw 
PASS frame.scrolling: IDL set to true followed by getAttribute() 
PASS frame.scrolling: IDL set to true followed by IDL get 
PASS frame.scrolling: IDL set to false should not throw 
PASS frame.scrolling: IDL set to false followed by getAttribute() 
PASS frame.scrolling: IDL set to false followed by IDL get 
PASS frame.scrolling: IDL set to object "[object Object]" should not throw 
PASS frame.scrolling: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.scrolling: IDL set to object "[object Object]" followed by IDL get 
PASS frame.scrolling: IDL set to NaN should not throw 
PASS frame.scrolling: IDL set to NaN followed by getAttribute() 
PASS frame.scrolling: IDL set to NaN followed by IDL get 
PASS frame.scrolling: IDL set to Infinity should not throw 
PASS frame.scrolling: IDL set to Infinity followed by getAttribute() 
PASS frame.scrolling: IDL set to Infinity followed by IDL get 
PASS frame.scrolling: IDL set to -Infinity should not throw 
PASS frame.scrolling: IDL set to -Infinity followed by getAttribute() 
PASS frame.scrolling: IDL set to -Infinity followed by IDL get 
PASS frame.scrolling: IDL set to "\0" should not throw 
PASS frame.scrolling: IDL set to "\0" followed by getAttribute() 
PASS frame.scrolling: IDL set to "\0" followed by IDL get 
PASS frame.scrolling: IDL set to null should not throw 
PASS frame.scrolling: IDL set to null followed by getAttribute() 
PASS frame.scrolling: IDL set to null followed by IDL get 
PASS frame.scrolling: IDL set to object "test-toString" should not throw 
PASS frame.scrolling: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.scrolling: IDL set to object "test-toString" followed by IDL get 
PASS frame.scrolling: IDL set to object "test-valueOf" should not throw 
PASS frame.scrolling: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.scrolling: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.src: typeof IDL attribute 
PASS frame.src: IDL get with DOM attribute unset 
PASS frame.src: setAttribute() to "" followed by getAttribute() 
PASS frame.src: setAttribute() to "" followed by IDL get 
PASS frame.src: setAttribute() to " foo " followed by getAttribute() 
PASS frame.src: setAttribute() to " foo " followed by IDL get 
PASS frame.src: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS frame.src: setAttribute() to "http://site.example/" followed by IDL get 
PASS frame.src: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS frame.src: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS frame.src: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS frame.src: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS frame.src: setAttribute() to undefined followed by getAttribute() 
PASS frame.src: setAttribute() to undefined followed by IDL get 
PASS frame.src: setAttribute() to 7 followed by getAttribute() 
PASS frame.src: setAttribute() to 7 followed by IDL get 
PASS frame.src: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.src: setAttribute() to 1.5 followed by IDL get 
PASS frame.src: setAttribute() to true followed by getAttribute() 
PASS frame.src: setAttribute() to true followed by IDL get 
PASS frame.src: setAttribute() to false followed by getAttribute() 
PASS frame.src: setAttribute() to false followed by IDL get 
PASS frame.src: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.src: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.src: setAttribute() to NaN followed by getAttribute() 
PASS frame.src: setAttribute() to NaN followed by IDL get 
PASS frame.src: setAttribute() to Infinity followed by getAttribute() 
PASS frame.src: setAttribute() to Infinity followed by IDL get 
PASS frame.src: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.src: setAttribute() to -Infinity followed by IDL get 
PASS frame.src: setAttribute() to "\0" followed by getAttribute() 
PASS frame.src: setAttribute() to "\0" followed by IDL get 
PASS frame.src: setAttribute() to null followed by getAttribute() 
PASS frame.src: setAttribute() to null followed by IDL get 
PASS frame.src: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.src: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.src: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.src: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.src: IDL set to "" should not throw 
PASS frame.src: IDL set to "" followed by getAttribute() 
PASS frame.src: IDL set to "" followed by IDL get 
PASS frame.src: IDL set to " foo " should not throw 
PASS frame.src: IDL set to " foo " followed by getAttribute() 
PASS frame.src: IDL set to " foo " followed by IDL get 
PASS frame.src: IDL set to "http://site.example/" should not throw 
PASS frame.src: IDL set to "http://site.example/" followed by getAttribute() 
PASS frame.src: IDL set to "http://site.example/" followed by IDL get 
PASS frame.src: IDL set to "//site.example/path???@#l" should not throw 
PASS frame.src: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS frame.src: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS frame.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS frame.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS frame.src: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS frame.src: IDL set to undefined should not throw 
PASS frame.src: IDL set to undefined followed by getAttribute() 
PASS frame.src: IDL set to undefined followed by IDL get 
PASS frame.src: IDL set to 7 should not throw 
PASS frame.src: IDL set to 7 followed by getAttribute() 
PASS frame.src: IDL set to 7 followed by IDL get 
PASS frame.src: IDL set to 1.5 should not throw 
PASS frame.src: IDL set to 1.5 followed by getAttribute() 
PASS frame.src: IDL set to 1.5 followed by IDL get 
PASS frame.src: IDL set to true should not throw 
PASS frame.src: IDL set to true followed by getAttribute() 
PASS frame.src: IDL set to true followed by IDL get 
PASS frame.src: IDL set to false should not throw 
PASS frame.src: IDL set to false followed by getAttribute() 
PASS frame.src: IDL set to false followed by IDL get 
PASS frame.src: IDL set to object "[object Object]" should not throw 
PASS frame.src: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.src: IDL set to object "[object Object]" followed by IDL get 
PASS frame.src: IDL set to NaN should not throw 
PASS frame.src: IDL set to NaN followed by getAttribute() 
PASS frame.src: IDL set to NaN followed by IDL get 
PASS frame.src: IDL set to Infinity should not throw 
PASS frame.src: IDL set to Infinity followed by getAttribute() 
PASS frame.src: IDL set to Infinity followed by IDL get 
PASS frame.src: IDL set to -Infinity should not throw 
PASS frame.src: IDL set to -Infinity followed by getAttribute() 
PASS frame.src: IDL set to -Infinity followed by IDL get 
PASS frame.src: IDL set to "\0" should not throw 
PASS frame.src: IDL set to "\0" followed by getAttribute() 
PASS frame.src: IDL set to "\0" followed by IDL get 
PASS frame.src: IDL set to null should not throw 
PASS frame.src: IDL set to null followed by getAttribute() 
PASS frame.src: IDL set to null followed by IDL get 
PASS frame.src: IDL set to object "test-toString" should not throw 
PASS frame.src: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.src: IDL set to object "test-toString" followed by IDL get 
PASS frame.src: IDL set to object "test-valueOf" should not throw 
PASS frame.src: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.src: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.frameBorder: typeof IDL attribute 
PASS frame.frameBorder: IDL get with DOM attribute unset 
PASS frame.frameBorder: setAttribute() to "" followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to "" followed by IDL get 
PASS frame.frameBorder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.frameBorder: setAttribute() to undefined followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to undefined followed by IDL get 
PASS frame.frameBorder: setAttribute() to 7 followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to 7 followed by IDL get 
PASS frame.frameBorder: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to 1.5 followed by IDL get 
PASS frame.frameBorder: setAttribute() to true followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to true followed by IDL get 
PASS frame.frameBorder: setAttribute() to false followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to false followed by IDL get 
PASS frame.frameBorder: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.frameBorder: setAttribute() to NaN followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to NaN followed by IDL get 
PASS frame.frameBorder: setAttribute() to Infinity followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to Infinity followed by IDL get 
PASS frame.frameBorder: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to -Infinity followed by IDL get 
PASS frame.frameBorder: setAttribute() to "\0" followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to "\0" followed by IDL get 
PASS frame.frameBorder: setAttribute() to null followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to null followed by IDL get 
PASS frame.frameBorder: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.frameBorder: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.frameBorder: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.frameBorder: IDL set to "" should not throw 
PASS frame.frameBorder: IDL set to "" followed by getAttribute() 
PASS frame.frameBorder: IDL set to "" followed by IDL get 
PASS frame.frameBorder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.frameBorder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.frameBorder: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.frameBorder: IDL set to undefined should not throw 
PASS frame.frameBorder: IDL set to undefined followed by getAttribute() 
PASS frame.frameBorder: IDL set to undefined followed by IDL get 
PASS frame.frameBorder: IDL set to 7 should not throw 
PASS frame.frameBorder: IDL set to 7 followed by getAttribute() 
PASS frame.frameBorder: IDL set to 7 followed by IDL get 
PASS frame.frameBorder: IDL set to 1.5 should not throw 
PASS frame.frameBorder: IDL set to 1.5 followed by getAttribute() 
PASS frame.frameBorder: IDL set to 1.5 followed by IDL get 
PASS frame.frameBorder: IDL set to true should not throw 
PASS frame.frameBorder: IDL set to true followed by getAttribute() 
PASS frame.frameBorder: IDL set to true followed by IDL get 
PASS frame.frameBorder: IDL set to false should not throw 
PASS frame.frameBorder: IDL set to false followed by getAttribute() 
PASS frame.frameBorder: IDL set to false followed by IDL get 
PASS frame.frameBorder: IDL set to object "[object Object]" should not throw 
PASS frame.frameBorder: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.frameBorder: IDL set to object "[object Object]" followed by IDL get 
PASS frame.frameBorder: IDL set to NaN should not throw 
PASS frame.frameBorder: IDL set to NaN followed by getAttribute() 
PASS frame.frameBorder: IDL set to NaN followed by IDL get 
PASS frame.frameBorder: IDL set to Infinity should not throw 
PASS frame.frameBorder: IDL set to Infinity followed by getAttribute() 
PASS frame.frameBorder: IDL set to Infinity followed by IDL get 
PASS frame.frameBorder: IDL set to -Infinity should not throw 
PASS frame.frameBorder: IDL set to -Infinity followed by getAttribute() 
PASS frame.frameBorder: IDL set to -Infinity followed by IDL get 
PASS frame.frameBorder: IDL set to "\0" should not throw 
PASS frame.frameBorder: IDL set to "\0" followed by getAttribute() 
PASS frame.frameBorder: IDL set to "\0" followed by IDL get 
PASS frame.frameBorder: IDL set to null should not throw 
PASS frame.frameBorder: IDL set to null followed by getAttribute() 
PASS frame.frameBorder: IDL set to null followed by IDL get 
PASS frame.frameBorder: IDL set to object "test-toString" should not throw 
PASS frame.frameBorder: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.frameBorder: IDL set to object "test-toString" followed by IDL get 
PASS frame.frameBorder: IDL set to object "test-valueOf" should not throw 
PASS frame.frameBorder: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.frameBorder: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.longDesc: typeof IDL attribute 
PASS frame.longDesc: IDL get with DOM attribute unset 
PASS frame.longDesc: setAttribute() to "" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to "" followed by IDL get 
PASS frame.longDesc: setAttribute() to " foo " followed by getAttribute() 
PASS frame.longDesc: setAttribute() to " foo " followed by IDL get 
PASS frame.longDesc: setAttribute() to "http://site.example/" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to "http://site.example/" followed by IDL get 
PASS frame.longDesc: setAttribute() to "//site.example/path???@#l" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to "//site.example/path???@#l" followed by IDL get 
PASS frame.longDesc: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS frame.longDesc: setAttribute() to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS frame.longDesc: setAttribute() to undefined followed by getAttribute() 
PASS frame.longDesc: setAttribute() to undefined followed by IDL get 
PASS frame.longDesc: setAttribute() to 7 followed by getAttribute() 
PASS frame.longDesc: setAttribute() to 7 followed by IDL get 
PASS frame.longDesc: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.longDesc: setAttribute() to 1.5 followed by IDL get 
PASS frame.longDesc: setAttribute() to true followed by getAttribute() 
PASS frame.longDesc: setAttribute() to true followed by IDL get 
PASS frame.longDesc: setAttribute() to false followed by getAttribute() 
PASS frame.longDesc: setAttribute() to false followed by IDL get 
PASS frame.longDesc: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.longDesc: setAttribute() to NaN followed by getAttribute() 
PASS frame.longDesc: setAttribute() to NaN followed by IDL get 
PASS frame.longDesc: setAttribute() to Infinity followed by getAttribute() 
PASS frame.longDesc: setAttribute() to Infinity followed by IDL get 
PASS frame.longDesc: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.longDesc: setAttribute() to -Infinity followed by IDL get 
PASS frame.longDesc: setAttribute() to "\0" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to "\0" followed by IDL get 
PASS frame.longDesc: setAttribute() to null followed by getAttribute() 
PASS frame.longDesc: setAttribute() to null followed by IDL get 
PASS frame.longDesc: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.longDesc: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.longDesc: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.longDesc: IDL set to "" should not throw 
PASS frame.longDesc: IDL set to "" followed by getAttribute() 
PASS frame.longDesc: IDL set to "" followed by IDL get 
PASS frame.longDesc: IDL set to " foo " should not throw 
PASS frame.longDesc: IDL set to " foo " followed by getAttribute() 
PASS frame.longDesc: IDL set to " foo " followed by IDL get 
PASS frame.longDesc: IDL set to "http://site.example/" should not throw 
PASS frame.longDesc: IDL set to "http://site.example/" followed by getAttribute() 
PASS frame.longDesc: IDL set to "http://site.example/" followed by IDL get 
PASS frame.longDesc: IDL set to "//site.example/path???@#l" should not throw 
PASS frame.longDesc: IDL set to "//site.example/path???@#l" followed by getAttribute() 
PASS frame.longDesc: IDL set to "//site.example/path???@#l" followed by IDL get 
PASS frame.longDesc: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " should not throw 
PASS frame.longDesc: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by getAttribute() 
PASS frame.longDesc: IDL set to "\0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f " followed by IDL get 
PASS frame.longDesc: IDL set to undefined should not throw 
PASS frame.longDesc: IDL set to undefined followed by getAttribute() 
PASS frame.longDesc: IDL set to undefined followed by IDL get 
PASS frame.longDesc: IDL set to 7 should not throw 
PASS frame.longDesc: IDL set to 7 followed by getAttribute() 
PASS frame.longDesc: IDL set to 7 followed by IDL get 
PASS frame.longDesc: IDL set to 1.5 should not throw 
PASS frame.longDesc: IDL set to 1.5 followed by getAttribute() 
PASS frame.longDesc: IDL set to 1.5 followed by IDL get 
PASS frame.longDesc: IDL set to true should not throw 
PASS frame.longDesc: IDL set to true followed by getAttribute() 
PASS frame.longDesc: IDL set to true followed by IDL get 
PASS frame.longDesc: IDL set to false should not throw 
PASS frame.longDesc: IDL set to false followed by getAttribute() 
PASS frame.longDesc: IDL set to false followed by IDL get 
PASS frame.longDesc: IDL set to object "[object Object]" should not throw 
PASS frame.longDesc: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.longDesc: IDL set to object "[object Object]" followed by IDL get 
PASS frame.longDesc: IDL set to NaN should not throw 
PASS frame.longDesc: IDL set to NaN followed by getAttribute() 
PASS frame.longDesc: IDL set to NaN followed by IDL get 
PASS frame.longDesc: IDL set to Infinity should not throw 
PASS frame.longDesc: IDL set to Infinity followed by getAttribute() 
PASS frame.longDesc: IDL set to Infinity followed by IDL get 
PASS frame.longDesc: IDL set to -Infinity should not throw 
PASS frame.longDesc: IDL set to -Infinity followed by getAttribute() 
PASS frame.longDesc: IDL set to -Infinity followed by IDL get 
PASS frame.longDesc: IDL set to "\0" should not throw 
PASS frame.longDesc: IDL set to "\0" followed by getAttribute() 
PASS frame.longDesc: IDL set to "\0" followed by IDL get 
PASS frame.longDesc: IDL set to null should not throw 
PASS frame.longDesc: IDL set to null followed by getAttribute() 
PASS frame.longDesc: IDL set to null followed by IDL get 
PASS frame.longDesc: IDL set to object "test-toString" should not throw 
PASS frame.longDesc: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.longDesc: IDL set to object "test-toString" followed by IDL get 
PASS frame.longDesc: IDL set to object "test-valueOf" should not throw 
PASS frame.longDesc: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.longDesc: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.noResize: typeof IDL attribute 
PASS frame.noResize: IDL get with DOM attribute unset 
PASS frame.noResize: setAttribute() to "" followed by getAttribute() 
PASS frame.noResize: setAttribute() to "" followed by IDL get 
PASS frame.noResize: setAttribute() to " foo " followed by getAttribute() 
PASS frame.noResize: setAttribute() to " foo " followed by IDL get 
PASS frame.noResize: setAttribute() to undefined followed by getAttribute() 
PASS frame.noResize: setAttribute() to undefined followed by IDL get 
PASS frame.noResize: setAttribute() to null followed by getAttribute() 
PASS frame.noResize: setAttribute() to null followed by IDL get 
PASS frame.noResize: setAttribute() to 7 followed by getAttribute() 
PASS frame.noResize: setAttribute() to 7 followed by IDL get 
PASS frame.noResize: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.noResize: setAttribute() to 1.5 followed by IDL get 
PASS frame.noResize: setAttribute() to true followed by getAttribute() 
PASS frame.noResize: setAttribute() to true followed by IDL get 
PASS frame.noResize: setAttribute() to false followed by getAttribute() 
PASS frame.noResize: setAttribute() to false followed by IDL get 
PASS frame.noResize: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.noResize: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.noResize: setAttribute() to NaN followed by getAttribute() 
PASS frame.noResize: setAttribute() to NaN followed by IDL get 
PASS frame.noResize: setAttribute() to Infinity followed by getAttribute() 
PASS frame.noResize: setAttribute() to Infinity followed by IDL get 
PASS frame.noResize: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.noResize: setAttribute() to -Infinity followed by IDL get 
PASS frame.noResize: setAttribute() to "\0" followed by getAttribute() 
PASS frame.noResize: setAttribute() to "\0" followed by IDL get 
PASS frame.noResize: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.noResize: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.noResize: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.noResize: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.noResize: setAttribute() to "noResize" followed by getAttribute() 
PASS frame.noResize: setAttribute() to "noResize" followed by IDL get 
PASS frame.noResize: IDL set to "" should not throw 
PASS frame.noResize: IDL set to "" followed by hasAttribute() 
PASS frame.noResize: IDL set to "" followed by IDL get 
PASS frame.noResize: IDL set to " foo " should not throw 
PASS frame.noResize: IDL set to " foo " followed by hasAttribute() 
PASS frame.noResize: IDL set to " foo " followed by IDL get 
PASS frame.noResize: IDL set to undefined should not throw 
PASS frame.noResize: IDL set to undefined followed by hasAttribute() 
PASS frame.noResize: IDL set to undefined followed by IDL get 
PASS frame.noResize: IDL set to null should not throw 
PASS frame.noResize: IDL set to null followed by hasAttribute() 
PASS frame.noResize: IDL set to null followed by IDL get 
PASS frame.noResize: IDL set to 7 should not throw 
PASS frame.noResize: IDL set to 7 followed by hasAttribute() 
PASS frame.noResize: IDL set to 7 followed by IDL get 
PASS frame.noResize: IDL set to 1.5 should not throw 
PASS frame.noResize: IDL set to 1.5 followed by hasAttribute() 
PASS frame.noResize: IDL set to 1.5 followed by IDL get 
PASS frame.noResize: IDL set to true should not throw 
PASS frame.noResize: IDL set to true followed by hasAttribute() 
PASS frame.noResize: IDL set to true followed by IDL get 
PASS frame.noResize: IDL set to false should not throw 
PASS frame.noResize: IDL set to false followed by hasAttribute() 
PASS frame.noResize: IDL set to false followed by IDL get 
PASS frame.noResize: IDL set to object "[object Object]" should not throw 
PASS frame.noResize: IDL set to object "[object Object]" followed by hasAttribute() 
PASS frame.noResize: IDL set to object "[object Object]" followed by IDL get 
PASS frame.noResize: IDL set to NaN should not throw 
PASS frame.noResize: IDL set to NaN followed by hasAttribute() 
PASS frame.noResize: IDL set to NaN followed by IDL get 
PASS frame.noResize: IDL set to Infinity should not throw 
PASS frame.noResize: IDL set to Infinity followed by hasAttribute() 
PASS frame.noResize: IDL set to Infinity followed by IDL get 
PASS frame.noResize: IDL set to -Infinity should not throw 
PASS frame.noResize: IDL set to -Infinity followed by hasAttribute() 
PASS frame.noResize: IDL set to -Infinity followed by IDL get 
PASS frame.noResize: IDL set to "\0" should not throw 
PASS frame.noResize: IDL set to "\0" followed by hasAttribute() 
PASS frame.noResize: IDL set to "\0" followed by IDL get 
PASS frame.noResize: IDL set to object "test-toString" should not throw 
PASS frame.noResize: IDL set to object "test-toString" followed by hasAttribute() 
PASS frame.noResize: IDL set to object "test-toString" followed by IDL get 
PASS frame.noResize: IDL set to object "test-valueOf" should not throw 
PASS frame.noResize: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS frame.noResize: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.marginHeight: typeof IDL attribute 
PASS frame.marginHeight: IDL get with DOM attribute unset 
PASS frame.marginHeight: setAttribute() to "" followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to "" followed by IDL get 
PASS frame.marginHeight: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.marginHeight: setAttribute() to undefined followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to undefined followed by IDL get 
PASS frame.marginHeight: setAttribute() to 7 followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to 7 followed by IDL get 
PASS frame.marginHeight: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to 1.5 followed by IDL get 
PASS frame.marginHeight: setAttribute() to true followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to true followed by IDL get 
PASS frame.marginHeight: setAttribute() to false followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to false followed by IDL get 
PASS frame.marginHeight: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.marginHeight: setAttribute() to NaN followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to NaN followed by IDL get 
PASS frame.marginHeight: setAttribute() to Infinity followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to Infinity followed by IDL get 
PASS frame.marginHeight: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to -Infinity followed by IDL get 
PASS frame.marginHeight: setAttribute() to "\0" followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to "\0" followed by IDL get 
PASS frame.marginHeight: setAttribute() to null followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to null followed by IDL get 
PASS frame.marginHeight: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.marginHeight: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.marginHeight: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.marginHeight: IDL set to "" should not throw 
PASS frame.marginHeight: IDL set to "" followed by getAttribute() 
PASS frame.marginHeight: IDL set to "" followed by IDL get 
PASS frame.marginHeight: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.marginHeight: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.marginHeight: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.marginHeight: IDL set to undefined should not throw 
PASS frame.marginHeight: IDL set to undefined followed by getAttribute() 
PASS frame.marginHeight: IDL set to undefined followed by IDL get 
PASS frame.marginHeight: IDL set to 7 should not throw 
PASS frame.marginHeight: IDL set to 7 followed by getAttribute() 
PASS frame.marginHeight: IDL set to 7 followed by IDL get 
PASS frame.marginHeight: IDL set to 1.5 should not throw 
PASS frame.marginHeight: IDL set to 1.5 followed by getAttribute() 
PASS frame.marginHeight: IDL set to 1.5 followed by IDL get 
PASS frame.marginHeight: IDL set to true should not throw 
PASS frame.marginHeight: IDL set to true followed by getAttribute() 
PASS frame.marginHeight: IDL set to true followed by IDL get 
PASS frame.marginHeight: IDL set to false should not throw 
PASS frame.marginHeight: IDL set to false followed by getAttribute() 
PASS frame.marginHeight: IDL set to false followed by IDL get 
PASS frame.marginHeight: IDL set to object "[object Object]" should not throw 
PASS frame.marginHeight: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.marginHeight: IDL set to object "[object Object]" followed by IDL get 
PASS frame.marginHeight: IDL set to NaN should not throw 
PASS frame.marginHeight: IDL set to NaN followed by getAttribute() 
PASS frame.marginHeight: IDL set to NaN followed by IDL get 
PASS frame.marginHeight: IDL set to Infinity should not throw 
PASS frame.marginHeight: IDL set to Infinity followed by getAttribute() 
PASS frame.marginHeight: IDL set to Infinity followed by IDL get 
PASS frame.marginHeight: IDL set to -Infinity should not throw 
PASS frame.marginHeight: IDL set to -Infinity followed by getAttribute() 
PASS frame.marginHeight: IDL set to -Infinity followed by IDL get 
PASS frame.marginHeight: IDL set to "\0" should not throw 
PASS frame.marginHeight: IDL set to "\0" followed by getAttribute() 
PASS frame.marginHeight: IDL set to "\0" followed by IDL get 
PASS frame.marginHeight: IDL set to null should not throw 
PASS frame.marginHeight: IDL set to null followed by getAttribute() 
PASS frame.marginHeight: IDL set to null followed by IDL get 
PASS frame.marginHeight: IDL set to object "test-toString" should not throw 
PASS frame.marginHeight: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.marginHeight: IDL set to object "test-toString" followed by IDL get 
PASS frame.marginHeight: IDL set to object "test-valueOf" should not throw 
PASS frame.marginHeight: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.marginHeight: IDL set to object "test-valueOf" followed by IDL get 
PASS frame.marginWidth: typeof IDL attribute 
PASS frame.marginWidth: IDL get with DOM attribute unset 
PASS frame.marginWidth: setAttribute() to "" followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to "" followed by IDL get 
PASS frame.marginWidth: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.marginWidth: setAttribute() to undefined followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to undefined followed by IDL get 
PASS frame.marginWidth: setAttribute() to 7 followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to 7 followed by IDL get 
PASS frame.marginWidth: setAttribute() to 1.5 followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to 1.5 followed by IDL get 
PASS frame.marginWidth: setAttribute() to true followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to true followed by IDL get 
PASS frame.marginWidth: setAttribute() to false followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to false followed by IDL get 
PASS frame.marginWidth: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to object "[object Object]" followed by IDL get 
PASS frame.marginWidth: setAttribute() to NaN followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to NaN followed by IDL get 
PASS frame.marginWidth: setAttribute() to Infinity followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to Infinity followed by IDL get 
PASS frame.marginWidth: setAttribute() to -Infinity followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to -Infinity followed by IDL get 
PASS frame.marginWidth: setAttribute() to "\0" followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to "\0" followed by IDL get 
PASS frame.marginWidth: setAttribute() to null followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to null followed by IDL get 
PASS frame.marginWidth: setAttribute() to object "test-toString" followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to object "test-toString" followed by IDL get 
PASS frame.marginWidth: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS frame.marginWidth: setAttribute() to object "test-valueOf" followed by IDL get 
PASS frame.marginWidth: IDL set to "" should not throw 
PASS frame.marginWidth: IDL set to "" followed by getAttribute() 
PASS frame.marginWidth: IDL set to "" followed by IDL get 
PASS frame.marginWidth: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS frame.marginWidth: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS frame.marginWidth: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS frame.marginWidth: IDL set to undefined should not throw 
PASS frame.marginWidth: IDL set to undefined followed by getAttribute() 
PASS frame.marginWidth: IDL set to undefined followed by IDL get 
PASS frame.marginWidth: IDL set to 7 should not throw 
PASS frame.marginWidth: IDL set to 7 followed by getAttribute() 
PASS frame.marginWidth: IDL set to 7 followed by IDL get 
PASS frame.marginWidth: IDL set to 1.5 should not throw 
PASS frame.marginWidth: IDL set to 1.5 followed by getAttribute() 
PASS frame.marginWidth: IDL set to 1.5 followed by IDL get 
PASS frame.marginWidth: IDL set to true should not throw 
PASS frame.marginWidth: IDL set to true followed by getAttribute() 
PASS frame.marginWidth: IDL set to true followed by IDL get 
PASS frame.marginWidth: IDL set to false should not throw 
PASS frame.marginWidth: IDL set to false followed by getAttribute() 
PASS frame.marginWidth: IDL set to false followed by IDL get 
PASS frame.marginWidth: IDL set to object "[object Object]" should not throw 
PASS frame.marginWidth: IDL set to object "[object Object]" followed by getAttribute() 
PASS frame.marginWidth: IDL set to object "[object Object]" followed by IDL get 
PASS frame.marginWidth: IDL set to NaN should not throw 
PASS frame.marginWidth: IDL set to NaN followed by getAttribute() 
PASS frame.marginWidth: IDL set to NaN followed by IDL get 
PASS frame.marginWidth: IDL set to Infinity should not throw 
PASS frame.marginWidth: IDL set to Infinity followed by getAttribute() 
PASS frame.marginWidth: IDL set to Infinity followed by IDL get 
PASS frame.marginWidth: IDL set to -Infinity should not throw 
PASS frame.marginWidth: IDL set to -Infinity followed by getAttribute() 
PASS frame.marginWidth: IDL set to -Infinity followed by IDL get 
PASS frame.marginWidth: IDL set to "\0" should not throw 
PASS frame.marginWidth: IDL set to "\0" followed by getAttribute() 
PASS frame.marginWidth: IDL set to "\0" followed by IDL get 
PASS frame.marginWidth: IDL set to null should not throw 
PASS frame.marginWidth: IDL set to null followed by getAttribute() 
PASS frame.marginWidth: IDL set to null followed by IDL get 
PASS frame.marginWidth: IDL set to object "test-toString" should not throw 
PASS frame.marginWidth: IDL set to object "test-toString" followed by getAttribute() 
PASS frame.marginWidth: IDL set to object "test-toString" followed by IDL get 
PASS frame.marginWidth: IDL set to object "test-valueOf" should not throw 
PASS frame.marginWidth: IDL set to object "test-valueOf" followed by getAttribute() 
PASS frame.marginWidth: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.title: typeof IDL attribute 
PASS dir.title: IDL get with DOM attribute unset 
PASS dir.title: setAttribute() to "" followed by getAttribute() 
PASS dir.title: setAttribute() to "" followed by IDL get 
PASS dir.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.title: setAttribute() to undefined followed by getAttribute() 
PASS dir.title: setAttribute() to undefined followed by IDL get 
PASS dir.title: setAttribute() to 7 followed by getAttribute() 
PASS dir.title: setAttribute() to 7 followed by IDL get 
PASS dir.title: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.title: setAttribute() to 1.5 followed by IDL get 
PASS dir.title: setAttribute() to true followed by getAttribute() 
PASS dir.title: setAttribute() to true followed by IDL get 
PASS dir.title: setAttribute() to false followed by getAttribute() 
PASS dir.title: setAttribute() to false followed by IDL get 
PASS dir.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.title: setAttribute() to NaN followed by getAttribute() 
PASS dir.title: setAttribute() to NaN followed by IDL get 
PASS dir.title: setAttribute() to Infinity followed by getAttribute() 
PASS dir.title: setAttribute() to Infinity followed by IDL get 
PASS dir.title: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.title: setAttribute() to -Infinity followed by IDL get 
PASS dir.title: setAttribute() to "\0" followed by getAttribute() 
PASS dir.title: setAttribute() to "\0" followed by IDL get 
PASS dir.title: setAttribute() to null followed by getAttribute() 
PASS dir.title: setAttribute() to null followed by IDL get 
PASS dir.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.title: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.title: IDL set to "" should not throw 
PASS dir.title: IDL set to "" followed by getAttribute() 
PASS dir.title: IDL set to "" followed by IDL get 
PASS dir.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dir.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.title: IDL set to undefined should not throw 
PASS dir.title: IDL set to undefined followed by getAttribute() 
PASS dir.title: IDL set to undefined followed by IDL get 
PASS dir.title: IDL set to 7 should not throw 
PASS dir.title: IDL set to 7 followed by getAttribute() 
PASS dir.title: IDL set to 7 followed by IDL get 
PASS dir.title: IDL set to 1.5 should not throw 
PASS dir.title: IDL set to 1.5 followed by getAttribute() 
PASS dir.title: IDL set to 1.5 followed by IDL get 
PASS dir.title: IDL set to true should not throw 
PASS dir.title: IDL set to true followed by getAttribute() 
PASS dir.title: IDL set to true followed by IDL get 
PASS dir.title: IDL set to false should not throw 
PASS dir.title: IDL set to false followed by getAttribute() 
PASS dir.title: IDL set to false followed by IDL get 
PASS dir.title: IDL set to object "[object Object]" should not throw 
PASS dir.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS dir.title: IDL set to object "[object Object]" followed by IDL get 
PASS dir.title: IDL set to NaN should not throw 
PASS dir.title: IDL set to NaN followed by getAttribute() 
PASS dir.title: IDL set to NaN followed by IDL get 
PASS dir.title: IDL set to Infinity should not throw 
PASS dir.title: IDL set to Infinity followed by getAttribute() 
PASS dir.title: IDL set to Infinity followed by IDL get 
PASS dir.title: IDL set to -Infinity should not throw 
PASS dir.title: IDL set to -Infinity followed by getAttribute() 
PASS dir.title: IDL set to -Infinity followed by IDL get 
PASS dir.title: IDL set to "\0" should not throw 
PASS dir.title: IDL set to "\0" followed by getAttribute() 
PASS dir.title: IDL set to "\0" followed by IDL get 
PASS dir.title: IDL set to null should not throw 
PASS dir.title: IDL set to null followed by getAttribute() 
PASS dir.title: IDL set to null followed by IDL get 
PASS dir.title: IDL set to object "test-toString" should not throw 
PASS dir.title: IDL set to object "test-toString" followed by getAttribute() 
PASS dir.title: IDL set to object "test-toString" followed by IDL get 
PASS dir.title: IDL set to object "test-valueOf" should not throw 
PASS dir.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dir.title: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.lang: typeof IDL attribute 
PASS dir.lang: IDL get with DOM attribute unset 
PASS dir.lang: setAttribute() to "" followed by getAttribute() 
PASS dir.lang: setAttribute() to "" followed by IDL get 
PASS dir.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.lang: setAttribute() to undefined followed by getAttribute() 
PASS dir.lang: setAttribute() to undefined followed by IDL get 
PASS dir.lang: setAttribute() to 7 followed by getAttribute() 
PASS dir.lang: setAttribute() to 7 followed by IDL get 
PASS dir.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.lang: setAttribute() to 1.5 followed by IDL get 
PASS dir.lang: setAttribute() to true followed by getAttribute() 
PASS dir.lang: setAttribute() to true followed by IDL get 
PASS dir.lang: setAttribute() to false followed by getAttribute() 
PASS dir.lang: setAttribute() to false followed by IDL get 
PASS dir.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.lang: setAttribute() to NaN followed by getAttribute() 
PASS dir.lang: setAttribute() to NaN followed by IDL get 
PASS dir.lang: setAttribute() to Infinity followed by getAttribute() 
PASS dir.lang: setAttribute() to Infinity followed by IDL get 
PASS dir.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.lang: setAttribute() to -Infinity followed by IDL get 
PASS dir.lang: setAttribute() to "\0" followed by getAttribute() 
PASS dir.lang: setAttribute() to "\0" followed by IDL get 
PASS dir.lang: setAttribute() to null followed by getAttribute() 
PASS dir.lang: setAttribute() to null followed by IDL get 
PASS dir.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.lang: IDL set to "" should not throw 
PASS dir.lang: IDL set to "" followed by getAttribute() 
PASS dir.lang: IDL set to "" followed by IDL get 
PASS dir.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dir.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.lang: IDL set to undefined should not throw 
PASS dir.lang: IDL set to undefined followed by getAttribute() 
PASS dir.lang: IDL set to undefined followed by IDL get 
PASS dir.lang: IDL set to 7 should not throw 
PASS dir.lang: IDL set to 7 followed by getAttribute() 
PASS dir.lang: IDL set to 7 followed by IDL get 
PASS dir.lang: IDL set to 1.5 should not throw 
PASS dir.lang: IDL set to 1.5 followed by getAttribute() 
PASS dir.lang: IDL set to 1.5 followed by IDL get 
PASS dir.lang: IDL set to true should not throw 
PASS dir.lang: IDL set to true followed by getAttribute() 
PASS dir.lang: IDL set to true followed by IDL get 
PASS dir.lang: IDL set to false should not throw 
PASS dir.lang: IDL set to false followed by getAttribute() 
PASS dir.lang: IDL set to false followed by IDL get 
PASS dir.lang: IDL set to object "[object Object]" should not throw 
PASS dir.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS dir.lang: IDL set to object "[object Object]" followed by IDL get 
PASS dir.lang: IDL set to NaN should not throw 
PASS dir.lang: IDL set to NaN followed by getAttribute() 
PASS dir.lang: IDL set to NaN followed by IDL get 
PASS dir.lang: IDL set to Infinity should not throw 
PASS dir.lang: IDL set to Infinity followed by getAttribute() 
PASS dir.lang: IDL set to Infinity followed by IDL get 
PASS dir.lang: IDL set to -Infinity should not throw 
PASS dir.lang: IDL set to -Infinity followed by getAttribute() 
PASS dir.lang: IDL set to -Infinity followed by IDL get 
PASS dir.lang: IDL set to "\0" should not throw 
PASS dir.lang: IDL set to "\0" followed by getAttribute() 
PASS dir.lang: IDL set to "\0" followed by IDL get 
PASS dir.lang: IDL set to null should not throw 
PASS dir.lang: IDL set to null followed by getAttribute() 
PASS dir.lang: IDL set to null followed by IDL get 
PASS dir.lang: IDL set to object "test-toString" should not throw 
PASS dir.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS dir.lang: IDL set to object "test-toString" followed by IDL get 
PASS dir.lang: IDL set to object "test-valueOf" should not throw 
PASS dir.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dir.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.dir: typeof IDL attribute 
PASS dir.dir: IDL get with DOM attribute unset 
PASS dir.dir: setAttribute() to "" followed by getAttribute() 
PASS dir.dir: setAttribute() to "" followed by IDL get 
PASS dir.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.dir: setAttribute() to undefined followed by getAttribute() 
PASS dir.dir: setAttribute() to undefined followed by IDL get 
PASS dir.dir: setAttribute() to 7 followed by getAttribute() 
PASS dir.dir: setAttribute() to 7 followed by IDL get 
PASS dir.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.dir: setAttribute() to 1.5 followed by IDL get 
PASS dir.dir: setAttribute() to true followed by getAttribute() 
PASS dir.dir: setAttribute() to true followed by IDL get 
PASS dir.dir: setAttribute() to false followed by getAttribute() 
PASS dir.dir: setAttribute() to false followed by IDL get 
PASS dir.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.dir: setAttribute() to NaN followed by getAttribute() 
PASS dir.dir: setAttribute() to NaN followed by IDL get 
PASS dir.dir: setAttribute() to Infinity followed by getAttribute() 
PASS dir.dir: setAttribute() to Infinity followed by IDL get 
PASS dir.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.dir: setAttribute() to -Infinity followed by IDL get 
PASS dir.dir: setAttribute() to "\0" followed by getAttribute() 
PASS dir.dir: setAttribute() to "\0" followed by IDL get 
PASS dir.dir: setAttribute() to null followed by getAttribute() 
PASS dir.dir: setAttribute() to null followed by IDL get 
PASS dir.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS dir.dir: setAttribute() to "ltr" followed by IDL get 
PASS dir.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS dir.dir: setAttribute() to "xltr" followed by IDL get 
PASS dir.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS dir.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS dir.dir: setAttribute() to "tr" followed by getAttribute() 
PASS dir.dir: setAttribute() to "tr" followed by IDL get 
PASS dir.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS dir.dir: setAttribute() to "LTR" followed by IDL get 
PASS dir.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS dir.dir: setAttribute() to "rtl" followed by IDL get 
PASS dir.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS dir.dir: setAttribute() to "xrtl" followed by IDL get 
PASS dir.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS dir.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS dir.dir: setAttribute() to "tl" followed by getAttribute() 
PASS dir.dir: setAttribute() to "tl" followed by IDL get 
PASS dir.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS dir.dir: setAttribute() to "RTL" followed by IDL get 
PASS dir.dir: setAttribute() to "auto" followed by getAttribute() 
PASS dir.dir: setAttribute() to "auto" followed by IDL get 
PASS dir.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS dir.dir: setAttribute() to "xauto" followed by IDL get 
PASS dir.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS dir.dir: setAttribute() to "auto\0" followed by IDL get 
PASS dir.dir: setAttribute() to "uto" followed by getAttribute() 
PASS dir.dir: setAttribute() to "uto" followed by IDL get 
PASS dir.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS dir.dir: setAttribute() to "AUTO" followed by IDL get 
PASS dir.dir: IDL set to "" should not throw 
PASS dir.dir: IDL set to "" followed by getAttribute() 
PASS dir.dir: IDL set to "" followed by IDL get 
PASS dir.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dir.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.dir: IDL set to undefined should not throw 
PASS dir.dir: IDL set to undefined followed by getAttribute() 
PASS dir.dir: IDL set to undefined followed by IDL get 
PASS dir.dir: IDL set to 7 should not throw 
PASS dir.dir: IDL set to 7 followed by getAttribute() 
PASS dir.dir: IDL set to 7 followed by IDL get 
PASS dir.dir: IDL set to 1.5 should not throw 
PASS dir.dir: IDL set to 1.5 followed by getAttribute() 
PASS dir.dir: IDL set to 1.5 followed by IDL get 
PASS dir.dir: IDL set to true should not throw 
PASS dir.dir: IDL set to true followed by getAttribute() 
PASS dir.dir: IDL set to true followed by IDL get 
PASS dir.dir: IDL set to false should not throw 
PASS dir.dir: IDL set to false followed by getAttribute() 
PASS dir.dir: IDL set to false followed by IDL get 
PASS dir.dir: IDL set to object "[object Object]" should not throw 
PASS dir.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS dir.dir: IDL set to object "[object Object]" followed by IDL get 
PASS dir.dir: IDL set to NaN should not throw 
PASS dir.dir: IDL set to NaN followed by getAttribute() 
PASS dir.dir: IDL set to NaN followed by IDL get 
PASS dir.dir: IDL set to Infinity should not throw 
PASS dir.dir: IDL set to Infinity followed by getAttribute() 
PASS dir.dir: IDL set to Infinity followed by IDL get 
PASS dir.dir: IDL set to -Infinity should not throw 
PASS dir.dir: IDL set to -Infinity followed by getAttribute() 
PASS dir.dir: IDL set to -Infinity followed by IDL get 
PASS dir.dir: IDL set to "\0" should not throw 
PASS dir.dir: IDL set to "\0" followed by getAttribute() 
PASS dir.dir: IDL set to "\0" followed by IDL get 
PASS dir.dir: IDL set to null should not throw 
PASS dir.dir: IDL set to null followed by IDL get 
PASS dir.dir: IDL set to object "test-toString" should not throw 
PASS dir.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS dir.dir: IDL set to object "test-toString" followed by IDL get 
PASS dir.dir: IDL set to object "test-valueOf" should not throw 
PASS dir.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dir.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.dir: IDL set to "ltr" should not throw 
PASS dir.dir: IDL set to "ltr" followed by getAttribute() 
PASS dir.dir: IDL set to "ltr" followed by IDL get 
PASS dir.dir: IDL set to "xltr" should not throw 
PASS dir.dir: IDL set to "xltr" followed by getAttribute() 
PASS dir.dir: IDL set to "xltr" followed by IDL get 
PASS dir.dir: IDL set to "ltr\0" should not throw 
PASS dir.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS dir.dir: IDL set to "ltr\0" followed by IDL get 
PASS dir.dir: IDL set to "tr" should not throw 
PASS dir.dir: IDL set to "tr" followed by getAttribute() 
PASS dir.dir: IDL set to "tr" followed by IDL get 
PASS dir.dir: IDL set to "LTR" should not throw 
PASS dir.dir: IDL set to "LTR" followed by getAttribute() 
PASS dir.dir: IDL set to "LTR" followed by IDL get 
PASS dir.dir: IDL set to "rtl" should not throw 
PASS dir.dir: IDL set to "rtl" followed by getAttribute() 
PASS dir.dir: IDL set to "rtl" followed by IDL get 
PASS dir.dir: IDL set to "xrtl" should not throw 
PASS dir.dir: IDL set to "xrtl" followed by getAttribute() 
PASS dir.dir: IDL set to "xrtl" followed by IDL get 
PASS dir.dir: IDL set to "rtl\0" should not throw 
PASS dir.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS dir.dir: IDL set to "rtl\0" followed by IDL get 
PASS dir.dir: IDL set to "tl" should not throw 
PASS dir.dir: IDL set to "tl" followed by getAttribute() 
PASS dir.dir: IDL set to "tl" followed by IDL get 
PASS dir.dir: IDL set to "RTL" should not throw 
PASS dir.dir: IDL set to "RTL" followed by getAttribute() 
PASS dir.dir: IDL set to "RTL" followed by IDL get 
PASS dir.dir: IDL set to "auto" should not throw 
PASS dir.dir: IDL set to "auto" followed by getAttribute() 
PASS dir.dir: IDL set to "auto" followed by IDL get 
PASS dir.dir: IDL set to "xauto" should not throw 
PASS dir.dir: IDL set to "xauto" followed by getAttribute() 
PASS dir.dir: IDL set to "xauto" followed by IDL get 
PASS dir.dir: IDL set to "auto\0" should not throw 
PASS dir.dir: IDL set to "auto\0" followed by getAttribute() 
PASS dir.dir: IDL set to "auto\0" followed by IDL get 
PASS dir.dir: IDL set to "uto" should not throw 
PASS dir.dir: IDL set to "uto" followed by getAttribute() 
PASS dir.dir: IDL set to "uto" followed by IDL get 
PASS dir.dir: IDL set to "AUTO" should not throw 
PASS dir.dir: IDL set to "AUTO" followed by getAttribute() 
PASS dir.dir: IDL set to "AUTO" followed by IDL get 
PASS dir.className (<dir class>): typeof IDL attribute 
PASS dir.className (<dir class>): IDL get with DOM attribute unset 
PASS dir.className (<dir class>): setAttribute() to "" followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to "" followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to undefined followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to undefined followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to 7 followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to 7 followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to 1.5 followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to 1.5 followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to true followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to true followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to false followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to false followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to NaN followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to NaN followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to Infinity followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to Infinity followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to -Infinity followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to -Infinity followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to "\0" followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to "\0" followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to null followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to null followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to object "test-toString" followed by IDL get 
PASS dir.className (<dir class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.className (<dir class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.className (<dir class>): IDL set to "" should not throw 
PASS dir.className (<dir class>): IDL set to "" followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to "" followed by IDL get 
PASS dir.className (<dir class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dir.className (<dir class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.className (<dir class>): IDL set to undefined should not throw 
PASS dir.className (<dir class>): IDL set to undefined followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to undefined followed by IDL get 
PASS dir.className (<dir class>): IDL set to 7 should not throw 
PASS dir.className (<dir class>): IDL set to 7 followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to 7 followed by IDL get 
PASS dir.className (<dir class>): IDL set to 1.5 should not throw 
PASS dir.className (<dir class>): IDL set to 1.5 followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to 1.5 followed by IDL get 
PASS dir.className (<dir class>): IDL set to true should not throw 
PASS dir.className (<dir class>): IDL set to true followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to true followed by IDL get 
PASS dir.className (<dir class>): IDL set to false should not throw 
PASS dir.className (<dir class>): IDL set to false followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to false followed by IDL get 
PASS dir.className (<dir class>): IDL set to object "[object Object]" should not throw 
PASS dir.className (<dir class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to object "[object Object]" followed by IDL get 
PASS dir.className (<dir class>): IDL set to NaN should not throw 
PASS dir.className (<dir class>): IDL set to NaN followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to NaN followed by IDL get 
PASS dir.className (<dir class>): IDL set to Infinity should not throw 
PASS dir.className (<dir class>): IDL set to Infinity followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to Infinity followed by IDL get 
PASS dir.className (<dir class>): IDL set to -Infinity should not throw 
PASS dir.className (<dir class>): IDL set to -Infinity followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to -Infinity followed by IDL get 
PASS dir.className (<dir class>): IDL set to "\0" should not throw 
PASS dir.className (<dir class>): IDL set to "\0" followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to "\0" followed by IDL get 
PASS dir.className (<dir class>): IDL set to null should not throw 
PASS dir.className (<dir class>): IDL set to null followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to null followed by IDL get 
PASS dir.className (<dir class>): IDL set to object "test-toString" should not throw 
PASS dir.className (<dir class>): IDL set to object "test-toString" followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to object "test-toString" followed by IDL get 
PASS dir.className (<dir class>): IDL set to object "test-valueOf" should not throw 
PASS dir.className (<dir class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS dir.className (<dir class>): IDL set to object "test-valueOf" followed by IDL get 
PASS dir.hidden: typeof IDL attribute 
PASS dir.hidden: IDL get with DOM attribute unset 
PASS dir.hidden: setAttribute() to "" followed by getAttribute() 
PASS dir.hidden: setAttribute() to "" followed by IDL get 
PASS dir.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS dir.hidden: setAttribute() to " foo " followed by IDL get 
PASS dir.hidden: setAttribute() to undefined followed by getAttribute() 
PASS dir.hidden: setAttribute() to undefined followed by IDL get 
PASS dir.hidden: setAttribute() to null followed by getAttribute() 
PASS dir.hidden: setAttribute() to null followed by IDL get 
PASS dir.hidden: setAttribute() to 7 followed by getAttribute() 
PASS dir.hidden: setAttribute() to 7 followed by IDL get 
PASS dir.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.hidden: setAttribute() to 1.5 followed by IDL get 
PASS dir.hidden: setAttribute() to true followed by getAttribute() 
PASS dir.hidden: setAttribute() to true followed by IDL get 
PASS dir.hidden: setAttribute() to false followed by getAttribute() 
PASS dir.hidden: setAttribute() to false followed by IDL get 
PASS dir.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.hidden: setAttribute() to NaN followed by getAttribute() 
PASS dir.hidden: setAttribute() to NaN followed by IDL get 
PASS dir.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS dir.hidden: setAttribute() to Infinity followed by IDL get 
PASS dir.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.hidden: setAttribute() to -Infinity followed by IDL get 
PASS dir.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS dir.hidden: setAttribute() to "\0" followed by IDL get 
PASS dir.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS dir.hidden: setAttribute() to "hidden" followed by IDL get 
PASS dir.hidden: IDL set to "" should not throw 
PASS dir.hidden: IDL set to "" followed by hasAttribute() 
PASS dir.hidden: IDL set to "" followed by IDL get 
PASS dir.hidden: IDL set to " foo " should not throw 
PASS dir.hidden: IDL set to " foo " followed by hasAttribute() 
PASS dir.hidden: IDL set to " foo " followed by IDL get 
PASS dir.hidden: IDL set to undefined should not throw 
PASS dir.hidden: IDL set to undefined followed by hasAttribute() 
PASS dir.hidden: IDL set to undefined followed by IDL get 
PASS dir.hidden: IDL set to null should not throw 
PASS dir.hidden: IDL set to null followed by hasAttribute() 
PASS dir.hidden: IDL set to null followed by IDL get 
PASS dir.hidden: IDL set to 7 should not throw 
PASS dir.hidden: IDL set to 7 followed by hasAttribute() 
PASS dir.hidden: IDL set to 7 followed by IDL get 
PASS dir.hidden: IDL set to 1.5 should not throw 
PASS dir.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS dir.hidden: IDL set to 1.5 followed by IDL get 
PASS dir.hidden: IDL set to true should not throw 
PASS dir.hidden: IDL set to true followed by hasAttribute() 
PASS dir.hidden: IDL set to true followed by IDL get 
PASS dir.hidden: IDL set to false should not throw 
PASS dir.hidden: IDL set to false followed by hasAttribute() 
PASS dir.hidden: IDL set to false followed by IDL get 
PASS dir.hidden: IDL set to object "[object Object]" should not throw 
PASS dir.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dir.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS dir.hidden: IDL set to NaN should not throw 
PASS dir.hidden: IDL set to NaN followed by hasAttribute() 
PASS dir.hidden: IDL set to NaN followed by IDL get 
PASS dir.hidden: IDL set to Infinity should not throw 
PASS dir.hidden: IDL set to Infinity followed by hasAttribute() 
PASS dir.hidden: IDL set to Infinity followed by IDL get 
PASS dir.hidden: IDL set to -Infinity should not throw 
PASS dir.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS dir.hidden: IDL set to -Infinity followed by IDL get 
PASS dir.hidden: IDL set to "\0" should not throw 
PASS dir.hidden: IDL set to "\0" followed by hasAttribute() 
PASS dir.hidden: IDL set to "\0" followed by IDL get 
PASS dir.hidden: IDL set to object "test-toString" should not throw 
PASS dir.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS dir.hidden: IDL set to object "test-toString" followed by IDL get 
PASS dir.hidden: IDL set to object "test-valueOf" should not throw 
PASS dir.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dir.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.accessKey: typeof IDL attribute 
PASS dir.accessKey: IDL get with DOM attribute unset 
PASS dir.accessKey: setAttribute() to "" followed by getAttribute() 
PASS dir.accessKey: setAttribute() to "" followed by IDL get 
PASS dir.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS dir.accessKey: setAttribute() to undefined followed by IDL get 
PASS dir.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS dir.accessKey: setAttribute() to 7 followed by IDL get 
PASS dir.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS dir.accessKey: setAttribute() to true followed by getAttribute() 
PASS dir.accessKey: setAttribute() to true followed by IDL get 
PASS dir.accessKey: setAttribute() to false followed by getAttribute() 
PASS dir.accessKey: setAttribute() to false followed by IDL get 
PASS dir.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS dir.accessKey: setAttribute() to NaN followed by IDL get 
PASS dir.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS dir.accessKey: setAttribute() to Infinity followed by IDL get 
PASS dir.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS dir.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS dir.accessKey: setAttribute() to "\0" followed by IDL get 
PASS dir.accessKey: setAttribute() to null followed by getAttribute() 
PASS dir.accessKey: setAttribute() to null followed by IDL get 
PASS dir.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.accessKey: IDL set to "" should not throw 
PASS dir.accessKey: IDL set to "" followed by getAttribute() 
PASS dir.accessKey: IDL set to "" followed by IDL get 
PASS dir.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS dir.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS dir.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS dir.accessKey: IDL set to undefined should not throw 
PASS dir.accessKey: IDL set to undefined followed by getAttribute() 
PASS dir.accessKey: IDL set to undefined followed by IDL get 
PASS dir.accessKey: IDL set to 7 should not throw 
PASS dir.accessKey: IDL set to 7 followed by getAttribute() 
PASS dir.accessKey: IDL set to 7 followed by IDL get 
PASS dir.accessKey: IDL set to 1.5 should not throw 
PASS dir.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS dir.accessKey: IDL set to 1.5 followed by IDL get 
PASS dir.accessKey: IDL set to true should not throw 
PASS dir.accessKey: IDL set to true followed by getAttribute() 
PASS dir.accessKey: IDL set to true followed by IDL get 
PASS dir.accessKey: IDL set to false should not throw 
PASS dir.accessKey: IDL set to false followed by getAttribute() 
PASS dir.accessKey: IDL set to false followed by IDL get 
PASS dir.accessKey: IDL set to object "[object Object]" should not throw 
PASS dir.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS dir.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS dir.accessKey: IDL set to NaN should not throw 
PASS dir.accessKey: IDL set to NaN followed by getAttribute() 
PASS dir.accessKey: IDL set to NaN followed by IDL get 
PASS dir.accessKey: IDL set to Infinity should not throw 
PASS dir.accessKey: IDL set to Infinity followed by getAttribute() 
PASS dir.accessKey: IDL set to Infinity followed by IDL get 
PASS dir.accessKey: IDL set to -Infinity should not throw 
PASS dir.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS dir.accessKey: IDL set to -Infinity followed by IDL get 
PASS dir.accessKey: IDL set to "\0" should not throw 
PASS dir.accessKey: IDL set to "\0" followed by getAttribute() 
PASS dir.accessKey: IDL set to "\0" followed by IDL get 
PASS dir.accessKey: IDL set to null should not throw 
PASS dir.accessKey: IDL set to null followed by getAttribute() 
PASS dir.accessKey: IDL set to null followed by IDL get 
PASS dir.accessKey: IDL set to object "test-toString" should not throw 
PASS dir.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS dir.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS dir.accessKey: IDL set to object "test-valueOf" should not throw 
PASS dir.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS dir.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS dir.tabIndex: typeof IDL attribute 
PASS dir.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to -36 followed by IDL get 
PASS dir.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to -1 followed by IDL get 
PASS dir.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to 0 followed by IDL get 
PASS dir.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to 1 followed by IDL get 
PASS dir.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL dir.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS dir.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL dir.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS dir.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "0" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "1" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS dir.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS dir.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS dir.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS dir.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS dir.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS dir.tabIndex: IDL set to -36 should not throw 
PASS dir.tabIndex: IDL set to -36 followed by getAttribute() 
PASS dir.tabIndex: IDL set to -36 followed by IDL get 
PASS dir.tabIndex: IDL set to -1 should not throw 
PASS dir.tabIndex: IDL set to -1 followed by getAttribute() 
PASS dir.tabIndex: IDL set to -1 followed by IDL get 
PASS dir.tabIndex: IDL set to 0 should not throw 
PASS dir.tabIndex: IDL set to 0 followed by getAttribute() 
PASS dir.tabIndex: IDL set to 0 followed by IDL get 
PASS dir.tabIndex: IDL set to 1 should not throw 
PASS dir.tabIndex: IDL set to 1 followed by getAttribute() 
PASS dir.tabIndex: IDL set to 1 followed by IDL get 
PASS dir.tabIndex: IDL set to 2147483647 should not throw 
PASS dir.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL dir.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS dir.tabIndex: IDL set to -2147483648 should not throw 
PASS dir.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL dir.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS dir.compact: typeof IDL attribute 
PASS dir.compact: IDL get with DOM attribute unset 
PASS dir.compact: setAttribute() to "" followed by getAttribute() 
PASS dir.compact: setAttribute() to "" followed by IDL get 
PASS dir.compact: setAttribute() to " foo " followed by getAttribute() 
PASS dir.compact: setAttribute() to " foo " followed by IDL get 
PASS dir.compact: setAttribute() to undefined followed by getAttribute() 
PASS dir.compact: setAttribute() to undefined followed by IDL get 
PASS dir.compact: setAttribute() to null followed by getAttribute() 
PASS dir.compact: setAttribute() to null followed by IDL get 
PASS dir.compact: setAttribute() to 7 followed by getAttribute() 
PASS dir.compact: setAttribute() to 7 followed by IDL get 
PASS dir.compact: setAttribute() to 1.5 followed by getAttribute() 
PASS dir.compact: setAttribute() to 1.5 followed by IDL get 
PASS dir.compact: setAttribute() to true followed by getAttribute() 
PASS dir.compact: setAttribute() to true followed by IDL get 
PASS dir.compact: setAttribute() to false followed by getAttribute() 
PASS dir.compact: setAttribute() to false followed by IDL get 
PASS dir.compact: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS dir.compact: setAttribute() to object "[object Object]" followed by IDL get 
PASS dir.compact: setAttribute() to NaN followed by getAttribute() 
PASS dir.compact: setAttribute() to NaN followed by IDL get 
PASS dir.compact: setAttribute() to Infinity followed by getAttribute() 
PASS dir.compact: setAttribute() to Infinity followed by IDL get 
PASS dir.compact: setAttribute() to -Infinity followed by getAttribute() 
PASS dir.compact: setAttribute() to -Infinity followed by IDL get 
PASS dir.compact: setAttribute() to "\0" followed by getAttribute() 
PASS dir.compact: setAttribute() to "\0" followed by IDL get 
PASS dir.compact: setAttribute() to object "test-toString" followed by getAttribute() 
PASS dir.compact: setAttribute() to object "test-toString" followed by IDL get 
PASS dir.compact: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS dir.compact: setAttribute() to object "test-valueOf" followed by IDL get 
PASS dir.compact: setAttribute() to "compact" followed by getAttribute() 
PASS dir.compact: setAttribute() to "compact" followed by IDL get 
PASS dir.compact: IDL set to "" should not throw 
PASS dir.compact: IDL set to "" followed by hasAttribute() 
PASS dir.compact: IDL set to "" followed by IDL get 
PASS dir.compact: IDL set to " foo " should not throw 
PASS dir.compact: IDL set to " foo " followed by hasAttribute() 
PASS dir.compact: IDL set to " foo " followed by IDL get 
PASS dir.compact: IDL set to undefined should not throw 
PASS dir.compact: IDL set to undefined followed by hasAttribute() 
PASS dir.compact: IDL set to undefined followed by IDL get 
PASS dir.compact: IDL set to null should not throw 
PASS dir.compact: IDL set to null followed by hasAttribute() 
PASS dir.compact: IDL set to null followed by IDL get 
PASS dir.compact: IDL set to 7 should not throw 
PASS dir.compact: IDL set to 7 followed by hasAttribute() 
PASS dir.compact: IDL set to 7 followed by IDL get 
PASS dir.compact: IDL set to 1.5 should not throw 
PASS dir.compact: IDL set to 1.5 followed by hasAttribute() 
PASS dir.compact: IDL set to 1.5 followed by IDL get 
PASS dir.compact: IDL set to true should not throw 
PASS dir.compact: IDL set to true followed by hasAttribute() 
PASS dir.compact: IDL set to true followed by IDL get 
PASS dir.compact: IDL set to false should not throw 
PASS dir.compact: IDL set to false followed by hasAttribute() 
PASS dir.compact: IDL set to false followed by IDL get 
PASS dir.compact: IDL set to object "[object Object]" should not throw 
PASS dir.compact: IDL set to object "[object Object]" followed by hasAttribute() 
PASS dir.compact: IDL set to object "[object Object]" followed by IDL get 
PASS dir.compact: IDL set to NaN should not throw 
PASS dir.compact: IDL set to NaN followed by hasAttribute() 
PASS dir.compact: IDL set to NaN followed by IDL get 
PASS dir.compact: IDL set to Infinity should not throw 
PASS dir.compact: IDL set to Infinity followed by hasAttribute() 
PASS dir.compact: IDL set to Infinity followed by IDL get 
PASS dir.compact: IDL set to -Infinity should not throw 
PASS dir.compact: IDL set to -Infinity followed by hasAttribute() 
PASS dir.compact: IDL set to -Infinity followed by IDL get 
PASS dir.compact: IDL set to "\0" should not throw 
PASS dir.compact: IDL set to "\0" followed by hasAttribute() 
PASS dir.compact: IDL set to "\0" followed by IDL get 
PASS dir.compact: IDL set to object "test-toString" should not throw 
PASS dir.compact: IDL set to object "test-toString" followed by hasAttribute() 
PASS dir.compact: IDL set to object "test-toString" followed by IDL get 
PASS dir.compact: IDL set to object "test-valueOf" should not throw 
PASS dir.compact: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS dir.compact: IDL set to object "test-valueOf" followed by IDL get 
PASS font.title: typeof IDL attribute 
PASS font.title: IDL get with DOM attribute unset 
PASS font.title: setAttribute() to "" followed by getAttribute() 
PASS font.title: setAttribute() to "" followed by IDL get 
PASS font.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.title: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.title: setAttribute() to undefined followed by getAttribute() 
PASS font.title: setAttribute() to undefined followed by IDL get 
PASS font.title: setAttribute() to 7 followed by getAttribute() 
PASS font.title: setAttribute() to 7 followed by IDL get 
PASS font.title: setAttribute() to 1.5 followed by getAttribute() 
PASS font.title: setAttribute() to 1.5 followed by IDL get 
PASS font.title: setAttribute() to true followed by getAttribute() 
PASS font.title: setAttribute() to true followed by IDL get 
PASS font.title: setAttribute() to false followed by getAttribute() 
PASS font.title: setAttribute() to false followed by IDL get 
PASS font.title: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.title: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.title: setAttribute() to NaN followed by getAttribute() 
PASS font.title: setAttribute() to NaN followed by IDL get 
PASS font.title: setAttribute() to Infinity followed by getAttribute() 
PASS font.title: setAttribute() to Infinity followed by IDL get 
PASS font.title: setAttribute() to -Infinity followed by getAttribute() 
PASS font.title: setAttribute() to -Infinity followed by IDL get 
PASS font.title: setAttribute() to "\0" followed by getAttribute() 
PASS font.title: setAttribute() to "\0" followed by IDL get 
PASS font.title: setAttribute() to null followed by getAttribute() 
PASS font.title: setAttribute() to null followed by IDL get 
PASS font.title: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.title: setAttribute() to object "test-toString" followed by IDL get 
PASS font.title: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.title: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.title: IDL set to "" should not throw 
PASS font.title: IDL set to "" followed by getAttribute() 
PASS font.title: IDL set to "" followed by IDL get 
PASS font.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.title: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.title: IDL set to undefined should not throw 
PASS font.title: IDL set to undefined followed by getAttribute() 
PASS font.title: IDL set to undefined followed by IDL get 
PASS font.title: IDL set to 7 should not throw 
PASS font.title: IDL set to 7 followed by getAttribute() 
PASS font.title: IDL set to 7 followed by IDL get 
PASS font.title: IDL set to 1.5 should not throw 
PASS font.title: IDL set to 1.5 followed by getAttribute() 
PASS font.title: IDL set to 1.5 followed by IDL get 
PASS font.title: IDL set to true should not throw 
PASS font.title: IDL set to true followed by getAttribute() 
PASS font.title: IDL set to true followed by IDL get 
PASS font.title: IDL set to false should not throw 
PASS font.title: IDL set to false followed by getAttribute() 
PASS font.title: IDL set to false followed by IDL get 
PASS font.title: IDL set to object "[object Object]" should not throw 
PASS font.title: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.title: IDL set to object "[object Object]" followed by IDL get 
PASS font.title: IDL set to NaN should not throw 
PASS font.title: IDL set to NaN followed by getAttribute() 
PASS font.title: IDL set to NaN followed by IDL get 
PASS font.title: IDL set to Infinity should not throw 
PASS font.title: IDL set to Infinity followed by getAttribute() 
PASS font.title: IDL set to Infinity followed by IDL get 
PASS font.title: IDL set to -Infinity should not throw 
PASS font.title: IDL set to -Infinity followed by getAttribute() 
PASS font.title: IDL set to -Infinity followed by IDL get 
PASS font.title: IDL set to "\0" should not throw 
PASS font.title: IDL set to "\0" followed by getAttribute() 
PASS font.title: IDL set to "\0" followed by IDL get 
PASS font.title: IDL set to null should not throw 
PASS font.title: IDL set to null followed by getAttribute() 
PASS font.title: IDL set to null followed by IDL get 
PASS font.title: IDL set to object "test-toString" should not throw 
PASS font.title: IDL set to object "test-toString" followed by getAttribute() 
PASS font.title: IDL set to object "test-toString" followed by IDL get 
PASS font.title: IDL set to object "test-valueOf" should not throw 
PASS font.title: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.title: IDL set to object "test-valueOf" followed by IDL get 
PASS font.lang: typeof IDL attribute 
PASS font.lang: IDL get with DOM attribute unset 
PASS font.lang: setAttribute() to "" followed by getAttribute() 
PASS font.lang: setAttribute() to "" followed by IDL get 
PASS font.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.lang: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.lang: setAttribute() to undefined followed by getAttribute() 
PASS font.lang: setAttribute() to undefined followed by IDL get 
PASS font.lang: setAttribute() to 7 followed by getAttribute() 
PASS font.lang: setAttribute() to 7 followed by IDL get 
PASS font.lang: setAttribute() to 1.5 followed by getAttribute() 
PASS font.lang: setAttribute() to 1.5 followed by IDL get 
PASS font.lang: setAttribute() to true followed by getAttribute() 
PASS font.lang: setAttribute() to true followed by IDL get 
PASS font.lang: setAttribute() to false followed by getAttribute() 
PASS font.lang: setAttribute() to false followed by IDL get 
PASS font.lang: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.lang: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.lang: setAttribute() to NaN followed by getAttribute() 
PASS font.lang: setAttribute() to NaN followed by IDL get 
PASS font.lang: setAttribute() to Infinity followed by getAttribute() 
PASS font.lang: setAttribute() to Infinity followed by IDL get 
PASS font.lang: setAttribute() to -Infinity followed by getAttribute() 
PASS font.lang: setAttribute() to -Infinity followed by IDL get 
PASS font.lang: setAttribute() to "\0" followed by getAttribute() 
PASS font.lang: setAttribute() to "\0" followed by IDL get 
PASS font.lang: setAttribute() to null followed by getAttribute() 
PASS font.lang: setAttribute() to null followed by IDL get 
PASS font.lang: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.lang: setAttribute() to object "test-toString" followed by IDL get 
PASS font.lang: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.lang: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.lang: IDL set to "" should not throw 
PASS font.lang: IDL set to "" followed by getAttribute() 
PASS font.lang: IDL set to "" followed by IDL get 
PASS font.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.lang: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.lang: IDL set to undefined should not throw 
PASS font.lang: IDL set to undefined followed by getAttribute() 
PASS font.lang: IDL set to undefined followed by IDL get 
PASS font.lang: IDL set to 7 should not throw 
PASS font.lang: IDL set to 7 followed by getAttribute() 
PASS font.lang: IDL set to 7 followed by IDL get 
PASS font.lang: IDL set to 1.5 should not throw 
PASS font.lang: IDL set to 1.5 followed by getAttribute() 
PASS font.lang: IDL set to 1.5 followed by IDL get 
PASS font.lang: IDL set to true should not throw 
PASS font.lang: IDL set to true followed by getAttribute() 
PASS font.lang: IDL set to true followed by IDL get 
PASS font.lang: IDL set to false should not throw 
PASS font.lang: IDL set to false followed by getAttribute() 
PASS font.lang: IDL set to false followed by IDL get 
PASS font.lang: IDL set to object "[object Object]" should not throw 
PASS font.lang: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.lang: IDL set to object "[object Object]" followed by IDL get 
PASS font.lang: IDL set to NaN should not throw 
PASS font.lang: IDL set to NaN followed by getAttribute() 
PASS font.lang: IDL set to NaN followed by IDL get 
PASS font.lang: IDL set to Infinity should not throw 
PASS font.lang: IDL set to Infinity followed by getAttribute() 
PASS font.lang: IDL set to Infinity followed by IDL get 
PASS font.lang: IDL set to -Infinity should not throw 
PASS font.lang: IDL set to -Infinity followed by getAttribute() 
PASS font.lang: IDL set to -Infinity followed by IDL get 
PASS font.lang: IDL set to "\0" should not throw 
PASS font.lang: IDL set to "\0" followed by getAttribute() 
PASS font.lang: IDL set to "\0" followed by IDL get 
PASS font.lang: IDL set to null should not throw 
PASS font.lang: IDL set to null followed by getAttribute() 
PASS font.lang: IDL set to null followed by IDL get 
PASS font.lang: IDL set to object "test-toString" should not throw 
PASS font.lang: IDL set to object "test-toString" followed by getAttribute() 
PASS font.lang: IDL set to object "test-toString" followed by IDL get 
PASS font.lang: IDL set to object "test-valueOf" should not throw 
PASS font.lang: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.lang: IDL set to object "test-valueOf" followed by IDL get 
PASS font.dir: typeof IDL attribute 
PASS font.dir: IDL get with DOM attribute unset 
PASS font.dir: setAttribute() to "" followed by getAttribute() 
PASS font.dir: setAttribute() to "" followed by IDL get 
PASS font.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.dir: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.dir: setAttribute() to undefined followed by getAttribute() 
PASS font.dir: setAttribute() to undefined followed by IDL get 
PASS font.dir: setAttribute() to 7 followed by getAttribute() 
PASS font.dir: setAttribute() to 7 followed by IDL get 
PASS font.dir: setAttribute() to 1.5 followed by getAttribute() 
PASS font.dir: setAttribute() to 1.5 followed by IDL get 
PASS font.dir: setAttribute() to true followed by getAttribute() 
PASS font.dir: setAttribute() to true followed by IDL get 
PASS font.dir: setAttribute() to false followed by getAttribute() 
PASS font.dir: setAttribute() to false followed by IDL get 
PASS font.dir: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.dir: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.dir: setAttribute() to NaN followed by getAttribute() 
PASS font.dir: setAttribute() to NaN followed by IDL get 
PASS font.dir: setAttribute() to Infinity followed by getAttribute() 
PASS font.dir: setAttribute() to Infinity followed by IDL get 
PASS font.dir: setAttribute() to -Infinity followed by getAttribute() 
PASS font.dir: setAttribute() to -Infinity followed by IDL get 
PASS font.dir: setAttribute() to "\0" followed by getAttribute() 
PASS font.dir: setAttribute() to "\0" followed by IDL get 
PASS font.dir: setAttribute() to null followed by getAttribute() 
PASS font.dir: setAttribute() to null followed by IDL get 
PASS font.dir: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.dir: setAttribute() to object "test-toString" followed by IDL get 
PASS font.dir: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.dir: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.dir: setAttribute() to "ltr" followed by getAttribute() 
PASS font.dir: setAttribute() to "ltr" followed by IDL get 
PASS font.dir: setAttribute() to "xltr" followed by getAttribute() 
PASS font.dir: setAttribute() to "xltr" followed by IDL get 
PASS font.dir: setAttribute() to "ltr\0" followed by getAttribute() 
PASS font.dir: setAttribute() to "ltr\0" followed by IDL get 
PASS font.dir: setAttribute() to "tr" followed by getAttribute() 
PASS font.dir: setAttribute() to "tr" followed by IDL get 
PASS font.dir: setAttribute() to "LTR" followed by getAttribute() 
PASS font.dir: setAttribute() to "LTR" followed by IDL get 
PASS font.dir: setAttribute() to "rtl" followed by getAttribute() 
PASS font.dir: setAttribute() to "rtl" followed by IDL get 
PASS font.dir: setAttribute() to "xrtl" followed by getAttribute() 
PASS font.dir: setAttribute() to "xrtl" followed by IDL get 
PASS font.dir: setAttribute() to "rtl\0" followed by getAttribute() 
PASS font.dir: setAttribute() to "rtl\0" followed by IDL get 
PASS font.dir: setAttribute() to "tl" followed by getAttribute() 
PASS font.dir: setAttribute() to "tl" followed by IDL get 
PASS font.dir: setAttribute() to "RTL" followed by getAttribute() 
PASS font.dir: setAttribute() to "RTL" followed by IDL get 
PASS font.dir: setAttribute() to "auto" followed by getAttribute() 
PASS font.dir: setAttribute() to "auto" followed by IDL get 
PASS font.dir: setAttribute() to "xauto" followed by getAttribute() 
PASS font.dir: setAttribute() to "xauto" followed by IDL get 
PASS font.dir: setAttribute() to "auto\0" followed by getAttribute() 
PASS font.dir: setAttribute() to "auto\0" followed by IDL get 
PASS font.dir: setAttribute() to "uto" followed by getAttribute() 
PASS font.dir: setAttribute() to "uto" followed by IDL get 
PASS font.dir: setAttribute() to "AUTO" followed by getAttribute() 
PASS font.dir: setAttribute() to "AUTO" followed by IDL get 
PASS font.dir: IDL set to "" should not throw 
PASS font.dir: IDL set to "" followed by getAttribute() 
PASS font.dir: IDL set to "" followed by IDL get 
PASS font.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.dir: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.dir: IDL set to undefined should not throw 
PASS font.dir: IDL set to undefined followed by getAttribute() 
PASS font.dir: IDL set to undefined followed by IDL get 
PASS font.dir: IDL set to 7 should not throw 
PASS font.dir: IDL set to 7 followed by getAttribute() 
PASS font.dir: IDL set to 7 followed by IDL get 
PASS font.dir: IDL set to 1.5 should not throw 
PASS font.dir: IDL set to 1.5 followed by getAttribute() 
PASS font.dir: IDL set to 1.5 followed by IDL get 
PASS font.dir: IDL set to true should not throw 
PASS font.dir: IDL set to true followed by getAttribute() 
PASS font.dir: IDL set to true followed by IDL get 
PASS font.dir: IDL set to false should not throw 
PASS font.dir: IDL set to false followed by getAttribute() 
PASS font.dir: IDL set to false followed by IDL get 
PASS font.dir: IDL set to object "[object Object]" should not throw 
PASS font.dir: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.dir: IDL set to object "[object Object]" followed by IDL get 
PASS font.dir: IDL set to NaN should not throw 
PASS font.dir: IDL set to NaN followed by getAttribute() 
PASS font.dir: IDL set to NaN followed by IDL get 
PASS font.dir: IDL set to Infinity should not throw 
PASS font.dir: IDL set to Infinity followed by getAttribute() 
PASS font.dir: IDL set to Infinity followed by IDL get 
PASS font.dir: IDL set to -Infinity should not throw 
PASS font.dir: IDL set to -Infinity followed by getAttribute() 
PASS font.dir: IDL set to -Infinity followed by IDL get 
PASS font.dir: IDL set to "\0" should not throw 
PASS font.dir: IDL set to "\0" followed by getAttribute() 
PASS font.dir: IDL set to "\0" followed by IDL get 
PASS font.dir: IDL set to null should not throw 
PASS font.dir: IDL set to null followed by IDL get 
PASS font.dir: IDL set to object "test-toString" should not throw 
PASS font.dir: IDL set to object "test-toString" followed by getAttribute() 
PASS font.dir: IDL set to object "test-toString" followed by IDL get 
PASS font.dir: IDL set to object "test-valueOf" should not throw 
PASS font.dir: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.dir: IDL set to object "test-valueOf" followed by IDL get 
PASS font.dir: IDL set to "ltr" should not throw 
PASS font.dir: IDL set to "ltr" followed by getAttribute() 
PASS font.dir: IDL set to "ltr" followed by IDL get 
PASS font.dir: IDL set to "xltr" should not throw 
PASS font.dir: IDL set to "xltr" followed by getAttribute() 
PASS font.dir: IDL set to "xltr" followed by IDL get 
PASS font.dir: IDL set to "ltr\0" should not throw 
PASS font.dir: IDL set to "ltr\0" followed by getAttribute() 
PASS font.dir: IDL set to "ltr\0" followed by IDL get 
PASS font.dir: IDL set to "tr" should not throw 
PASS font.dir: IDL set to "tr" followed by getAttribute() 
PASS font.dir: IDL set to "tr" followed by IDL get 
PASS font.dir: IDL set to "LTR" should not throw 
PASS font.dir: IDL set to "LTR" followed by getAttribute() 
PASS font.dir: IDL set to "LTR" followed by IDL get 
PASS font.dir: IDL set to "rtl" should not throw 
PASS font.dir: IDL set to "rtl" followed by getAttribute() 
PASS font.dir: IDL set to "rtl" followed by IDL get 
PASS font.dir: IDL set to "xrtl" should not throw 
PASS font.dir: IDL set to "xrtl" followed by getAttribute() 
PASS font.dir: IDL set to "xrtl" followed by IDL get 
PASS font.dir: IDL set to "rtl\0" should not throw 
PASS font.dir: IDL set to "rtl\0" followed by getAttribute() 
PASS font.dir: IDL set to "rtl\0" followed by IDL get 
PASS font.dir: IDL set to "tl" should not throw 
PASS font.dir: IDL set to "tl" followed by getAttribute() 
PASS font.dir: IDL set to "tl" followed by IDL get 
PASS font.dir: IDL set to "RTL" should not throw 
PASS font.dir: IDL set to "RTL" followed by getAttribute() 
PASS font.dir: IDL set to "RTL" followed by IDL get 
PASS font.dir: IDL set to "auto" should not throw 
PASS font.dir: IDL set to "auto" followed by getAttribute() 
PASS font.dir: IDL set to "auto" followed by IDL get 
PASS font.dir: IDL set to "xauto" should not throw 
PASS font.dir: IDL set to "xauto" followed by getAttribute() 
PASS font.dir: IDL set to "xauto" followed by IDL get 
PASS font.dir: IDL set to "auto\0" should not throw 
PASS font.dir: IDL set to "auto\0" followed by getAttribute() 
PASS font.dir: IDL set to "auto\0" followed by IDL get 
PASS font.dir: IDL set to "uto" should not throw 
PASS font.dir: IDL set to "uto" followed by getAttribute() 
PASS font.dir: IDL set to "uto" followed by IDL get 
PASS font.dir: IDL set to "AUTO" should not throw 
PASS font.dir: IDL set to "AUTO" followed by getAttribute() 
PASS font.dir: IDL set to "AUTO" followed by IDL get 
PASS font.className (<font class>): typeof IDL attribute 
PASS font.className (<font class>): IDL get with DOM attribute unset 
PASS font.className (<font class>): setAttribute() to "" followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to "" followed by IDL get 
PASS font.className (<font class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.className (<font class>): setAttribute() to undefined followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to undefined followed by IDL get 
PASS font.className (<font class>): setAttribute() to 7 followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to 7 followed by IDL get 
PASS font.className (<font class>): setAttribute() to 1.5 followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to 1.5 followed by IDL get 
PASS font.className (<font class>): setAttribute() to true followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to true followed by IDL get 
PASS font.className (<font class>): setAttribute() to false followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to false followed by IDL get 
PASS font.className (<font class>): setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to object "[object Object]" followed by IDL get 
PASS font.className (<font class>): setAttribute() to NaN followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to NaN followed by IDL get 
PASS font.className (<font class>): setAttribute() to Infinity followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to Infinity followed by IDL get 
PASS font.className (<font class>): setAttribute() to -Infinity followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to -Infinity followed by IDL get 
PASS font.className (<font class>): setAttribute() to "\0" followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to "\0" followed by IDL get 
PASS font.className (<font class>): setAttribute() to null followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to null followed by IDL get 
PASS font.className (<font class>): setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to object "test-toString" followed by IDL get 
PASS font.className (<font class>): setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.className (<font class>): setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.className (<font class>): IDL set to "" should not throw 
PASS font.className (<font class>): IDL set to "" followed by getAttribute() 
PASS font.className (<font class>): IDL set to "" followed by IDL get 
PASS font.className (<font class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.className (<font class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.className (<font class>): IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.className (<font class>): IDL set to undefined should not throw 
PASS font.className (<font class>): IDL set to undefined followed by getAttribute() 
PASS font.className (<font class>): IDL set to undefined followed by IDL get 
PASS font.className (<font class>): IDL set to 7 should not throw 
PASS font.className (<font class>): IDL set to 7 followed by getAttribute() 
PASS font.className (<font class>): IDL set to 7 followed by IDL get 
PASS font.className (<font class>): IDL set to 1.5 should not throw 
PASS font.className (<font class>): IDL set to 1.5 followed by getAttribute() 
PASS font.className (<font class>): IDL set to 1.5 followed by IDL get 
PASS font.className (<font class>): IDL set to true should not throw 
PASS font.className (<font class>): IDL set to true followed by getAttribute() 
PASS font.className (<font class>): IDL set to true followed by IDL get 
PASS font.className (<font class>): IDL set to false should not throw 
PASS font.className (<font class>): IDL set to false followed by getAttribute() 
PASS font.className (<font class>): IDL set to false followed by IDL get 
PASS font.className (<font class>): IDL set to object "[object Object]" should not throw 
PASS font.className (<font class>): IDL set to object "[object Object]" followed by getAttribute() 
PASS font.className (<font class>): IDL set to object "[object Object]" followed by IDL get 
PASS font.className (<font class>): IDL set to NaN should not throw 
PASS font.className (<font class>): IDL set to NaN followed by getAttribute() 
PASS font.className (<font class>): IDL set to NaN followed by IDL get 
PASS font.className (<font class>): IDL set to Infinity should not throw 
PASS font.className (<font class>): IDL set to Infinity followed by getAttribute() 
PASS font.className (<font class>): IDL set to Infinity followed by IDL get 
PASS font.className (<font class>): IDL set to -Infinity should not throw 
PASS font.className (<font class>): IDL set to -Infinity followed by getAttribute() 
PASS font.className (<font class>): IDL set to -Infinity followed by IDL get 
PASS font.className (<font class>): IDL set to "\0" should not throw 
PASS font.className (<font class>): IDL set to "\0" followed by getAttribute() 
PASS font.className (<font class>): IDL set to "\0" followed by IDL get 
PASS font.className (<font class>): IDL set to null should not throw 
PASS font.className (<font class>): IDL set to null followed by getAttribute() 
PASS font.className (<font class>): IDL set to null followed by IDL get 
PASS font.className (<font class>): IDL set to object "test-toString" should not throw 
PASS font.className (<font class>): IDL set to object "test-toString" followed by getAttribute() 
PASS font.className (<font class>): IDL set to object "test-toString" followed by IDL get 
PASS font.className (<font class>): IDL set to object "test-valueOf" should not throw 
PASS font.className (<font class>): IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.className (<font class>): IDL set to object "test-valueOf" followed by IDL get 
PASS font.hidden: typeof IDL attribute 
PASS font.hidden: IDL get with DOM attribute unset 
PASS font.hidden: setAttribute() to "" followed by getAttribute() 
PASS font.hidden: setAttribute() to "" followed by IDL get 
PASS font.hidden: setAttribute() to " foo " followed by getAttribute() 
PASS font.hidden: setAttribute() to " foo " followed by IDL get 
PASS font.hidden: setAttribute() to undefined followed by getAttribute() 
PASS font.hidden: setAttribute() to undefined followed by IDL get 
PASS font.hidden: setAttribute() to null followed by getAttribute() 
PASS font.hidden: setAttribute() to null followed by IDL get 
PASS font.hidden: setAttribute() to 7 followed by getAttribute() 
PASS font.hidden: setAttribute() to 7 followed by IDL get 
PASS font.hidden: setAttribute() to 1.5 followed by getAttribute() 
PASS font.hidden: setAttribute() to 1.5 followed by IDL get 
PASS font.hidden: setAttribute() to true followed by getAttribute() 
PASS font.hidden: setAttribute() to true followed by IDL get 
PASS font.hidden: setAttribute() to false followed by getAttribute() 
PASS font.hidden: setAttribute() to false followed by IDL get 
PASS font.hidden: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.hidden: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.hidden: setAttribute() to NaN followed by getAttribute() 
PASS font.hidden: setAttribute() to NaN followed by IDL get 
PASS font.hidden: setAttribute() to Infinity followed by getAttribute() 
PASS font.hidden: setAttribute() to Infinity followed by IDL get 
PASS font.hidden: setAttribute() to -Infinity followed by getAttribute() 
PASS font.hidden: setAttribute() to -Infinity followed by IDL get 
PASS font.hidden: setAttribute() to "\0" followed by getAttribute() 
PASS font.hidden: setAttribute() to "\0" followed by IDL get 
PASS font.hidden: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.hidden: setAttribute() to object "test-toString" followed by IDL get 
PASS font.hidden: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.hidden: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.hidden: setAttribute() to "hidden" followed by getAttribute() 
PASS font.hidden: setAttribute() to "hidden" followed by IDL get 
PASS font.hidden: IDL set to "" should not throw 
PASS font.hidden: IDL set to "" followed by hasAttribute() 
PASS font.hidden: IDL set to "" followed by IDL get 
PASS font.hidden: IDL set to " foo " should not throw 
PASS font.hidden: IDL set to " foo " followed by hasAttribute() 
PASS font.hidden: IDL set to " foo " followed by IDL get 
PASS font.hidden: IDL set to undefined should not throw 
PASS font.hidden: IDL set to undefined followed by hasAttribute() 
PASS font.hidden: IDL set to undefined followed by IDL get 
PASS font.hidden: IDL set to null should not throw 
PASS font.hidden: IDL set to null followed by hasAttribute() 
PASS font.hidden: IDL set to null followed by IDL get 
PASS font.hidden: IDL set to 7 should not throw 
PASS font.hidden: IDL set to 7 followed by hasAttribute() 
PASS font.hidden: IDL set to 7 followed by IDL get 
PASS font.hidden: IDL set to 1.5 should not throw 
PASS font.hidden: IDL set to 1.5 followed by hasAttribute() 
PASS font.hidden: IDL set to 1.5 followed by IDL get 
PASS font.hidden: IDL set to true should not throw 
PASS font.hidden: IDL set to true followed by hasAttribute() 
PASS font.hidden: IDL set to true followed by IDL get 
PASS font.hidden: IDL set to false should not throw 
PASS font.hidden: IDL set to false followed by hasAttribute() 
PASS font.hidden: IDL set to false followed by IDL get 
PASS font.hidden: IDL set to object "[object Object]" should not throw 
PASS font.hidden: IDL set to object "[object Object]" followed by hasAttribute() 
PASS font.hidden: IDL set to object "[object Object]" followed by IDL get 
PASS font.hidden: IDL set to NaN should not throw 
PASS font.hidden: IDL set to NaN followed by hasAttribute() 
PASS font.hidden: IDL set to NaN followed by IDL get 
PASS font.hidden: IDL set to Infinity should not throw 
PASS font.hidden: IDL set to Infinity followed by hasAttribute() 
PASS font.hidden: IDL set to Infinity followed by IDL get 
PASS font.hidden: IDL set to -Infinity should not throw 
PASS font.hidden: IDL set to -Infinity followed by hasAttribute() 
PASS font.hidden: IDL set to -Infinity followed by IDL get 
PASS font.hidden: IDL set to "\0" should not throw 
PASS font.hidden: IDL set to "\0" followed by hasAttribute() 
PASS font.hidden: IDL set to "\0" followed by IDL get 
PASS font.hidden: IDL set to object "test-toString" should not throw 
PASS font.hidden: IDL set to object "test-toString" followed by hasAttribute() 
PASS font.hidden: IDL set to object "test-toString" followed by IDL get 
PASS font.hidden: IDL set to object "test-valueOf" should not throw 
PASS font.hidden: IDL set to object "test-valueOf" followed by hasAttribute() 
PASS font.hidden: IDL set to object "test-valueOf" followed by IDL get 
PASS font.accessKey: typeof IDL attribute 
PASS font.accessKey: IDL get with DOM attribute unset 
PASS font.accessKey: setAttribute() to "" followed by getAttribute() 
PASS font.accessKey: setAttribute() to "" followed by IDL get 
PASS font.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.accessKey: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.accessKey: setAttribute() to undefined followed by getAttribute() 
PASS font.accessKey: setAttribute() to undefined followed by IDL get 
PASS font.accessKey: setAttribute() to 7 followed by getAttribute() 
PASS font.accessKey: setAttribute() to 7 followed by IDL get 
PASS font.accessKey: setAttribute() to 1.5 followed by getAttribute() 
PASS font.accessKey: setAttribute() to 1.5 followed by IDL get 
PASS font.accessKey: setAttribute() to true followed by getAttribute() 
PASS font.accessKey: setAttribute() to true followed by IDL get 
PASS font.accessKey: setAttribute() to false followed by getAttribute() 
PASS font.accessKey: setAttribute() to false followed by IDL get 
PASS font.accessKey: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.accessKey: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.accessKey: setAttribute() to NaN followed by getAttribute() 
PASS font.accessKey: setAttribute() to NaN followed by IDL get 
PASS font.accessKey: setAttribute() to Infinity followed by getAttribute() 
PASS font.accessKey: setAttribute() to Infinity followed by IDL get 
PASS font.accessKey: setAttribute() to -Infinity followed by getAttribute() 
PASS font.accessKey: setAttribute() to -Infinity followed by IDL get 
PASS font.accessKey: setAttribute() to "\0" followed by getAttribute() 
PASS font.accessKey: setAttribute() to "\0" followed by IDL get 
PASS font.accessKey: setAttribute() to null followed by getAttribute() 
PASS font.accessKey: setAttribute() to null followed by IDL get 
PASS font.accessKey: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.accessKey: setAttribute() to object "test-toString" followed by IDL get 
PASS font.accessKey: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.accessKey: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.accessKey: IDL set to "" should not throw 
PASS font.accessKey: IDL set to "" followed by getAttribute() 
PASS font.accessKey: IDL set to "" followed by IDL get 
PASS font.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.accessKey: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.accessKey: IDL set to undefined should not throw 
PASS font.accessKey: IDL set to undefined followed by getAttribute() 
PASS font.accessKey: IDL set to undefined followed by IDL get 
PASS font.accessKey: IDL set to 7 should not throw 
PASS font.accessKey: IDL set to 7 followed by getAttribute() 
PASS font.accessKey: IDL set to 7 followed by IDL get 
PASS font.accessKey: IDL set to 1.5 should not throw 
PASS font.accessKey: IDL set to 1.5 followed by getAttribute() 
PASS font.accessKey: IDL set to 1.5 followed by IDL get 
PASS font.accessKey: IDL set to true should not throw 
PASS font.accessKey: IDL set to true followed by getAttribute() 
PASS font.accessKey: IDL set to true followed by IDL get 
PASS font.accessKey: IDL set to false should not throw 
PASS font.accessKey: IDL set to false followed by getAttribute() 
PASS font.accessKey: IDL set to false followed by IDL get 
PASS font.accessKey: IDL set to object "[object Object]" should not throw 
PASS font.accessKey: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.accessKey: IDL set to object "[object Object]" followed by IDL get 
PASS font.accessKey: IDL set to NaN should not throw 
PASS font.accessKey: IDL set to NaN followed by getAttribute() 
PASS font.accessKey: IDL set to NaN followed by IDL get 
PASS font.accessKey: IDL set to Infinity should not throw 
PASS font.accessKey: IDL set to Infinity followed by getAttribute() 
PASS font.accessKey: IDL set to Infinity followed by IDL get 
PASS font.accessKey: IDL set to -Infinity should not throw 
PASS font.accessKey: IDL set to -Infinity followed by getAttribute() 
PASS font.accessKey: IDL set to -Infinity followed by IDL get 
PASS font.accessKey: IDL set to "\0" should not throw 
PASS font.accessKey: IDL set to "\0" followed by getAttribute() 
PASS font.accessKey: IDL set to "\0" followed by IDL get 
PASS font.accessKey: IDL set to null should not throw 
PASS font.accessKey: IDL set to null followed by getAttribute() 
PASS font.accessKey: IDL set to null followed by IDL get 
PASS font.accessKey: IDL set to object "test-toString" should not throw 
PASS font.accessKey: IDL set to object "test-toString" followed by getAttribute() 
PASS font.accessKey: IDL set to object "test-toString" followed by IDL get 
PASS font.accessKey: IDL set to object "test-valueOf" should not throw 
PASS font.accessKey: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.accessKey: IDL set to object "test-valueOf" followed by IDL get 
PASS font.tabIndex: typeof IDL attribute 
PASS font.tabIndex: setAttribute() to -36 followed by getAttribute() 
PASS font.tabIndex: setAttribute() to -36 followed by IDL get 
PASS font.tabIndex: setAttribute() to -1 followed by getAttribute() 
PASS font.tabIndex: setAttribute() to -1 followed by IDL get 
PASS font.tabIndex: setAttribute() to 0 followed by getAttribute() 
PASS font.tabIndex: setAttribute() to 0 followed by IDL get 
PASS font.tabIndex: setAttribute() to 1 followed by getAttribute() 
PASS font.tabIndex: setAttribute() to 1 followed by IDL get 
PASS font.tabIndex: setAttribute() to 2147483647 followed by getAttribute() 
FAIL font.tabIndex: setAttribute() to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS font.tabIndex: setAttribute() to -2147483648 followed by getAttribute() 
FAIL font.tabIndex: setAttribute() to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS font.tabIndex: setAttribute() to "-1" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "-1" followed by IDL get 
PASS font.tabIndex: setAttribute() to "-0" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "-0" followed by IDL get 
PASS font.tabIndex: setAttribute() to "0" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "0" followed by IDL get 
PASS font.tabIndex: setAttribute() to "1" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "1" followed by IDL get 
PASS font.tabIndex: setAttribute() to "\t7" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "\t7" followed by IDL get 
PASS font.tabIndex: setAttribute() to "\f7" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "\f7" followed by IDL get 
PASS font.tabIndex: setAttribute() to " 7" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to " 7" followed by IDL get 
PASS font.tabIndex: setAttribute() to "\n7" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "\n7" followed by IDL get 
PASS font.tabIndex: setAttribute() to "\r7" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to "\r7" followed by IDL get 
PASS font.tabIndex: setAttribute() to 1.5 followed by getAttribute() 
PASS font.tabIndex: setAttribute() to 1.5 followed by IDL get 
PASS font.tabIndex: setAttribute() to object "2" followed by getAttribute() 
PASS font.tabIndex: setAttribute() to object "2" followed by IDL get 
PASS font.tabIndex: IDL set to -36 should not throw 
PASS font.tabIndex: IDL set to -36 followed by getAttribute() 
PASS font.tabIndex: IDL set to -36 followed by IDL get 
PASS font.tabIndex: IDL set to -1 should not throw 
PASS font.tabIndex: IDL set to -1 followed by getAttribute() 
PASS font.tabIndex: IDL set to -1 followed by IDL get 
PASS font.tabIndex: IDL set to 0 should not throw 
PASS font.tabIndex: IDL set to 0 followed by getAttribute() 
PASS font.tabIndex: IDL set to 0 followed by IDL get 
PASS font.tabIndex: IDL set to 1 should not throw 
PASS font.tabIndex: IDL set to 1 followed by getAttribute() 
PASS font.tabIndex: IDL set to 1 followed by IDL get 
PASS font.tabIndex: IDL set to 2147483647 should not throw 
PASS font.tabIndex: IDL set to 2147483647 followed by getAttribute() 
FAIL font.tabIndex: IDL set to 2147483647 followed by IDL get assert_equals: expected 2147483647 but got 32767
PASS font.tabIndex: IDL set to -2147483648 should not throw 
PASS font.tabIndex: IDL set to -2147483648 followed by getAttribute() 
FAIL font.tabIndex: IDL set to -2147483648 followed by IDL get assert_equals: expected -2147483648 but got -32768
PASS font.color: typeof IDL attribute 
PASS font.color: IDL get with DOM attribute unset 
PASS font.color: setAttribute() to "" followed by getAttribute() 
PASS font.color: setAttribute() to "" followed by IDL get 
PASS font.color: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.color: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.color: setAttribute() to undefined followed by getAttribute() 
PASS font.color: setAttribute() to undefined followed by IDL get 
PASS font.color: setAttribute() to 7 followed by getAttribute() 
PASS font.color: setAttribute() to 7 followed by IDL get 
PASS font.color: setAttribute() to 1.5 followed by getAttribute() 
PASS font.color: setAttribute() to 1.5 followed by IDL get 
PASS font.color: setAttribute() to true followed by getAttribute() 
PASS font.color: setAttribute() to true followed by IDL get 
PASS font.color: setAttribute() to false followed by getAttribute() 
PASS font.color: setAttribute() to false followed by IDL get 
PASS font.color: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.color: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.color: setAttribute() to NaN followed by getAttribute() 
PASS font.color: setAttribute() to NaN followed by IDL get 
PASS font.color: setAttribute() to Infinity followed by getAttribute() 
PASS font.color: setAttribute() to Infinity followed by IDL get 
PASS font.color: setAttribute() to -Infinity followed by getAttribute() 
PASS font.color: setAttribute() to -Infinity followed by IDL get 
PASS font.color: setAttribute() to "\0" followed by getAttribute() 
PASS font.color: setAttribute() to "\0" followed by IDL get 
PASS font.color: setAttribute() to null followed by getAttribute() 
PASS font.color: setAttribute() to null followed by IDL get 
PASS font.color: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.color: setAttribute() to object "test-toString" followed by IDL get 
PASS font.color: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.color: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.color: IDL set to "" should not throw 
PASS font.color: IDL set to "" followed by getAttribute() 
PASS font.color: IDL set to "" followed by IDL get 
PASS font.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.color: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.color: IDL set to undefined should not throw 
PASS font.color: IDL set to undefined followed by getAttribute() 
PASS font.color: IDL set to undefined followed by IDL get 
PASS font.color: IDL set to 7 should not throw 
PASS font.color: IDL set to 7 followed by getAttribute() 
PASS font.color: IDL set to 7 followed by IDL get 
PASS font.color: IDL set to 1.5 should not throw 
PASS font.color: IDL set to 1.5 followed by getAttribute() 
PASS font.color: IDL set to 1.5 followed by IDL get 
PASS font.color: IDL set to true should not throw 
PASS font.color: IDL set to true followed by getAttribute() 
PASS font.color: IDL set to true followed by IDL get 
PASS font.color: IDL set to false should not throw 
PASS font.color: IDL set to false followed by getAttribute() 
PASS font.color: IDL set to false followed by IDL get 
PASS font.color: IDL set to object "[object Object]" should not throw 
PASS font.color: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.color: IDL set to object "[object Object]" followed by IDL get 
PASS font.color: IDL set to NaN should not throw 
PASS font.color: IDL set to NaN followed by getAttribute() 
PASS font.color: IDL set to NaN followed by IDL get 
PASS font.color: IDL set to Infinity should not throw 
PASS font.color: IDL set to Infinity followed by getAttribute() 
PASS font.color: IDL set to Infinity followed by IDL get 
PASS font.color: IDL set to -Infinity should not throw 
PASS font.color: IDL set to -Infinity followed by getAttribute() 
PASS font.color: IDL set to -Infinity followed by IDL get 
PASS font.color: IDL set to "\0" should not throw 
PASS font.color: IDL set to "\0" followed by getAttribute() 
PASS font.color: IDL set to "\0" followed by IDL get 
PASS font.color: IDL set to null should not throw 
PASS font.color: IDL set to null followed by getAttribute() 
PASS font.color: IDL set to null followed by IDL get 
PASS font.color: IDL set to object "test-toString" should not throw 
PASS font.color: IDL set to object "test-toString" followed by getAttribute() 
PASS font.color: IDL set to object "test-toString" followed by IDL get 
PASS font.color: IDL set to object "test-valueOf" should not throw 
PASS font.color: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.color: IDL set to object "test-valueOf" followed by IDL get 
PASS font.face: typeof IDL attribute 
PASS font.face: IDL get with DOM attribute unset 
PASS font.face: setAttribute() to "" followed by getAttribute() 
PASS font.face: setAttribute() to "" followed by IDL get 
PASS font.face: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.face: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.face: setAttribute() to undefined followed by getAttribute() 
PASS font.face: setAttribute() to undefined followed by IDL get 
PASS font.face: setAttribute() to 7 followed by getAttribute() 
PASS font.face: setAttribute() to 7 followed by IDL get 
PASS font.face: setAttribute() to 1.5 followed by getAttribute() 
PASS font.face: setAttribute() to 1.5 followed by IDL get 
PASS font.face: setAttribute() to true followed by getAttribute() 
PASS font.face: setAttribute() to true followed by IDL get 
PASS font.face: setAttribute() to false followed by getAttribute() 
PASS font.face: setAttribute() to false followed by IDL get 
PASS font.face: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.face: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.face: setAttribute() to NaN followed by getAttribute() 
PASS font.face: setAttribute() to NaN followed by IDL get 
PASS font.face: setAttribute() to Infinity followed by getAttribute() 
PASS font.face: setAttribute() to Infinity followed by IDL get 
PASS font.face: setAttribute() to -Infinity followed by getAttribute() 
PASS font.face: setAttribute() to -Infinity followed by IDL get 
PASS font.face: setAttribute() to "\0" followed by getAttribute() 
PASS font.face: setAttribute() to "\0" followed by IDL get 
PASS font.face: setAttribute() to null followed by getAttribute() 
PASS font.face: setAttribute() to null followed by IDL get 
PASS font.face: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.face: setAttribute() to object "test-toString" followed by IDL get 
PASS font.face: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.face: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.face: IDL set to "" should not throw 
PASS font.face: IDL set to "" followed by getAttribute() 
PASS font.face: IDL set to "" followed by IDL get 
PASS font.face: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.face: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.face: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.face: IDL set to undefined should not throw 
PASS font.face: IDL set to undefined followed by getAttribute() 
PASS font.face: IDL set to undefined followed by IDL get 
PASS font.face: IDL set to 7 should not throw 
PASS font.face: IDL set to 7 followed by getAttribute() 
PASS font.face: IDL set to 7 followed by IDL get 
PASS font.face: IDL set to 1.5 should not throw 
PASS font.face: IDL set to 1.5 followed by getAttribute() 
PASS font.face: IDL set to 1.5 followed by IDL get 
PASS font.face: IDL set to true should not throw 
PASS font.face: IDL set to true followed by getAttribute() 
PASS font.face: IDL set to true followed by IDL get 
PASS font.face: IDL set to false should not throw 
PASS font.face: IDL set to false followed by getAttribute() 
PASS font.face: IDL set to false followed by IDL get 
PASS font.face: IDL set to object "[object Object]" should not throw 
PASS font.face: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.face: IDL set to object "[object Object]" followed by IDL get 
PASS font.face: IDL set to NaN should not throw 
PASS font.face: IDL set to NaN followed by getAttribute() 
PASS font.face: IDL set to NaN followed by IDL get 
PASS font.face: IDL set to Infinity should not throw 
PASS font.face: IDL set to Infinity followed by getAttribute() 
PASS font.face: IDL set to Infinity followed by IDL get 
PASS font.face: IDL set to -Infinity should not throw 
PASS font.face: IDL set to -Infinity followed by getAttribute() 
PASS font.face: IDL set to -Infinity followed by IDL get 
PASS font.face: IDL set to "\0" should not throw 
PASS font.face: IDL set to "\0" followed by getAttribute() 
PASS font.face: IDL set to "\0" followed by IDL get 
PASS font.face: IDL set to null should not throw 
PASS font.face: IDL set to null followed by getAttribute() 
PASS font.face: IDL set to null followed by IDL get 
PASS font.face: IDL set to object "test-toString" should not throw 
PASS font.face: IDL set to object "test-toString" followed by getAttribute() 
PASS font.face: IDL set to object "test-toString" followed by IDL get 
PASS font.face: IDL set to object "test-valueOf" should not throw 
PASS font.face: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.face: IDL set to object "test-valueOf" followed by IDL get 
PASS font.size: typeof IDL attribute 
PASS font.size: IDL get with DOM attribute unset 
PASS font.size: setAttribute() to "" followed by getAttribute() 
PASS font.size: setAttribute() to "" followed by IDL get 
PASS font.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.size: setAttribute() to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.size: setAttribute() to undefined followed by getAttribute() 
PASS font.size: setAttribute() to undefined followed by IDL get 
PASS font.size: setAttribute() to 7 followed by getAttribute() 
PASS font.size: setAttribute() to 7 followed by IDL get 
PASS font.size: setAttribute() to 1.5 followed by getAttribute() 
PASS font.size: setAttribute() to 1.5 followed by IDL get 
PASS font.size: setAttribute() to true followed by getAttribute() 
PASS font.size: setAttribute() to true followed by IDL get 
PASS font.size: setAttribute() to false followed by getAttribute() 
PASS font.size: setAttribute() to false followed by IDL get 
PASS font.size: setAttribute() to object "[object Object]" followed by getAttribute() 
PASS font.size: setAttribute() to object "[object Object]" followed by IDL get 
PASS font.size: setAttribute() to NaN followed by getAttribute() 
PASS font.size: setAttribute() to NaN followed by IDL get 
PASS font.size: setAttribute() to Infinity followed by getAttribute() 
PASS font.size: setAttribute() to Infinity followed by IDL get 
PASS font.size: setAttribute() to -Infinity followed by getAttribute() 
PASS font.size: setAttribute() to -Infinity followed by IDL get 
PASS font.size: setAttribute() to "\0" followed by getAttribute() 
PASS font.size: setAttribute() to "\0" followed by IDL get 
PASS font.size: setAttribute() to null followed by getAttribute() 
PASS font.size: setAttribute() to null followed by IDL get 
PASS font.size: setAttribute() to object "test-toString" followed by getAttribute() 
PASS font.size: setAttribute() to object "test-toString" followed by IDL get 
PASS font.size: setAttribute() to object "test-valueOf" followed by getAttribute() 
PASS font.size: setAttribute() to object "test-valueOf" followed by IDL get 
PASS font.size: IDL set to "" should not throw 
PASS font.size: IDL set to "" followed by getAttribute() 
PASS font.size: IDL set to "" followed by IDL get 
PASS font.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " should not throw 
PASS font.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by getAttribute() 
PASS font.size: IDL set to " \0\x01\x02\x03\x04\x05\x06\x07 \b\t\n\v\f\r\x0e\x0f \x10\x11\x12\x13\x14\x15\x16\x17 \x18\x19\x1a\x1b\x1c\x1d\x1e\x1f  foo " followed by IDL get 
PASS font.size: IDL set to undefined should not throw 
PASS font.size: IDL set to undefined followed by getAttribute() 
PASS font.size: IDL set to undefined followed by IDL get 
PASS font.size: IDL set to 7 should not throw 
PASS font.size: IDL set to 7 followed by getAttribute() 
PASS font.size: IDL set to 7 followed by IDL get 
PASS font.size: IDL set to 1.5 should not throw 
PASS font.size: IDL set to 1.5 followed by getAttribute() 
PASS font.size: IDL set to 1.5 followed by IDL get 
PASS font.size: IDL set to true should not throw 
PASS font.size: IDL set to true followed by getAttribute() 
PASS font.size: IDL set to true followed by IDL get 
PASS font.size: IDL set to false should not throw 
PASS font.size: IDL set to false followed by getAttribute() 
PASS font.size: IDL set to false followed by IDL get 
PASS font.size: IDL set to object "[object Object]" should not throw 
PASS font.size: IDL set to object "[object Object]" followed by getAttribute() 
PASS font.size: IDL set to object "[object Object]" followed by IDL get 
PASS font.size: IDL set to NaN should not throw 
PASS font.size: IDL set to NaN followed by getAttribute() 
PASS font.size: IDL set to NaN followed by IDL get 
PASS font.size: IDL set to Infinity should not throw 
PASS font.size: IDL set to Infinity followed by getAttribute() 
PASS font.size: IDL set to Infinity followed by IDL get 
PASS font.size: IDL set to -Infinity should not throw 
PASS font.size: IDL set to -Infinity followed by getAttribute() 
PASS font.size: IDL set to -Infinity followed by IDL get 
PASS font.size: IDL set to "\0" should not throw 
PASS font.size: IDL set to "\0" followed by getAttribute() 
PASS font.size: IDL set to "\0" followed by IDL get 
PASS font.size: IDL set to null should not throw 
PASS font.size: IDL set to null followed by getAttribute() 
PASS font.size: IDL set to null followed by IDL get 
PASS font.size: IDL set to object "test-toString" should not throw 
PASS font.size: IDL set to object "test-toString" followed by getAttribute() 
PASS font.size: IDL set to object "test-toString" followed by IDL get 
PASS font.size: IDL set to object "test-valueOf" should not throw 
PASS font.size: IDL set to object "test-valueOf" followed by getAttribute() 
PASS font.size: IDL set to object "test-valueOf" followed by IDL get 
Harness: the test ran to completion.

